{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/form/Form.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, createVNode as _createVNode } from \"vue\";\nimport { FORM_KEY, truthProp, numericProp, preventDefault, createNamespace } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"form\");\nconst formProps = {\n  colon: Boolean,\n  disabled: Boolean,\n  readonly: Boolean,\n  required: [Boolean, String],\n  showError: Boolean,\n  labelWidth: numericProp,\n  labelAlign: String,\n  inputAlign: String,\n  scrollToError: Boolean,\n  scrollToErrorPosition: String,\n  validateFirst: Boolean,\n  submitOnEnter: truthProp,\n  showErrorMessage: truthProp,\n  errorMessageAlign: String,\n  validateTrigger: {\n    type: [String, Array],\n    default: \"onBlur\"\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: formProps,\n  emits: [\"submit\", \"failed\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(FORM_KEY);\n    const getFieldsByNames = (names) => {\n      if (names) {\n        return children.filter((field) => names.includes(field.name));\n      }\n      return children;\n    };\n    const validateSeq = (names) => new Promise((resolve, reject) => {\n      const errors = [];\n      const fields = getFieldsByNames(names);\n      fields.reduce((promise, field) => promise.then(() => {\n        if (!errors.length) {\n          return field.validate().then((error) => {\n            if (error) {\n              errors.push(error);\n            }\n          });\n        }\n      }), Promise.resolve()).then(() => {\n        if (errors.length) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      });\n    });\n    const validateAll = (names) => new Promise((resolve, reject) => {\n      const fields = getFieldsByNames(names);\n      Promise.all(fields.map((item) => item.validate())).then((errors) => {\n        errors = errors.filter(Boolean);\n        if (errors.length) {\n          reject(errors);\n        } else {\n          resolve();\n        }\n      });\n    });\n    const validateField = (name2) => {\n      const matched = children.find((item) => item.name === name2);\n      if (matched) {\n        return new Promise((resolve, reject) => {\n          matched.validate().then((error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve();\n            }\n          });\n        });\n      }\n      return Promise.reject();\n    };\n    const validate = (name2) => {\n      if (typeof name2 === \"string\") {\n        return validateField(name2);\n      }\n      return props.validateFirst ? validateSeq(name2) : validateAll(name2);\n    };\n    const resetValidation = (name2) => {\n      if (typeof name2 === \"string\") {\n        name2 = [name2];\n      }\n      const fields = getFieldsByNames(name2);\n      fields.forEach((item) => {\n        item.resetValidation();\n      });\n    };\n    const getValidationStatus = () => children.reduce((form, field) => {\n      form[field.name] = field.getValidationStatus();\n      return form;\n    }, {});\n    const scrollToField = (name2, options) => {\n      children.some((item) => {\n        if (item.name === name2) {\n          item.$el.scrollIntoView(options);\n          return true;\n        }\n        return false;\n      });\n    };\n    const getValues = () => children.reduce((form, field) => {\n      if (field.name !== void 0) {\n        form[field.name] = field.formValue.value;\n      }\n      return form;\n    }, {});\n    const submit = () => {\n      const values = getValues();\n      validate().then(() => emit(\"submit\", values)).catch((errors) => {\n        emit(\"failed\", {\n          values,\n          errors\n        });\n        const {\n          scrollToError,\n          scrollToErrorPosition\n        } = props;\n        if (scrollToError && errors[0].name) {\n          scrollToField(errors[0].name, scrollToErrorPosition ? {\n            block: scrollToErrorPosition\n          } : void 0);\n        }\n      });\n    };\n    const onSubmit = (event) => {\n      preventDefault(event);\n      submit();\n    };\n    linkChildren({\n      props\n    });\n    useExpose({\n      submit,\n      validate,\n      getValues,\n      scrollToField,\n      resetValidation,\n      getValidationStatus\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"form\", {\n        \"class\": bem(),\n        \"onSubmit\": onSubmit\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  formProps\n};\n",
      "start": 1756100544628,
      "end": 1756100544656,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544656,
      "end": 1756100544656,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100544656,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544657,
      "end": 1756100544657,
      "order": "normal"
    }
  ]
}
