{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/template.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import assignInWith from './assignInWith.js';\nimport attempt from './attempt.js';\nimport baseValues from './_baseValues.js';\nimport customDefaultsAssignIn from './_customDefaultsAssignIn.js';\nimport escapeStringChar from './_escapeStringChar.js';\nimport isError from './isError.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keys from './keys.js';\nimport reInterpolate from './_reInterpolate.js';\nimport templateSettings from './templateSettings.js';\nimport toString from './toString.js';\n\n/** Error message constants. */\nvar INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n/** Used to match empty string literals in compiled template source. */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/**\n * Used to validate the `validate` option in `_.template` variable.\n *\n * Forbids characters which could potentially change the meaning of the function argument definition:\n * - \"(),\" (modification of function parameters)\n * - \"=\" (default value)\n * - \"[]{}\" (destructuring of function parameters)\n * - \"/\" (beginning of a comment)\n * - whitespace\n */\nvar reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n/**\n * Used to match\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters. */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals. */\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a compiled template function that can interpolate data properties\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n * properties may be accessed as free variables in the template. If a setting\n * object is given, it takes precedence over `_.templateSettings` values.\n *\n * **Note:** In the development build `_.template` utilizes\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * for easier debugging.\n *\n * For more information on precompiling templates see\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n *\n * For more information on Chrome extension sandboxes see\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The template string.\n * @param {Object} [options={}] The options object.\n * @param {RegExp} [options.escape=_.templateSettings.escape]\n *  The HTML \"escape\" delimiter.\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n *  The \"evaluate\" delimiter.\n * @param {Object} [options.imports=_.templateSettings.imports]\n *  An object to import into the template as free variables.\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n *  The \"interpolate\" delimiter.\n * @param {string} [options.sourceURL='templateSources[n]']\n *  The sourceURL of the compiled template.\n * @param {string} [options.variable='obj']\n *  The data object variable name.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the compiled template function.\n * @example\n *\n * // Use the \"interpolate\" delimiter to create a compiled template.\n * var compiled = _.template('hello <%= user %>!');\n * compiled({ 'user': 'fred' });\n * // => 'hello fred!'\n *\n * // Use the HTML \"escape\" delimiter to escape data property values.\n * var compiled = _.template('<b><%- value %></b>');\n * compiled({ 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the internal `print` function in \"evaluate\" delimiters.\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\n * compiled({ 'user': 'barney' });\n * // => 'hello barney!'\n *\n * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n * // Disable support by replacing the \"interpolate\" delimiter.\n * var compiled = _.template('hello ${ user }!');\n * compiled({ 'user': 'pebbles' });\n * // => 'hello pebbles!'\n *\n * // Use backslashes to treat delimiters as plain text.\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n * compiled({ 'value': 'ignored' });\n * // => '<%- value %>'\n *\n * // Use the `imports` option to import `jQuery` as `jq`.\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n *\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n * //   var __t, __p = '';\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n * //   return __p;\n * // }\n *\n * // Use custom template delimiters.\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n * var compiled = _.template('hello {{ user }}!');\n * compiled({ 'user': 'mustache' });\n * // => 'hello mustache!'\n *\n * // Use the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and stack traces.\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(string, options, guard) {\n  // Based on John Resig's `tmpl` implementation\n  // (http://ejohn.org/blog/javascript-micro-templating/)\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n\n  if (guard && isIterateeCall(string, options, guard)) {\n    options = undefined;\n  }\n  string = toString(string);\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n      importsKeys = keys(imports),\n      importsValues = baseValues(imports, importsKeys);\n\n  var isEscaping,\n      isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // Compile the regexp to match each delimiter.\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  // Use a sourceURL for easier debugging.\n  // The sourceURL gets injected into the source that's eval-ed, so be careful\n  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n  // and escape the comment, thus injecting code that gets evaled.\n  var sourceURL = hasOwnProperty.call(options, 'sourceURL')\n    ? ('//# sourceURL=' +\n       (options.sourceURL + '').replace(/\\s/g, ' ') +\n       '\\n')\n    : '';\n\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // Escape characters that can't be included in string literals.\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // Replace delimiters with snippets.\n    if (escapeValue) {\n      isEscaping = true;\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // The JS engine embedded in Adobe products needs `match` returned in\n    // order to produce the correct `offset` value.\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // If `variable` is not specified wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain.\n  var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n  if (!variable) {\n    source = 'with (obj) {\\n' + source + '\\n}\\n';\n  }\n  // Throw an error if a forbidden character was found in `variable`, to prevent\n  // potential command injection attacks.\n  else if (reForbiddenIdentifierChars.test(variable)) {\n    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n  }\n\n  // Cleanup code by stripping empty strings.\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // Frame code as the function body.\n  source = 'function(' + (variable || 'obj') + ') {\\n' +\n    (variable\n      ? ''\n      : 'obj || (obj = {});\\n'\n    ) +\n    \"var __t, __p = ''\" +\n    (isEscaping\n       ? ', __e = _.escape'\n       : ''\n    ) +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  var result = attempt(function() {\n    return Function(importsKeys, sourceURL + 'return ' + source)\n      .apply(undefined, importsValues);\n  });\n\n  // Provide the compiled function's source by its `toString` method or\n  // the `source` property as a convenience for inlining compiled templates.\n  result.source = source;\n  if (isError(result)) {\n    throw result;\n  }\n  return result;\n}\n\nexport default template;\n",
      "start": 1756100542689,
      "end": 1756100542706,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100542706,
      "end": 1756100542706,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import assignInWith from \"./assignInWith.js\";\nimport attempt from \"./attempt.js\";\nimport baseValues from \"./_baseValues.js\";\nimport customDefaultsAssignIn from \"./_customDefaultsAssignIn.js\";\nimport escapeStringChar from \"./_escapeStringChar.js\";\nimport isError from \"./isError.js\";\nimport isIterateeCall from \"./_isIterateeCall.js\";\nimport keys from \"./keys.js\";\nimport reInterpolate from \"./_reInterpolate.js\";\nimport templateSettings from \"./templateSettings.js\";\nimport toString from \"./toString.js\";\nvar INVALID_TEMPL_VAR_ERROR_TEXT = \"Invalid `variable` option passed into `_.template`\";\nvar reEmptyStringLeading = /\\b__p \\+= '';/g, reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g, reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\nvar reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\nvar reNoMatch = /($^)/;\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nfunction template(string, options, guard) {\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n  if (guard && isIterateeCall(string, options, guard)) {\n    options = void 0;\n  }\n  string = toString(string);\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);\n  var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = \"__p += '\";\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + \"|\" + interpolate.source + \"|\" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + \"|\" + (options.evaluate || reNoMatch).source + \"|$\",\n    \"g\"\n  );\n  var sourceURL = hasOwnProperty.call(options, \"sourceURL\") ? \"//# sourceURL=\" + (options.sourceURL + \"\").replace(/\\s/g, \" \") + \"\\n\" : \"\";\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n    if (escapeValue) {\n      isEscaping = true;\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n    return match;\n  });\n  source += \"';\\n\";\n  var variable = hasOwnProperty.call(options, \"variable\") && options.variable;\n  if (!variable) {\n    source = \"with (obj) {\\n\" + source + \"\\n}\\n\";\n  } else if (reForbiddenIdentifierChars.test(variable)) {\n    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n  }\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, \"\") : source).replace(reEmptyStringMiddle, \"$1\").replace(reEmptyStringTrailing, \"$1;\");\n  source = \"function(\" + (variable || \"obj\") + \") {\\n\" + (variable ? \"\" : \"obj || (obj = {});\\n\") + \"var __t, __p = ''\" + (isEscaping ? \", __e = _.escape\" : \"\") + (isEvaluating ? \", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\" : \";\\n\") + source + \"return __p\\n}\";\n  var result = attempt(function() {\n    return Function(importsKeys, sourceURL + \"return \" + source).apply(void 0, importsValues);\n  });\n  result.source = source;\n  if (isError(result)) {\n    throw result;\n  }\n  return result;\n}\nexport default template;\n",
      "start": 1756100542706,
      "end": 1756100544671,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/template.js\"],\n  \"sourcesContent\": [\"import assignInWith from './assignInWith.js';\\nimport attempt from './attempt.js';\\nimport baseValues from './_baseValues.js';\\nimport customDefaultsAssignIn from './_customDefaultsAssignIn.js';\\nimport escapeStringChar from './_escapeStringChar.js';\\nimport isError from './isError.js';\\nimport isIterateeCall from './_isIterateeCall.js';\\nimport keys from './keys.js';\\nimport reInterpolate from './_reInterpolate.js';\\nimport templateSettings from './templateSettings.js';\\nimport toString from './toString.js';\\n\\n/** Error message constants. */\\nvar INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\\n\\n/** Used to match empty string literals in compiled template source. */\\nvar reEmptyStringLeading = /\\\\b__p \\\\+= '';/g,\\n    reEmptyStringMiddle = /\\\\b(__p \\\\+=) '' \\\\+/g,\\n    reEmptyStringTrailing = /(__e\\\\(.*?\\\\)|\\\\b__t\\\\)) \\\\+\\\\n'';/g;\\n\\n/**\\n * Used to validate the `validate` option in `_.template` variable.\\n *\\n * Forbids characters which could potentially change the meaning of the function argument definition:\\n * - \\\"(),\\\" (modification of function parameters)\\n * - \\\"=\\\" (default value)\\n * - \\\"[]{}\\\" (destructuring of function parameters)\\n * - \\\"/\\\" (beginning of a comment)\\n * - whitespace\\n */\\nvar reForbiddenIdentifierChars = /[()=,{}\\\\[\\\\]\\\\/\\\\s]/;\\n\\n/**\\n * Used to match\\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\\n */\\nvar reEsTemplate = /\\\\$\\\\{([^\\\\\\\\}]*(?:\\\\\\\\.[^\\\\\\\\}]*)*)\\\\}/g;\\n\\n/** Used to ensure capturing order of template delimiters. */\\nvar reNoMatch = /($^)/;\\n\\n/** Used to match unescaped characters in compiled string literals. */\\nvar reUnescapedString = /['\\\\n\\\\r\\\\u2028\\\\u2029\\\\\\\\]/g;\\n\\n/** Used for built-in method references. */\\nvar objectProto = Object.prototype;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/**\\n * Creates a compiled template function that can interpolate data properties\\n * in \\\"interpolate\\\" delimiters, HTML-escape interpolated data properties in\\n * \\\"escape\\\" delimiters, and execute JavaScript in \\\"evaluate\\\" delimiters. Data\\n * properties may be accessed as free variables in the template. If a setting\\n * object is given, it takes precedence over `_.templateSettings` values.\\n *\\n * **Note:** In the development build `_.template` utilizes\\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\\n * for easier debugging.\\n *\\n * For more information on precompiling templates see\\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\\n *\\n * For more information on Chrome extension sandboxes see\\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category String\\n * @param {string} [string=''] The template string.\\n * @param {Object} [options={}] The options object.\\n * @param {RegExp} [options.escape=_.templateSettings.escape]\\n *  The HTML \\\"escape\\\" delimiter.\\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\\n *  The \\\"evaluate\\\" delimiter.\\n * @param {Object} [options.imports=_.templateSettings.imports]\\n *  An object to import into the template as free variables.\\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\\n *  The \\\"interpolate\\\" delimiter.\\n * @param {string} [options.sourceURL='templateSources[n]']\\n *  The sourceURL of the compiled template.\\n * @param {string} [options.variable='obj']\\n *  The data object variable name.\\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n * @returns {Function} Returns the compiled template function.\\n * @example\\n *\\n * // Use the \\\"interpolate\\\" delimiter to create a compiled template.\\n * var compiled = _.template('hello <%= user %>!');\\n * compiled({ 'user': 'fred' });\\n * // => 'hello fred!'\\n *\\n * // Use the HTML \\\"escape\\\" delimiter to escape data property values.\\n * var compiled = _.template('<b><%- value %></b>');\\n * compiled({ 'value': '<script>' });\\n * // => '<b>&lt;script&gt;</b>'\\n *\\n * // Use the \\\"evaluate\\\" delimiter to execute JavaScript and generate HTML.\\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\\n * compiled({ 'users': ['fred', 'barney'] });\\n * // => '<li>fred</li><li>barney</li>'\\n *\\n * // Use the internal `print` function in \\\"evaluate\\\" delimiters.\\n * var compiled = _.template('<% print(\\\"hello \\\" + user); %>!');\\n * compiled({ 'user': 'barney' });\\n * // => 'hello barney!'\\n *\\n * // Use the ES template literal delimiter as an \\\"interpolate\\\" delimiter.\\n * // Disable support by replacing the \\\"interpolate\\\" delimiter.\\n * var compiled = _.template('hello ${ user }!');\\n * compiled({ 'user': 'pebbles' });\\n * // => 'hello pebbles!'\\n *\\n * // Use backslashes to treat delimiters as plain text.\\n * var compiled = _.template('<%= \\\"\\\\\\\\<%- value %\\\\\\\\>\\\" %>');\\n * compiled({ 'value': 'ignored' });\\n * // => '<%- value %>'\\n *\\n * // Use the `imports` option to import `jQuery` as `jq`.\\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\\n * compiled({ 'users': ['fred', 'barney'] });\\n * // => '<li>fred</li><li>barney</li>'\\n *\\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\\n * compiled(data);\\n * // => Find the source of \\\"greeting.jst\\\" under the Sources tab or Resources panel of the web inspector.\\n *\\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\\n * compiled.source;\\n * // => function(data) {\\n * //   var __t, __p = '';\\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\\n * //   return __p;\\n * // }\\n *\\n * // Use custom template delimiters.\\n * _.templateSettings.interpolate = /{{([\\\\s\\\\S]+?)}}/g;\\n * var compiled = _.template('hello {{ user }}!');\\n * compiled({ 'user': 'mustache' });\\n * // => 'hello mustache!'\\n *\\n * // Use the `source` property to inline compiled templates for meaningful\\n * // line numbers in error messages and stack traces.\\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\\\\n *   var JST = {\\\\\\n *     \\\"main\\\": ' + _.template(mainText).source + '\\\\\\n *   };\\\\\\n * ');\\n */\\nfunction template(string, options, guard) {\\n  // Based on John Resig's `tmpl` implementation\\n  // (http://ejohn.org/blog/javascript-micro-templating/)\\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\\n\\n  if (guard && isIterateeCall(string, options, guard)) {\\n    options = undefined;\\n  }\\n  string = toString(string);\\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\\n\\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\\n      importsKeys = keys(imports),\\n      importsValues = baseValues(imports, importsKeys);\\n\\n  var isEscaping,\\n      isEvaluating,\\n      index = 0,\\n      interpolate = options.interpolate || reNoMatch,\\n      source = \\\"__p += '\\\";\\n\\n  // Compile the regexp to match each delimiter.\\n  var reDelimiters = RegExp(\\n    (options.escape || reNoMatch).source + '|' +\\n    interpolate.source + '|' +\\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\\n    (options.evaluate || reNoMatch).source + '|$'\\n  , 'g');\\n\\n  // Use a sourceURL for easier debugging.\\n  // The sourceURL gets injected into the source that's eval-ed, so be careful\\n  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\\n  // and escape the comment, thus injecting code that gets evaled.\\n  var sourceURL = hasOwnProperty.call(options, 'sourceURL')\\n    ? ('//# sourceURL=' +\\n       (options.sourceURL + '').replace(/\\\\s/g, ' ') +\\n       '\\\\n')\\n    : '';\\n\\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\\n    interpolateValue || (interpolateValue = esTemplateValue);\\n\\n    // Escape characters that can't be included in string literals.\\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\\n\\n    // Replace delimiters with snippets.\\n    if (escapeValue) {\\n      isEscaping = true;\\n      source += \\\"' +\\\\n__e(\\\" + escapeValue + \\\") +\\\\n'\\\";\\n    }\\n    if (evaluateValue) {\\n      isEvaluating = true;\\n      source += \\\"';\\\\n\\\" + evaluateValue + \\\";\\\\n__p += '\\\";\\n    }\\n    if (interpolateValue) {\\n      source += \\\"' +\\\\n((__t = (\\\" + interpolateValue + \\\")) == null ? '' : __t) +\\\\n'\\\";\\n    }\\n    index = offset + match.length;\\n\\n    // The JS engine embedded in Adobe products needs `match` returned in\\n    // order to produce the correct `offset` value.\\n    return match;\\n  });\\n\\n  source += \\\"';\\\\n\\\";\\n\\n  // If `variable` is not specified wrap a with-statement around the generated\\n  // code to add the data object to the top of the scope chain.\\n  var variable = hasOwnProperty.call(options, 'variable') && options.variable;\\n  if (!variable) {\\n    source = 'with (obj) {\\\\n' + source + '\\\\n}\\\\n';\\n  }\\n  // Throw an error if a forbidden character was found in `variable`, to prevent\\n  // potential command injection attacks.\\n  else if (reForbiddenIdentifierChars.test(variable)) {\\n    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\\n  }\\n\\n  // Cleanup code by stripping empty strings.\\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\\n    .replace(reEmptyStringMiddle, '$1')\\n    .replace(reEmptyStringTrailing, '$1;');\\n\\n  // Frame code as the function body.\\n  source = 'function(' + (variable || 'obj') + ') {\\\\n' +\\n    (variable\\n      ? ''\\n      : 'obj || (obj = {});\\\\n'\\n    ) +\\n    \\\"var __t, __p = ''\\\" +\\n    (isEscaping\\n       ? ', __e = _.escape'\\n       : ''\\n    ) +\\n    (isEvaluating\\n      ? ', __j = Array.prototype.join;\\\\n' +\\n        \\\"function print() { __p += __j.call(arguments, '') }\\\\n\\\"\\n      : ';\\\\n'\\n    ) +\\n    source +\\n    'return __p\\\\n}';\\n\\n  var result = attempt(function() {\\n    return Function(importsKeys, sourceURL + 'return ' + source)\\n      .apply(undefined, importsValues);\\n  });\\n\\n  // Provide the compiled function's source by its `toString` method or\\n  // the `source` property as a convenience for inlining compiled templates.\\n  result.source = source;\\n  if (isError(result)) {\\n    throw result;\\n  }\\n  return result;\\n}\\n\\nexport default template;\\n\"],\n  \"mappings\": \"AAAA,OAAO,kBAAkB;AACzB,OAAO,aAAa;AACpB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,aAAa;AACpB,OAAO,oBAAoB;AAC3B,OAAO,UAAU;AACjB,OAAO,mBAAmB;AAC1B,OAAO,sBAAsB;AAC7B,OAAO,cAAc;AAGrB,IAAI,+BAA+B;AAGnC,IAAI,uBAAuB,kBACvB,sBAAsB,sBACtB,wBAAwB;AAY5B,IAAI,6BAA6B;AAMjC,IAAI,eAAe;AAGnB,IAAI,YAAY;AAGhB,IAAI,oBAAoB;AAGxB,IAAI,cAAc,OAAO;AAGzB,IAAI,iBAAiB,YAAY;AA0GjC,SAAS,SAAS,QAAQ,SAAS,OAAO;AAIxC,MAAI,WAAW,iBAAiB,QAAQ,EAAE,oBAAoB;AAE9D,MAAI,SAAS,eAAe,QAAQ,SAAS,KAAK,GAAG;AACnD,cAAU;AAAA,EACZ;AACA,WAAS,SAAS,MAAM;AACxB,YAAU,aAAa,CAAC,GAAG,SAAS,UAAU,sBAAsB;AAEpE,MAAI,UAAU,aAAa,CAAC,GAAG,QAAQ,SAAS,SAAS,SAAS,sBAAsB,GACpF,cAAc,KAAK,OAAO,GAC1B,gBAAgB,WAAW,SAAS,WAAW;AAEnD,MAAI,YACA,cACA,QAAQ,GACR,cAAc,QAAQ,eAAe,WACrC,SAAS;AAGb,MAAI,eAAe;AAAA,KAChB,QAAQ,UAAU,WAAW,SAAS,MACvC,YAAY,SAAS,OACpB,gBAAgB,gBAAgB,eAAe,WAAW,SAAS,OACnE,QAAQ,YAAY,WAAW,SAAS;AAAA,IACzC;AAAA,EAAG;AAML,MAAI,YAAY,eAAe,KAAK,SAAS,WAAW,IACnD,oBACC,QAAQ,YAAY,IAAI,QAAQ,OAAO,GAAG,IAC3C,OACD;AAEJ,SAAO,QAAQ,cAAc,SAAS,OAAO,aAAa,kBAAkB,iBAAiB,eAAe,QAAQ;AAClH,yBAAqB,mBAAmB;AAGxC,cAAU,OAAO,MAAM,OAAO,MAAM,EAAE,QAAQ,mBAAmB,gBAAgB;AAGjF,QAAI,aAAa;AACf,mBAAa;AACb,gBAAU,cAAc,cAAc;AAAA,IACxC;AACA,QAAI,eAAe;AACjB,qBAAe;AACf,gBAAU,SAAS,gBAAgB;AAAA,IACrC;AACA,QAAI,kBAAkB;AACpB,gBAAU,mBAAmB,mBAAmB;AAAA,IAClD;AACA,YAAQ,SAAS,MAAM;AAIvB,WAAO;AAAA,EACT,CAAC;AAED,YAAU;AAIV,MAAI,WAAW,eAAe,KAAK,SAAS,UAAU,KAAK,QAAQ;AACnE,MAAI,CAAC,UAAU;AACb,aAAS,mBAAmB,SAAS;AAAA,EACvC,WAGS,2BAA2B,KAAK,QAAQ,GAAG;AAClD,UAAM,IAAI,MAAM,4BAA4B;AAAA,EAC9C;AAGA,YAAU,eAAe,OAAO,QAAQ,sBAAsB,EAAE,IAAI,QACjE,QAAQ,qBAAqB,IAAI,EACjC,QAAQ,uBAAuB,KAAK;AAGvC,WAAS,eAAe,YAAY,SAAS,WAC1C,WACG,KACA,0BAEJ,uBACC,aACI,qBACA,OAEJ,eACG,yFAEA,SAEJ,SACA;AAEF,MAAI,SAAS,QAAQ,WAAW;AAC9B,WAAO,SAAS,aAAa,YAAY,YAAY,MAAM,EACxD,MAAM,QAAW,aAAa;AAAA,EACnC,CAAC;AAID,SAAO,SAAS;AAChB,MAAI,QAAQ,MAAM,GAAG;AACnB,UAAM;AAAA,EACR;AACA,SAAO;AACT;AAEA,eAAe;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544671,
      "end": 1756100544671,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544671,
      "end": 1756100544671,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544671,
      "end": 1756100544671,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544671,
      "end": 1756100544671,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544671,
      "end": 1756100544671,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544671,
      "end": 1756100544671,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544672,
      "end": 1756100544672,
      "order": "normal"
    }
  ]
}
