{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/notice-bar/NoticeBar.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watch, reactive, defineComponent, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nimport { isDef, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { raf, useRect, doubleRaf, useEventListener, onMountedOrActivated } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nconst [name, bem] = createNamespace(\"notice-bar\");\nconst noticeBarProps = {\n  text: String,\n  mode: String,\n  color: String,\n  delay: makeNumericProp(1),\n  speed: makeNumericProp(60),\n  leftIcon: String,\n  wrapable: Boolean,\n  background: String,\n  scrollable: {\n    type: Boolean,\n    default: null\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: noticeBarProps,\n  emits: [\"close\", \"replay\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let wrapWidth = 0;\n    let contentWidth = 0;\n    let startTimer;\n    const wrapRef = ref();\n    const contentRef = ref();\n    const state = reactive({\n      show: true,\n      offset: 0,\n      duration: 0\n    });\n    const renderLeftIcon = () => {\n      if (slots[\"left-icon\"]) {\n        return slots[\"left-icon\"]();\n      }\n      if (props.leftIcon) {\n        return _createVNode(Icon, {\n          \"class\": bem(\"left-icon\"),\n          \"name\": props.leftIcon\n        }, null);\n      }\n    };\n    const getRightIconName = () => {\n      if (props.mode === \"closeable\") {\n        return \"cross\";\n      }\n      if (props.mode === \"link\") {\n        return \"arrow\";\n      }\n    };\n    const onClickRightIcon = (event) => {\n      if (props.mode === \"closeable\") {\n        state.show = false;\n        emit(\"close\", event);\n      }\n    };\n    const renderRightIcon = () => {\n      if (slots[\"right-icon\"]) {\n        return slots[\"right-icon\"]();\n      }\n      const name2 = getRightIconName();\n      if (name2) {\n        return _createVNode(Icon, {\n          \"name\": name2,\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, null);\n      }\n    };\n    const onTransitionEnd = () => {\n      state.offset = wrapWidth;\n      state.duration = 0;\n      raf(() => {\n        doubleRaf(() => {\n          state.offset = -contentWidth;\n          state.duration = (contentWidth + wrapWidth) / +props.speed;\n          emit(\"replay\");\n        });\n      });\n    };\n    const renderMarquee = () => {\n      const ellipsis = props.scrollable === false && !props.wrapable;\n      const style = {\n        transform: state.offset ? `translateX(${state.offset}px)` : \"\",\n        transitionDuration: `${state.duration}s`\n      };\n      return _createVNode(\"div\", {\n        \"ref\": wrapRef,\n        \"role\": \"marquee\",\n        \"class\": bem(\"wrap\")\n      }, [_createVNode(\"div\", {\n        \"ref\": contentRef,\n        \"style\": style,\n        \"class\": [bem(\"content\"), {\n          \"van-ellipsis\": ellipsis\n        }],\n        \"onTransitionend\": onTransitionEnd\n      }, [slots.default ? slots.default() : props.text])]);\n    };\n    const reset = () => {\n      const {\n        delay,\n        speed,\n        scrollable\n      } = props;\n      const ms = isDef(delay) ? +delay * 1e3 : 0;\n      wrapWidth = 0;\n      contentWidth = 0;\n      state.offset = 0;\n      state.duration = 0;\n      clearTimeout(startTimer);\n      startTimer = setTimeout(() => {\n        if (!wrapRef.value || !contentRef.value || scrollable === false) {\n          return;\n        }\n        const wrapRefWidth = useRect(wrapRef).width;\n        const contentRefWidth = useRect(contentRef).width;\n        if (scrollable || contentRefWidth > wrapRefWidth) {\n          doubleRaf(() => {\n            wrapWidth = wrapRefWidth;\n            contentWidth = contentRefWidth;\n            state.offset = -contentWidth;\n            state.duration = contentWidth / +speed;\n          });\n        }\n      }, ms);\n    };\n    onPopupReopen(reset);\n    onMountedOrActivated(reset);\n    useEventListener(\"pageshow\", reset);\n    useExpose({\n      reset\n    });\n    watch(() => [props.text, props.scrollable], reset);\n    return () => {\n      const {\n        color,\n        wrapable,\n        background\n      } = props;\n      return _withDirectives(_createVNode(\"div\", {\n        \"role\": \"alert\",\n        \"class\": bem({\n          wrapable\n        }),\n        \"style\": {\n          color,\n          background\n        }\n      }, [renderLeftIcon(), renderMarquee(), renderRightIcon()]), [[_vShow, state.show]]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  noticeBarProps\n};\n",
      "start": 1756100544649,
      "end": 1756100544679,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544679,
      "end": 1756100544679,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100544679,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544680,
      "end": 1756100544680,
      "order": "normal"
    }
  ]
}
