{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/togglebutton/togglebutton.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import Ripple from 'primevue/ripple';\nimport { ObjectUtils } from 'primevue/utils';\nimport BaseComponent from 'primevue/basecomponent';\nimport ToggleButtonStyle from 'primevue/togglebutton/style';\nimport { resolveDirective, openBlock, createElementBlock, mergeProps, createElementVNode, withDirectives, renderSlot, normalizeClass, createCommentVNode, toDisplayString } from 'vue';\n\nvar script$1 = {\n  name: 'BaseToggleButton',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: Boolean,\n    onIcon: String,\n    offIcon: String,\n    onLabel: {\n      type: String,\n      \"default\": 'Yes'\n    },\n    offLabel: {\n      type: String,\n      \"default\": 'No'\n    },\n    iconPos: {\n      type: String,\n      \"default\": 'left'\n    },\n    invalid: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": null\n    },\n    inputId: {\n      type: String,\n      \"default\": null\n    },\n    inputClass: {\n      type: [String, Object],\n      \"default\": null\n    },\n    inputStyle: {\n      type: Object,\n      \"default\": null\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: ToggleButtonStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'ToggleButton',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'change', 'focus', 'blur'],\n  methods: {\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          active: this.active,\n          disabled: this.disabled\n        }\n      });\n    },\n    onChange: function onChange(event) {\n      if (!this.disabled && !this.readonly) {\n        this.$emit('update:modelValue', !this.modelValue);\n        this.$emit('change', event);\n      }\n    },\n    onFocus: function onFocus(event) {\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event) {\n      this.$emit('blur', event);\n    }\n  },\n  computed: {\n    active: function active() {\n      return this.modelValue === true;\n    },\n    hasLabel: function hasLabel() {\n      return ObjectUtils.isNotEmpty(this.onLabel) && ObjectUtils.isNotEmpty(this.offLabel);\n    },\n    hasIcon: function hasIcon() {\n      return this.$slots.icon || this.onIcon && this.offIcon;\n    },\n    label: function label() {\n      return this.hasLabel ? this.modelValue ? this.onLabel : this.offLabel : '&nbsp;';\n    }\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"data-p-highlight\", \"data-p-disabled\"];\nvar _hoisted_2 = [\"id\", \"value\", \"checked\", \"tabindex\", \"disabled\", \"readonly\", \"aria-labelledby\", \"aria-label\", \"aria-invalid\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, $options.getPTOptions('root'), {\n    \"data-p-highlight\": $options.active,\n    \"data-p-disabled\": _ctx.disabled\n  }), [createElementVNode(\"input\", mergeProps({\n    id: _ctx.inputId,\n    type: \"checkbox\",\n    role: \"switch\",\n    \"class\": [_ctx.cx('input'), _ctx.inputClass],\n    style: _ctx.inputStyle,\n    value: _ctx.modelValue,\n    checked: $options.active,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.disabled,\n    readonly: _ctx.readonly,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-invalid\": _ctx.invalid || undefined,\n    onFocus: _cache[0] || (_cache[0] = function () {\n      return $options.onFocus && $options.onFocus.apply($options, arguments);\n    }),\n    onBlur: _cache[1] || (_cache[1] = function () {\n      return $options.onBlur && $options.onBlur.apply($options, arguments);\n    }),\n    onChange: _cache[2] || (_cache[2] = function () {\n      return $options.onChange && $options.onChange.apply($options, arguments);\n    })\n  }, $options.getPTOptions('input')), null, 16, _hoisted_2), withDirectives((openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('box')\n  }, $options.getPTOptions('box')), [renderSlot(_ctx.$slots, \"icon\", {\n    value: _ctx.modelValue,\n    \"class\": normalizeClass(_ctx.cx('icon'))\n  }, function () {\n    return [_ctx.onIcon || _ctx.offIcon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 0,\n      \"class\": [_ctx.cx('icon'), _ctx.modelValue ? _ctx.onIcon : _ctx.offIcon]\n    }, $options.getPTOptions('icon')), null, 16)) : createCommentVNode(\"\", true)];\n  }), createElementVNode(\"span\", mergeProps({\n    \"class\": _ctx.cx('label')\n  }, $options.getPTOptions('label')), toDisplayString($options.label), 17)], 16)), [[_directive_ripple]])], 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100540817,
      "end": 1756100540854,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100540854,
      "end": 1756100540854,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100540854,
      "end": 1756100540855,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100540855,
      "end": 1756100540855,
      "order": "normal"
    }
  ]
}
