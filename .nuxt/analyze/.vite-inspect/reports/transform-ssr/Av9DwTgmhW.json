{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/barrage/Barrage.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { defineComponent, onMounted, ref, nextTick, watch, createVNode as _createVNode } from \"vue\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { createNamespace, makeArrayProp, makeNumberProp, makeNumericProp, truthProp } from \"../utils/index.mjs\";\nconst barrageProps = {\n  top: makeNumericProp(10),\n  rows: makeNumericProp(4),\n  duration: makeNumericProp(4e3),\n  autoPlay: truthProp,\n  delay: makeNumberProp(300),\n  modelValue: makeArrayProp()\n};\nconst [name, bem] = createNamespace(\"barrage\");\nvar stdin_default = defineComponent({\n  name,\n  props: barrageProps,\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const barrageWrapper = ref();\n    const className = bem(\"item\");\n    const total = ref(0);\n    const barrageItems = [];\n    const createBarrageItem = (text, delay = props.delay) => {\n      const item = document.createElement(\"span\");\n      item.className = className;\n      item.innerText = String(text);\n      item.style.animationDuration = `${props.duration}ms`;\n      item.style.animationDelay = `${delay}ms`;\n      item.style.animationName = \"van-barrage\";\n      item.style.animationTimingFunction = \"linear\";\n      return item;\n    };\n    const isInitBarrage = ref(true);\n    const isPlay = ref(props.autoPlay);\n    const appendBarrageItem = ({\n      id,\n      text\n    }, i) => {\n      var _a;\n      const item = createBarrageItem(text, isInitBarrage.value ? i * props.delay : void 0);\n      if (!props.autoPlay && isPlay.value === false) {\n        item.style.animationPlayState = \"paused\";\n      }\n      (_a = barrageWrapper.value) == null ? void 0 : _a.append(item);\n      total.value++;\n      const top = (total.value - 1) % +props.rows * item.offsetHeight + +props.top;\n      item.style.top = `${top}px`;\n      item.dataset.id = String(id);\n      barrageItems.push(item);\n      item.addEventListener(\"animationend\", () => {\n        emit(\"update:modelValue\", [...props.modelValue].filter((v) => String(v.id) !== item.dataset.id));\n      });\n    };\n    const updateBarrages = (newValue, oldValue) => {\n      const map = new Map(oldValue.map((item) => [item.id, item]));\n      newValue.forEach((item, i) => {\n        if (map.has(item.id)) {\n          map.delete(item.id);\n        } else {\n          appendBarrageItem(item, i);\n        }\n      });\n      map.forEach((item) => {\n        const index = barrageItems.findIndex((span) => span.dataset.id === String(item.id));\n        if (index > -1) {\n          barrageItems[index].remove();\n          barrageItems.splice(index, 1);\n        }\n      });\n      isInitBarrage.value = false;\n    };\n    watch(() => props.modelValue.slice(), (newValue, oldValue) => updateBarrages(newValue != null ? newValue : [], oldValue != null ? oldValue : []), {\n      deep: true\n    });\n    const rootStyle = ref({});\n    onMounted(() => __async(this, null, function* () {\n      var _a;\n      rootStyle.value[\"--move-distance\"] = `-${(_a = barrageWrapper.value) == null ? void 0 : _a.offsetWidth}px`;\n      yield nextTick();\n      updateBarrages(props.modelValue, []);\n    }));\n    const play = () => {\n      isPlay.value = true;\n      barrageItems.forEach((item) => {\n        item.style.animationPlayState = \"running\";\n      });\n    };\n    const pause = () => {\n      isPlay.value = false;\n      barrageItems.forEach((item) => {\n        item.style.animationPlayState = \"paused\";\n      });\n    };\n    useExpose({\n      play,\n      pause\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"ref\": barrageWrapper,\n        \"style\": rootStyle.value\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  barrageProps,\n  stdin_default as default\n};\n",
      "start": 1756100544598,
      "end": 1756100544622,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544622,
      "end": 1756100544622,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { defineComponent, onMounted, ref, nextTick, watch, createVNode as _createVNode } from \"vue\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { createNamespace, makeArrayProp, makeNumberProp, makeNumericProp, truthProp } from \"../utils/index.mjs\";\nconst barrageProps = {\n  top: makeNumericProp(10),\n  rows: makeNumericProp(4),\n  duration: makeNumericProp(4e3),\n  autoPlay: truthProp,\n  delay: makeNumberProp(300),\n  modelValue: makeArrayProp()\n};\nconst [name, bem] = createNamespace(\"barrage\");\nvar stdin_default = defineComponent({\n  name,\n  props: barrageProps,\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const barrageWrapper = ref();\n    const className = bem(\"item\");\n    const total = ref(0);\n    const barrageItems = [];\n    const createBarrageItem = (text, delay = props.delay) => {\n      const item = (void 0).createElement(\"span\");\n      item.className = className;\n      item.innerText = String(text);\n      item.style.animationDuration = `${props.duration}ms`;\n      item.style.animationDelay = `${delay}ms`;\n      item.style.animationName = \"van-barrage\";\n      item.style.animationTimingFunction = \"linear\";\n      return item;\n    };\n    const isInitBarrage = ref(true);\n    const isPlay = ref(props.autoPlay);\n    const appendBarrageItem = ({\n      id,\n      text\n    }, i) => {\n      var _a;\n      const item = createBarrageItem(text, isInitBarrage.value ? i * props.delay : void 0);\n      if (!props.autoPlay && isPlay.value === false) {\n        item.style.animationPlayState = \"paused\";\n      }\n      (_a = barrageWrapper.value) == null ? void 0 : _a.append(item);\n      total.value++;\n      const top = (total.value - 1) % +props.rows * item.offsetHeight + +props.top;\n      item.style.top = `${top}px`;\n      item.dataset.id = String(id);\n      barrageItems.push(item);\n      item.addEventListener(\"animationend\", () => {\n        emit(\"update:modelValue\", [...props.modelValue].filter((v) => String(v.id) !== item.dataset.id));\n      });\n    };\n    const updateBarrages = (newValue, oldValue) => {\n      const map = new Map(oldValue.map((item) => [item.id, item]));\n      newValue.forEach((item, i) => {\n        if (map.has(item.id)) {\n          map.delete(item.id);\n        } else {\n          appendBarrageItem(item, i);\n        }\n      });\n      map.forEach((item) => {\n        const index = barrageItems.findIndex((span) => span.dataset.id === String(item.id));\n        if (index > -1) {\n          barrageItems[index].remove();\n          barrageItems.splice(index, 1);\n        }\n      });\n      isInitBarrage.value = false;\n    };\n    watch(() => props.modelValue.slice(), (newValue, oldValue) => updateBarrages(newValue != null ? newValue : [], oldValue != null ? oldValue : []), {\n      deep: true\n    });\n    const rootStyle = ref({});\n    onMounted(() => __async(this, null, function* () {\n      var _a;\n      rootStyle.value[\"--move-distance\"] = `-${(_a = barrageWrapper.value) == null ? void 0 : _a.offsetWidth}px`;\n      yield nextTick();\n      updateBarrages(props.modelValue, []);\n    }));\n    const play = () => {\n      isPlay.value = true;\n      barrageItems.forEach((item) => {\n        item.style.animationPlayState = \"running\";\n      });\n    };\n    const pause = () => {\n      isPlay.value = false;\n      barrageItems.forEach((item) => {\n        item.style.animationPlayState = \"paused\";\n      });\n    };\n    useExpose({\n      play,\n      pause\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"ref\": barrageWrapper,\n        \"style\": rootStyle.value\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  barrageProps,\n  stdin_default as default\n};\n",
      "start": 1756100544622,
      "end": 1756100544934,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/barrage/Barrage.mjs\"],\n  \"sourcesContent\": [\"var __async = (__this, __arguments, generator) => {\\n  return new Promise((resolve, reject) => {\\n    var fulfilled = (value) => {\\n      try {\\n        step(generator.next(value));\\n      } catch (e) {\\n        reject(e);\\n      }\\n    };\\n    var rejected = (value) => {\\n      try {\\n        step(generator.throw(value));\\n      } catch (e) {\\n        reject(e);\\n      }\\n    };\\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\\n    step((generator = generator.apply(__this, __arguments)).next());\\n  });\\n};\\nimport { defineComponent, onMounted, ref, nextTick, watch, createVNode as _createVNode } from \\\"vue\\\";\\nimport { useExpose } from \\\"../composables/use-expose.mjs\\\";\\nimport { createNamespace, makeArrayProp, makeNumberProp, makeNumericProp, truthProp } from \\\"../utils/index.mjs\\\";\\nconst barrageProps = {\\n  top: makeNumericProp(10),\\n  rows: makeNumericProp(4),\\n  duration: makeNumericProp(4e3),\\n  autoPlay: truthProp,\\n  delay: makeNumberProp(300),\\n  modelValue: makeArrayProp()\\n};\\nconst [name, bem] = createNamespace(\\\"barrage\\\");\\nvar stdin_default = defineComponent({\\n  name,\\n  props: barrageProps,\\n  emits: [\\\"update:modelValue\\\"],\\n  setup(props, {\\n    emit,\\n    slots\\n  }) {\\n    const barrageWrapper = ref();\\n    const className = bem(\\\"item\\\");\\n    const total = ref(0);\\n    const barrageItems = [];\\n    const createBarrageItem = (text, delay = props.delay) => {\\n      const item = document.createElement(\\\"span\\\");\\n      item.className = className;\\n      item.innerText = String(text);\\n      item.style.animationDuration = `${props.duration}ms`;\\n      item.style.animationDelay = `${delay}ms`;\\n      item.style.animationName = \\\"van-barrage\\\";\\n      item.style.animationTimingFunction = \\\"linear\\\";\\n      return item;\\n    };\\n    const isInitBarrage = ref(true);\\n    const isPlay = ref(props.autoPlay);\\n    const appendBarrageItem = ({\\n      id,\\n      text\\n    }, i) => {\\n      var _a;\\n      const item = createBarrageItem(text, isInitBarrage.value ? i * props.delay : void 0);\\n      if (!props.autoPlay && isPlay.value === false) {\\n        item.style.animationPlayState = \\\"paused\\\";\\n      }\\n      (_a = barrageWrapper.value) == null ? void 0 : _a.append(item);\\n      total.value++;\\n      const top = (total.value - 1) % +props.rows * item.offsetHeight + +props.top;\\n      item.style.top = `${top}px`;\\n      item.dataset.id = String(id);\\n      barrageItems.push(item);\\n      item.addEventListener(\\\"animationend\\\", () => {\\n        emit(\\\"update:modelValue\\\", [...props.modelValue].filter((v) => String(v.id) !== item.dataset.id));\\n      });\\n    };\\n    const updateBarrages = (newValue, oldValue) => {\\n      const map = new Map(oldValue.map((item) => [item.id, item]));\\n      newValue.forEach((item, i) => {\\n        if (map.has(item.id)) {\\n          map.delete(item.id);\\n        } else {\\n          appendBarrageItem(item, i);\\n        }\\n      });\\n      map.forEach((item) => {\\n        const index = barrageItems.findIndex((span) => span.dataset.id === String(item.id));\\n        if (index > -1) {\\n          barrageItems[index].remove();\\n          barrageItems.splice(index, 1);\\n        }\\n      });\\n      isInitBarrage.value = false;\\n    };\\n    watch(() => props.modelValue.slice(), (newValue, oldValue) => updateBarrages(newValue != null ? newValue : [], oldValue != null ? oldValue : []), {\\n      deep: true\\n    });\\n    const rootStyle = ref({});\\n    onMounted(() => __async(this, null, function* () {\\n      var _a;\\n      rootStyle.value[\\\"--move-distance\\\"] = `-${(_a = barrageWrapper.value) == null ? void 0 : _a.offsetWidth}px`;\\n      yield nextTick();\\n      updateBarrages(props.modelValue, []);\\n    }));\\n    const play = () => {\\n      isPlay.value = true;\\n      barrageItems.forEach((item) => {\\n        item.style.animationPlayState = \\\"running\\\";\\n      });\\n    };\\n    const pause = () => {\\n      isPlay.value = false;\\n      barrageItems.forEach((item) => {\\n        item.style.animationPlayState = \\\"paused\\\";\\n      });\\n    };\\n    useExpose({\\n      play,\\n      pause\\n    });\\n    return () => {\\n      var _a;\\n      return _createVNode(\\\"div\\\", {\\n        \\\"class\\\": bem(),\\n        \\\"ref\\\": barrageWrapper,\\n        \\\"style\\\": rootStyle.value\\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\\n    };\\n  }\\n});\\nexport {\\n  barrageProps,\\n  stdin_default as default\\n};\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544934,
      "end": 1756100544934,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544935,
      "end": 1756100544935,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { defineComponent, onMounted, ref, nextTick, watch, createVNode as _createVNode } from \"vue\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { createNamespace, makeArrayProp, makeNumberProp, makeNumericProp, truthProp } from \"../utils/index.mjs\";\nconst barrageProps = {\n  top: makeNumericProp(10),\n  rows: makeNumericProp(4),\n  duration: makeNumericProp(4e3),\n  autoPlay: truthProp,\n  delay: makeNumberProp(300),\n  modelValue: makeArrayProp()\n};\nconst [name, bem] = createNamespace(\"barrage\");\nvar stdin_default = defineComponent({\n  name,\n  props: barrageProps,\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const barrageWrapper = ref();\n    const className = bem(\"item\");\n    const total = ref(0);\n    const barrageItems = [];\n    const createBarrageItem = (text, delay = props.delay) => {\n      const item = (void 0).createElement(\"span\");\n      item.className = className;\n      item.innerText = String(text);\n      item.style.animationDuration = `${props.duration}ms`;\n      item.style.animationDelay = `${delay}ms`;\n      item.style.animationName = \"van-barrage\";\n      item.style.animationTimingFunction = \"linear\";\n      return item;\n    };\n    const isInitBarrage = ref(true);\n    const isPlay = ref(props.autoPlay);\n    const appendBarrageItem = ({\n      id,\n      text\n    }, i) => {\n      var _a;\n      const item = createBarrageItem(text, isInitBarrage.value ? i * props.delay : void 0);\n      if (!props.autoPlay && isPlay.value === false) {\n        item.style.animationPlayState = \"paused\";\n      }\n      (_a = barrageWrapper.value) == null ? void 0 : _a.append(item);\n      total.value++;\n      const top = (total.value - 1) % +props.rows * item.offsetHeight + +props.top;\n      item.style.top = `${top}px`;\n      item.dataset.id = String(id);\n      barrageItems.push(item);\n      item.addEventListener(\"animationend\", () => {\n        emit(\"update:modelValue\", [...props.modelValue].filter((v) => String(v.id) !== item.dataset.id));\n      });\n    };\n    const updateBarrages = (newValue, oldValue) => {\n      const map = new Map(oldValue.map((item) => [item.id, item]));\n      newValue.forEach((item, i) => {\n        if (map.has(item.id)) {\n          map.delete(item.id);\n        } else {\n          appendBarrageItem(item, i);\n        }\n      });\n      map.forEach((item) => {\n        const index = barrageItems.findIndex((span) => span.dataset.id === String(item.id));\n        if (index > -1) {\n          barrageItems[index].remove();\n          barrageItems.splice(index, 1);\n        }\n      });\n      isInitBarrage.value = false;\n    };\n    watch(() => props.modelValue.slice(), (newValue, oldValue) => updateBarrages(newValue != null ? newValue : [], oldValue != null ? oldValue : []), {\n      deep: true\n    });\n    const rootStyle = ref({});\n     false && /*@__PURE__*/ onMounted(() => __async(this, null, function* () {\n      var _a;\n      rootStyle.value[\"--move-distance\"] = `-${(_a = barrageWrapper.value) == null ? void 0 : _a.offsetWidth}px`;\n      yield nextTick();\n      updateBarrages(props.modelValue, []);\n    }));\n    const play = () => {\n      isPlay.value = true;\n      barrageItems.forEach((item) => {\n        item.style.animationPlayState = \"running\";\n      });\n    };\n    const pause = () => {\n      isPlay.value = false;\n      barrageItems.forEach((item) => {\n        item.style.animationPlayState = \"paused\";\n      });\n    };\n    useExpose({\n      play,\n      pause\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"ref\": barrageWrapper,\n        \"style\": rootStyle.value\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  barrageProps,\n  stdin_default as default\n};\n",
      "start": 1756100544935,
      "end": 1756100544935,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpphH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClvJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,qCAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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"
      }
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544935,
      "end": 1756100544935,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544935,
      "end": 1756100544935,
      "order": "normal"
    }
  ]
}
