{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/pagination/Pagination.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, watchEffect, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { clamp, truthProp, makeStringProp, makeNumberProp, makeNumericProp, createNamespace, BORDER_SURROUND } from \"../utils/index.mjs\";\nconst [name, bem, t] = createNamespace(\"pagination\");\nconst makePage = (number, text, active) => ({\n  number,\n  text,\n  active\n});\nconst paginationProps = {\n  mode: makeStringProp(\"multi\"),\n  prevText: String,\n  nextText: String,\n  pageCount: makeNumericProp(0),\n  modelValue: makeNumberProp(0),\n  totalItems: makeNumericProp(0),\n  showPageSize: makeNumericProp(5),\n  itemsPerPage: makeNumericProp(10),\n  forceEllipses: Boolean,\n  showPrevButton: truthProp,\n  showNextButton: truthProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: paginationProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const count = computed(() => {\n      const {\n        pageCount,\n        totalItems,\n        itemsPerPage\n      } = props;\n      const count2 = +pageCount || Math.ceil(+totalItems / +itemsPerPage);\n      return Math.max(1, count2);\n    });\n    const pages = computed(() => {\n      const items = [];\n      const pageCount = count.value;\n      const showPageSize = +props.showPageSize;\n      const {\n        modelValue,\n        forceEllipses\n      } = props;\n      let startPage = 1;\n      let endPage = pageCount;\n      const isMaxSized = showPageSize < pageCount;\n      if (isMaxSized) {\n        startPage = Math.max(modelValue - Math.floor(showPageSize / 2), 1);\n        endPage = startPage + showPageSize - 1;\n        if (endPage > pageCount) {\n          endPage = pageCount;\n          startPage = endPage - showPageSize + 1;\n        }\n      }\n      for (let number = startPage; number <= endPage; number++) {\n        const page = makePage(number, number, number === modelValue);\n        items.push(page);\n      }\n      if (isMaxSized && showPageSize > 0 && forceEllipses) {\n        if (startPage > 1) {\n          const prevPages = makePage(startPage - 1, \"...\");\n          items.unshift(prevPages);\n        }\n        if (endPage < pageCount) {\n          const nextPages = makePage(endPage + 1, \"...\");\n          items.push(nextPages);\n        }\n      }\n      return items;\n    });\n    const updateModelValue = (value, emitChange) => {\n      value = clamp(value, 1, count.value);\n      if (props.modelValue !== value) {\n        emit(\"update:modelValue\", value);\n        if (emitChange) {\n          emit(\"change\", value);\n        }\n      }\n    };\n    watchEffect(() => updateModelValue(props.modelValue));\n    const renderDesc = () => _createVNode(\"li\", {\n      \"class\": bem(\"page-desc\")\n    }, [slots.pageDesc ? slots.pageDesc() : `${props.modelValue}/${count.value}`]);\n    const renderPrevButton = () => {\n      const {\n        mode,\n        modelValue,\n        showPrevButton\n      } = props;\n      if (!showPrevButton) {\n        return;\n      }\n      const slot = slots[\"prev-text\"];\n      const disabled = modelValue === 1;\n      return _createVNode(\"li\", {\n        \"class\": [bem(\"item\", {\n          disabled,\n          border: mode === \"simple\",\n          prev: true\n        }), BORDER_SURROUND]\n      }, [_createVNode(\"button\", {\n        \"type\": \"button\",\n        \"disabled\": disabled,\n        \"onClick\": () => updateModelValue(modelValue - 1, true)\n      }, [slot ? slot() : props.prevText || t(\"prev\")])]);\n    };\n    const renderNextButton = () => {\n      const {\n        mode,\n        modelValue,\n        showNextButton\n      } = props;\n      if (!showNextButton) {\n        return;\n      }\n      const slot = slots[\"next-text\"];\n      const disabled = modelValue === count.value;\n      return _createVNode(\"li\", {\n        \"class\": [bem(\"item\", {\n          disabled,\n          border: mode === \"simple\",\n          next: true\n        }), BORDER_SURROUND]\n      }, [_createVNode(\"button\", {\n        \"type\": \"button\",\n        \"disabled\": disabled,\n        \"onClick\": () => updateModelValue(modelValue + 1, true)\n      }, [slot ? slot() : props.nextText || t(\"next\")])]);\n    };\n    const renderPages = () => pages.value.map((page) => _createVNode(\"li\", {\n      \"class\": [bem(\"item\", {\n        active: page.active,\n        page: true\n      }), BORDER_SURROUND]\n    }, [_createVNode(\"button\", {\n      \"type\": \"button\",\n      \"aria-current\": page.active || void 0,\n      \"onClick\": () => updateModelValue(page.number, true)\n    }, [slots.page ? slots.page(page) : page.text])]));\n    return () => _createVNode(\"nav\", {\n      \"role\": \"navigation\",\n      \"class\": bem()\n    }, [_createVNode(\"ul\", {\n      \"class\": bem(\"items\")\n    }, [renderPrevButton(), props.mode === \"simple\" ? renderDesc() : renderPages(), renderNextButton()])]);\n  }\n});\nexport {\n  stdin_default as default,\n  paginationProps\n};\n",
      "start": 1756100544656,
      "end": 1756100544686,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544686,
      "end": 1756100544686,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544686,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544686,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544687,
      "end": 1756100544687,
      "order": "normal"
    }
  ]
}
