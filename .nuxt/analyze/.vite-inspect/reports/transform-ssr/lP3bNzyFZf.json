{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/colorpicker/colorpicker.esm.js?nuxt_component=async&nuxt_component_name=ColorPicker&nuxt_component_export=default",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport { ZIndexUtils, DomHandler, ConnectedOverlayScrollHandler } from 'primevue/utils';\nimport BaseComponent from 'primevue/basecomponent';\nimport ColorPickerStyle from 'primevue/colorpicker/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, createCommentVNode, createVNode, withCtx, Transition, createElementVNode } from 'vue';\n\nvar script$1 = {\n  name: 'BaseColorPicker',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: {\n      type: null,\n      \"default\": null\n    },\n    defaultColor: {\n      type: null,\n      \"default\": 'ff0000'\n    },\n    inline: {\n      type: Boolean,\n      \"default\": false\n    },\n    format: {\n      type: String,\n      \"default\": 'hex'\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: String,\n      \"default\": null\n    },\n    autoZIndex: {\n      type: Boolean,\n      \"default\": true\n    },\n    baseZIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    appendTo: {\n      type: [String, Object],\n      \"default\": 'body'\n    },\n    panelClass: null\n  },\n  style: ColorPickerStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'ColorPicker',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'change', 'show', 'hide'],\n  data: function data() {\n    return {\n      overlayVisible: false\n    };\n  },\n  hsbValue: null,\n  outsideClickListener: null,\n  documentMouseMoveListener: null,\n  documentMouseUpListener: null,\n  scrollHandler: null,\n  resizeListener: null,\n  hueDragging: null,\n  colorDragging: null,\n  selfUpdate: null,\n  picker: null,\n  colorSelector: null,\n  colorHandle: null,\n  hueView: null,\n  hueHandle: null,\n  watch: {\n    modelValue: {\n      immediate: true,\n      handler: function handler(newValue) {\n        this.hsbValue = this.toHSB(newValue);\n        if (this.selfUpdate) this.selfUpdate = false;else this.updateUI();\n      }\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindOutsideClickListener();\n    this.unbindDragListeners();\n    this.unbindResizeListener();\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    if (this.picker && this.autoZIndex) {\n      ZIndexUtils.clear(this.picker);\n    }\n    this.clearRefs();\n  },\n  mounted: function mounted() {\n    this.updateUI();\n  },\n  methods: {\n    pickColor: function pickColor(event) {\n      var rect = this.colorSelector.getBoundingClientRect();\n      var top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n      var left = rect.left + document.body.scrollLeft;\n      var saturation = Math.floor(100 * Math.max(0, Math.min(150, (event.pageX || event.changedTouches[0].pageX) - left)) / 150);\n      var brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, (event.pageY || event.changedTouches[0].pageY) - top))) / 150);\n      this.hsbValue = this.validateHSB({\n        h: this.hsbValue.h,\n        s: saturation,\n        b: brightness\n      });\n      this.selfUpdate = true;\n      this.updateColorHandle();\n      this.updateInput();\n      this.updateModel(event);\n    },\n    pickHue: function pickHue(event) {\n      var top = this.hueView.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n      this.hsbValue = this.validateHSB({\n        h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (event.pageY || event.changedTouches[0].pageY) - top))) / 150),\n        s: 100,\n        b: 100\n      });\n      this.selfUpdate = true;\n      this.updateColorSelector();\n      this.updateHue();\n      this.updateModel(event);\n      this.updateInput();\n    },\n    updateModel: function updateModel(event) {\n      var value = this.modelValue;\n      switch (this.format) {\n        case 'hex':\n          value = this.HSBtoHEX(this.hsbValue);\n          break;\n        case 'rgb':\n          value = this.HSBtoRGB(this.hsbValue);\n          break;\n        case 'hsb':\n          value = this.hsbValue;\n          break;\n      }\n      this.$emit('update:modelValue', value);\n      this.$emit('change', {\n        event: event,\n        value: value\n      });\n    },\n    updateColorSelector: function updateColorSelector() {\n      if (this.colorSelector) {\n        var hsbValue = this.validateHSB({\n          h: this.hsbValue.h,\n          s: 100,\n          b: 100\n        });\n        this.colorSelector.style.backgroundColor = '#' + this.HSBtoHEX(hsbValue);\n      }\n    },\n    updateColorHandle: function updateColorHandle() {\n      if (this.colorHandle) {\n        this.colorHandle.style.left = Math.floor(150 * this.hsbValue.s / 100) + 'px';\n        this.colorHandle.style.top = Math.floor(150 * (100 - this.hsbValue.b) / 100) + 'px';\n      }\n    },\n    updateHue: function updateHue() {\n      if (this.hueHandle) {\n        this.hueHandle.style.top = Math.floor(150 - 150 * this.hsbValue.h / 360) + 'px';\n      }\n    },\n    updateInput: function updateInput() {\n      if (this.$refs.input) {\n        this.$refs.input.style.backgroundColor = '#' + this.HSBtoHEX(this.hsbValue);\n      }\n    },\n    updateUI: function updateUI() {\n      this.updateHue();\n      this.updateColorHandle();\n      this.updateInput();\n      this.updateColorSelector();\n    },\n    validateHSB: function validateHSB(hsb) {\n      return {\n        h: Math.min(360, Math.max(0, hsb.h)),\n        s: Math.min(100, Math.max(0, hsb.s)),\n        b: Math.min(100, Math.max(0, hsb.b))\n      };\n    },\n    HEXtoRGB: function HEXtoRGB(hex) {\n      var hexValue = parseInt(hex.indexOf('#') > -1 ? hex.substring(1) : hex, 16);\n      return {\n        r: hexValue >> 16,\n        g: (hexValue & 0x00ff00) >> 8,\n        b: hexValue & 0x0000ff\n      };\n    },\n    HEXtoHSB: function HEXtoHSB(hex) {\n      return this.RGBtoHSB(this.HEXtoRGB(hex));\n    },\n    RGBtoHSB: function RGBtoHSB(rgb) {\n      var hsb = {\n        h: 0,\n        s: 0,\n        b: 0\n      };\n      var min = Math.min(rgb.r, rgb.g, rgb.b);\n      var max = Math.max(rgb.r, rgb.g, rgb.b);\n      var delta = max - min;\n      hsb.b = max;\n      hsb.s = max !== 0 ? 255 * delta / max : 0;\n      if (hsb.s !== 0) {\n        if (rgb.r === max) {\n          hsb.h = (rgb.g - rgb.b) / delta;\n        } else if (rgb.g === max) {\n          hsb.h = 2 + (rgb.b - rgb.r) / delta;\n        } else {\n          hsb.h = 4 + (rgb.r - rgb.g) / delta;\n        }\n      } else {\n        hsb.h = -1;\n      }\n      hsb.h *= 60;\n      if (hsb.h < 0) {\n        hsb.h += 360;\n      }\n      hsb.s *= 100 / 255;\n      hsb.b *= 100 / 255;\n      return hsb;\n    },\n    HSBtoRGB: function HSBtoRGB(hsb) {\n      var rgb = {\n        r: null,\n        g: null,\n        b: null\n      };\n      var h = Math.round(hsb.h);\n      var s = Math.round(hsb.s * 255 / 100);\n      var v = Math.round(hsb.b * 255 / 100);\n      if (s === 0) {\n        rgb = {\n          r: v,\n          g: v,\n          b: v\n        };\n      } else {\n        var t1 = v;\n        var t2 = (255 - s) * v / 255;\n        var t3 = (t1 - t2) * (h % 60) / 60;\n        if (h === 360) h = 0;\n        if (h < 60) {\n          rgb.r = t1;\n          rgb.b = t2;\n          rgb.g = t2 + t3;\n        } else if (h < 120) {\n          rgb.g = t1;\n          rgb.b = t2;\n          rgb.r = t1 - t3;\n        } else if (h < 180) {\n          rgb.g = t1;\n          rgb.r = t2;\n          rgb.b = t2 + t3;\n        } else if (h < 240) {\n          rgb.b = t1;\n          rgb.r = t2;\n          rgb.g = t1 - t3;\n        } else if (h < 300) {\n          rgb.b = t1;\n          rgb.g = t2;\n          rgb.r = t2 + t3;\n        } else if (h < 360) {\n          rgb.r = t1;\n          rgb.g = t2;\n          rgb.b = t1 - t3;\n        } else {\n          rgb.r = 0;\n          rgb.g = 0;\n          rgb.b = 0;\n        }\n      }\n      return {\n        r: Math.round(rgb.r),\n        g: Math.round(rgb.g),\n        b: Math.round(rgb.b)\n      };\n    },\n    RGBtoHEX: function RGBtoHEX(rgb) {\n      var hex = [rgb.r.toString(16), rgb.g.toString(16), rgb.b.toString(16)];\n      for (var key in hex) {\n        if (hex[key].length === 1) {\n          hex[key] = '0' + hex[key];\n        }\n      }\n      return hex.join('');\n    },\n    HSBtoHEX: function HSBtoHEX(hsb) {\n      return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    },\n    toHSB: function toHSB(value) {\n      var hsb;\n      if (value) {\n        switch (this.format) {\n          case 'hex':\n            hsb = this.HEXtoHSB(value);\n            break;\n          case 'rgb':\n            hsb = this.RGBtoHSB(value);\n            break;\n          case 'hsb':\n            hsb = value;\n            break;\n        }\n      } else {\n        hsb = this.HEXtoHSB(this.defaultColor);\n      }\n      return hsb;\n    },\n    onOverlayEnter: function onOverlayEnter(el) {\n      this.updateUI();\n      this.alignOverlay();\n      this.bindOutsideClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n      if (this.autoZIndex) {\n        ZIndexUtils.set('overlay', el, this.baseZIndex, this.$primevue.config.zIndex.overlay);\n      }\n      this.$emit('show');\n    },\n    onOverlayLeave: function onOverlayLeave() {\n      this.unbindOutsideClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n      this.clearRefs();\n      this.$emit('hide');\n    },\n    onOverlayAfterLeave: function onOverlayAfterLeave(el) {\n      if (this.autoZIndex) {\n        ZIndexUtils.clear(el);\n      }\n    },\n    alignOverlay: function alignOverlay() {\n      if (this.appendTo === 'self') DomHandler.relativePosition(this.picker, this.$refs.input);else DomHandler.absolutePosition(this.picker, this.$refs.input);\n    },\n    onInputClick: function onInputClick() {\n      if (this.disabled) {\n        return;\n      }\n      this.overlayVisible = !this.overlayVisible;\n    },\n    onInputKeydown: function onInputKeydown(event) {\n      switch (event.code) {\n        case 'Space':\n          this.overlayVisible = !this.overlayVisible;\n          event.preventDefault();\n          break;\n        case 'Escape':\n        case 'Tab':\n          this.overlayVisible = false;\n          break;\n      }\n    },\n    onColorMousedown: function onColorMousedown(event) {\n      if (this.disabled) {\n        return;\n      }\n      this.bindDragListeners();\n      this.onColorDragStart(event);\n    },\n    onColorDragStart: function onColorDragStart(event) {\n      if (this.disabled) {\n        return;\n      }\n      this.colorDragging = true;\n      this.pickColor(event);\n      this.$el.setAttribute('p-colorpicker-dragging', 'true');\n      !this.isUnstyled && DomHandler.addClass(this.$el, 'p-colorpicker-dragging');\n      event.preventDefault();\n    },\n    onDrag: function onDrag(event) {\n      if (this.colorDragging) {\n        this.pickColor(event);\n        event.preventDefault();\n      }\n      if (this.hueDragging) {\n        this.pickHue(event);\n        event.preventDefault();\n      }\n    },\n    onDragEnd: function onDragEnd() {\n      this.colorDragging = false;\n      this.hueDragging = false;\n      this.$el.setAttribute('p-colorpicker-dragging', 'false');\n      !this.isUnstyled && DomHandler.removeClass(this.$el, 'p-colorpicker-dragging');\n      this.unbindDragListeners();\n    },\n    onHueMousedown: function onHueMousedown(event) {\n      if (this.disabled) {\n        return;\n      }\n      this.bindDragListeners();\n      this.onHueDragStart(event);\n    },\n    onHueDragStart: function onHueDragStart(event) {\n      if (this.disabled) {\n        return;\n      }\n      this.hueDragging = true;\n      this.pickHue(event);\n      !this.isUnstyled && DomHandler.addClass(this.$el, 'p-colorpicker-dragging');\n    },\n    isInputClicked: function isInputClicked(event) {\n      return this.$refs.input && this.$refs.input.isSameNode(event.target);\n    },\n    bindDragListeners: function bindDragListeners() {\n      this.bindDocumentMouseMoveListener();\n      this.bindDocumentMouseUpListener();\n    },\n    unbindDragListeners: function unbindDragListeners() {\n      this.unbindDocumentMouseMoveListener();\n      this.unbindDocumentMouseUpListener();\n    },\n    bindOutsideClickListener: function bindOutsideClickListener() {\n      var _this = this;\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = function (event) {\n          if (_this.overlayVisible && _this.picker && !_this.picker.contains(event.target) && !_this.isInputClicked(event)) {\n            _this.overlayVisible = false;\n          }\n        };\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    },\n    unbindOutsideClickListener: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    },\n    bindScrollListener: function bindScrollListener() {\n      var _this2 = this;\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, function () {\n          if (_this2.overlayVisible) {\n            _this2.overlayVisible = false;\n          }\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    },\n    bindResizeListener: function bindResizeListener() {\n      var _this3 = this;\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this3.overlayVisible && !DomHandler.isTouchDevice()) {\n            _this3.overlayVisible = false;\n          }\n        };\n        window.addEventListener('resize', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    bindDocumentMouseMoveListener: function bindDocumentMouseMoveListener() {\n      if (!this.documentMouseMoveListener) {\n        this.documentMouseMoveListener = this.onDrag.bind(this);\n        document.addEventListener('mousemove', this.documentMouseMoveListener);\n      }\n    },\n    unbindDocumentMouseMoveListener: function unbindDocumentMouseMoveListener() {\n      if (this.documentMouseMoveListener) {\n        document.removeEventListener('mousemove', this.documentMouseMoveListener);\n        this.documentMouseMoveListener = null;\n      }\n    },\n    bindDocumentMouseUpListener: function bindDocumentMouseUpListener() {\n      if (!this.documentMouseUpListener) {\n        this.documentMouseUpListener = this.onDragEnd.bind(this);\n        document.addEventListener('mouseup', this.documentMouseUpListener);\n      }\n    },\n    unbindDocumentMouseUpListener: function unbindDocumentMouseUpListener() {\n      if (this.documentMouseUpListener) {\n        document.removeEventListener('mouseup', this.documentMouseUpListener);\n        this.documentMouseUpListener = null;\n      }\n    },\n    pickerRef: function pickerRef(el) {\n      this.picker = el;\n    },\n    colorSelectorRef: function colorSelectorRef(el) {\n      this.colorSelector = el;\n    },\n    colorHandleRef: function colorHandleRef(el) {\n      this.colorHandle = el;\n    },\n    hueViewRef: function hueViewRef(el) {\n      this.hueView = el;\n    },\n    hueHandleRef: function hueHandleRef(el) {\n      this.hueHandle = el;\n    },\n    clearRefs: function clearRefs() {\n      this.picker = null;\n      this.colorSelector = null;\n      this.colorHandle = null;\n      this.hueView = null;\n      this.hueHandle = null;\n    },\n    onOverlayClick: function onOverlayClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.$el\n      });\n    }\n  },\n  components: {\n    Portal: Portal\n  }\n};\n\nvar _hoisted_1 = [\"tabindex\", \"disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Portal = resolveComponent(\"Portal\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\",\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [!_ctx.inline ? (openBlock(), createElementBlock(\"input\", mergeProps({\n    key: 0,\n    ref: \"input\",\n    type: \"text\",\n    \"class\": _ctx.cx('input'),\n    readonly: \"readonly\",\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.disabled,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.onInputClick && $options.onInputClick.apply($options, arguments);\n    }),\n    onKeydown: _cache[1] || (_cache[1] = function () {\n      return $options.onInputKeydown && $options.onInputKeydown.apply($options, arguments);\n    })\n  }, _ctx.ptm('input')), null, 16, _hoisted_1)) : createCommentVNode(\"\", true), createVNode(_component_Portal, {\n    appendTo: _ctx.appendTo,\n    disabled: _ctx.inline\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(Transition, mergeProps({\n        name: \"p-connected-overlay\",\n        onEnter: $options.onOverlayEnter,\n        onLeave: $options.onOverlayLeave,\n        onAfterLeave: $options.onOverlayAfterLeave\n      }, _ctx.ptm('transition')), {\n        \"default\": withCtx(function () {\n          return [(_ctx.inline ? true : $data.overlayVisible) ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            ref: $options.pickerRef,\n            \"class\": [_ctx.cx('panel'), _ctx.panelClass],\n            onClick: _cache[10] || (_cache[10] = function () {\n              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);\n            })\n          }, _ctx.ptm('panel')), [createElementVNode(\"div\", mergeProps({\n            \"class\": _ctx.cx('content')\n          }, _ctx.ptm('content')), [createElementVNode(\"div\", mergeProps({\n            ref: $options.colorSelectorRef,\n            \"class\": _ctx.cx('selector'),\n            onMousedown: _cache[2] || (_cache[2] = function ($event) {\n              return $options.onColorMousedown($event);\n            }),\n            onTouchstart: _cache[3] || (_cache[3] = function ($event) {\n              return $options.onColorDragStart($event);\n            }),\n            onTouchmove: _cache[4] || (_cache[4] = function ($event) {\n              return $options.onDrag($event);\n            }),\n            onTouchend: _cache[5] || (_cache[5] = function ($event) {\n              return $options.onDragEnd();\n            })\n          }, _ctx.ptm('selector')), [createElementVNode(\"div\", mergeProps({\n            \"class\": _ctx.cx('color')\n          }, _ctx.ptm('color')), [createElementVNode(\"div\", mergeProps({\n            ref: $options.colorHandleRef,\n            \"class\": _ctx.cx('colorHandle')\n          }, _ctx.ptm('colorHandle')), null, 16)], 16)], 16), createElementVNode(\"div\", mergeProps({\n            ref: $options.hueViewRef,\n            \"class\": _ctx.cx('hue'),\n            onMousedown: _cache[6] || (_cache[6] = function ($event) {\n              return $options.onHueMousedown($event);\n            }),\n            onTouchstart: _cache[7] || (_cache[7] = function ($event) {\n              return $options.onHueDragStart($event);\n            }),\n            onTouchmove: _cache[8] || (_cache[8] = function ($event) {\n              return $options.onDrag($event);\n            }),\n            onTouchend: _cache[9] || (_cache[9] = function ($event) {\n              return $options.onDragEnd();\n            })\n          }, _ctx.ptm('hue')), [createElementVNode(\"div\", mergeProps({\n            ref: $options.hueHandleRef,\n            \"class\": _ctx.cx('hueHandle')\n          }, _ctx.ptm('hueHandle')), null, 16)], 16)], 16)], 16)) : createCommentVNode(\"\", true)];\n        }),\n        _: 1\n      }, 16, [\"onEnter\", \"onLeave\", \"onAfterLeave\"])];\n    }),\n    _: 1\n  }, 8, [\"appendTo\", \"disabled\"])], 16);\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-colorpicker {\\n    display: inline-block;\\n}\\n.p-colorpicker-dragging {\\n    cursor: pointer;\\n}\\n.p-colorpicker-overlay {\\n    position: relative;\\n}\\n.p-colorpicker-panel {\\n    position: relative;\\n    width: 193px;\\n    height: 166px;\\n}\\n.p-colorpicker-overlay-panel {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.p-colorpicker-preview {\\n    cursor: pointer;\\n}\\n.p-colorpicker-panel .p-colorpicker-content {\\n    position: relative;\\n}\\n.p-colorpicker-panel .p-colorpicker-color-selector {\\n    width: 150px;\\n    height: 150px;\\n    top: 8px;\\n    left: 8px;\\n    position: absolute;\\n}\\n.p-colorpicker-panel .p-colorpicker-color {\\n    width: 150px;\\n    height: 150px;\\n}\\n.p-colorpicker-panel .p-colorpicker-color-handle {\\n    position: absolute;\\n    top: 0px;\\n    left: 150px;\\n    border-radius: 100%;\\n    width: 10px;\\n    height: 10px;\\n    border-width: 1px;\\n    border-style: solid;\\n    margin: -5px 0 0 -5px;\\n    cursor: pointer;\\n    opacity: 0.85;\\n}\\n.p-colorpicker-panel .p-colorpicker-hue {\\n    width: 17px;\\n    height: 150px;\\n    top: 8px;\\n    left: 167px;\\n    position: absolute;\\n    opacity: 0.85;\\n}\\n.p-colorpicker-panel .p-colorpicker-hue-handle {\\n    position: absolute;\\n    top: 150px;\\n    left: 0px;\\n    width: 21px;\\n    margin-left: -2px;\\n    margin-top: -5px;\\n    height: 10px;\\n    border-width: 2px;\\n    border-style: solid;\\n    opacity: 0.85;\\n    cursor: pointer;\\n}\\n\";\nstyleInject(css_248z);\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100539646,
      "end": 1756100540090,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/colorpicker/colorpicker.esm.js\").then(r => r[\"default\"] || r.default || r))",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100540090,
      "end": 1756100540090,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100540091,
      "end": 1756100540091,
      "order": "normal"
    }
  ]
}
