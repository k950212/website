{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/deferredcontent/deferredcontent.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import BaseComponent from 'primevue/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createCommentVNode } from 'vue';\n\nvar script = {\n  name: 'DeferredContent',\n  \"extends\": BaseComponent,\n  inheritAttrs: false,\n  emits: ['load'],\n  style: DeferredContentStyle,\n  data: function data() {\n    return {\n      loaded: false\n    };\n  },\n  mounted: function mounted() {\n    if (!this.loaded) {\n      if (this.shouldLoad()) this.load();else this.bindScrollListener();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindScrollListener();\n  },\n  methods: {\n    bindScrollListener: function bindScrollListener() {\n      var _this = this;\n      this.documentScrollListener = function () {\n        if (_this.shouldLoad()) {\n          _this.load();\n          _this.unbindScrollListener();\n        }\n      };\n      window.addEventListener('scroll', this.documentScrollListener);\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.documentScrollListener) {\n        window.removeEventListener('scroll', this.documentScrollListener);\n        this.documentScrollListener = null;\n      }\n    },\n    shouldLoad: function shouldLoad() {\n      if (this.loaded) {\n        return false;\n      } else {\n        var rect = this.$refs.container.getBoundingClientRect();\n        var docElement = document.documentElement;\n        var winHeight = docElement.clientHeight;\n        return winHeight >= rect.top;\n      }\n    },\n    load: function load(event) {\n      this.loaded = true;\n      this.$emit('load', event);\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\"\n  }, _ctx.ptmi('root')), [$data.loaded ? renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }) : createCommentVNode(\"\", true)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100540905,
      "end": 1756100540958,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100540958,
      "end": 1756100540958,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import BaseComponent from \"primevue/basecomponent\";\nimport DeferredContentStyle from \"primevue/deferredcontent/style\";\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createCommentVNode } from \"vue\";\nvar script = {\n  name: \"DeferredContent\",\n  \"extends\": BaseComponent,\n  inheritAttrs: false,\n  emits: [\"load\"],\n  style: DeferredContentStyle,\n  data: function data() {\n    return {\n      loaded: false\n    };\n  },\n  mounted: function mounted() {\n    if (!this.loaded) {\n      if (this.shouldLoad())\n        this.load();\n      else\n        this.bindScrollListener();\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindScrollListener();\n  },\n  methods: {\n    bindScrollListener: function bindScrollListener() {\n      var _this = this;\n      this.documentScrollListener = function() {\n        if (_this.shouldLoad()) {\n          _this.load();\n          _this.unbindScrollListener();\n        }\n      };\n      (void 0).addEventListener(\"scroll\", this.documentScrollListener);\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.documentScrollListener) {\n        (void 0).removeEventListener(\"scroll\", this.documentScrollListener);\n        this.documentScrollListener = null;\n      }\n    },\n    shouldLoad: function shouldLoad() {\n      if (this.loaded) {\n        return false;\n      } else {\n        var rect = this.$refs.container.getBoundingClientRect();\n        var docElement = (void 0).documentElement;\n        var winHeight = docElement.clientHeight;\n        return winHeight >= rect.top;\n      }\n    },\n    load: function load(event) {\n      this.loaded = true;\n      this.$emit(\"load\", event);\n    }\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    ref: \"container\"\n  }, _ctx.ptmi(\"root\")), [$data.loaded ? renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }) : createCommentVNode(\"\", true)], 16);\n}\nscript.render = render;\nexport { script as default };\n",
      "start": 1756100540958,
      "end": 1756100543344,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/deferredcontent/deferredcontent.esm.js\"],\n  \"sourcesContent\": [\"import BaseComponent from 'primevue/basecomponent';\\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createCommentVNode } from 'vue';\\n\\nvar script = {\\n  name: 'DeferredContent',\\n  \\\"extends\\\": BaseComponent,\\n  inheritAttrs: false,\\n  emits: ['load'],\\n  style: DeferredContentStyle,\\n  data: function data() {\\n    return {\\n      loaded: false\\n    };\\n  },\\n  mounted: function mounted() {\\n    if (!this.loaded) {\\n      if (this.shouldLoad()) this.load();else this.bindScrollListener();\\n    }\\n  },\\n  beforeUnmount: function beforeUnmount() {\\n    this.unbindScrollListener();\\n  },\\n  methods: {\\n    bindScrollListener: function bindScrollListener() {\\n      var _this = this;\\n      this.documentScrollListener = function () {\\n        if (_this.shouldLoad()) {\\n          _this.load();\\n          _this.unbindScrollListener();\\n        }\\n      };\\n      window.addEventListener('scroll', this.documentScrollListener);\\n    },\\n    unbindScrollListener: function unbindScrollListener() {\\n      if (this.documentScrollListener) {\\n        window.removeEventListener('scroll', this.documentScrollListener);\\n        this.documentScrollListener = null;\\n      }\\n    },\\n    shouldLoad: function shouldLoad() {\\n      if (this.loaded) {\\n        return false;\\n      } else {\\n        var rect = this.$refs.container.getBoundingClientRect();\\n        var docElement = document.documentElement;\\n        var winHeight = docElement.clientHeight;\\n        return winHeight >= rect.top;\\n      }\\n    },\\n    load: function load(event) {\\n      this.loaded = true;\\n      this.$emit('load', event);\\n    }\\n  }\\n};\\n\\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\\n  return openBlock(), createElementBlock(\\\"div\\\", mergeProps({\\n    ref: \\\"container\\\"\\n  }, _ctx.ptmi('root')), [$data.loaded ? renderSlot(_ctx.$slots, \\\"default\\\", {\\n    key: 0\\n  }) : createCommentVNode(\\\"\\\", true)], 16);\\n}\\n\\nscript.render = render;\\n\\nexport { script as default };\\n\"],\n  \"mappings\": \"AAAA,OAAO,mBAAmB;AAC1B,OAAO,0BAA0B;AACjC,SAAS,WAAW,oBAAoB,YAAY,YAAY,0BAA0B;AAE1F,IAAI,SAAS;AAAA,EACX,MAAM;AAAA,EACN,WAAW;AAAA,EACX,cAAc;AAAA,EACd,OAAO,CAAC,MAAM;AAAA,EACd,OAAO;AAAA,EACP,MAAM,SAAS,OAAO;AACpB,WAAO;AAAA,MACL,QAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,SAAS,SAAS,UAAU;AAC1B,QAAI,CAAC,KAAK,QAAQ;AAChB,UAAI,KAAK,WAAW;AAAG,aAAK,KAAK;AAAA;AAAO,aAAK,mBAAmB;AAAA,IAClE;AAAA,EACF;AAAA,EACA,eAAe,SAAS,gBAAgB;AACtC,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,SAAS;AAAA,IACP,oBAAoB,SAAS,qBAAqB;AAChD,UAAI,QAAQ;AACZ,WAAK,yBAAyB,WAAY;AACxC,YAAI,MAAM,WAAW,GAAG;AACtB,gBAAM,KAAK;AACX,gBAAM,qBAAqB;AAAA,QAC7B;AAAA,MACF;AACA,eAAO,iBAAiB,UAAU,KAAK,sBAAsB;AAAA,IAC/D;AAAA,IACA,sBAAsB,SAAS,uBAAuB;AACpD,UAAI,KAAK,wBAAwB;AAC/B,iBAAO,oBAAoB,UAAU,KAAK,sBAAsB;AAChE,aAAK,yBAAyB;AAAA,MAChC;AAAA,IACF;AAAA,IACA,YAAY,SAAS,aAAa;AAChC,UAAI,KAAK,QAAQ;AACf,eAAO;AAAA,MACT,OAAO;AACL,YAAI,OAAO,KAAK,MAAM,UAAU,sBAAsB;AACtD,YAAI,aAAa,SAAS;AAC1B,YAAI,YAAY,WAAW;AAC3B,eAAO,aAAa,KAAK;AAAA,MAC3B;AAAA,IACF;AAAA,IACA,MAAM,SAAS,KAAK,OAAO;AACzB,WAAK,SAAS;AACd,WAAK,MAAM,QAAQ,KAAK;AAAA,IAC1B;AAAA,EACF;AACF;AAEA,SAAS,OAAO,MAAM,QAAQ,QAAQ,QAAQ,OAAO,UAAU;AAC7D,SAAO,UAAU,GAAG,mBAAmB,OAAO,WAAW;AAAA,IACvD,KAAK;AAAA,EACP,GAAG,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,MAAM,SAAS,WAAW,KAAK,QAAQ,WAAW;AAAA,IACxE,KAAK;AAAA,EACP,CAAC,IAAI,mBAAmB,IAAI,IAAI,CAAC,GAAG,EAAE;AACxC;AAEA,OAAO,SAAS;AAEhB,SAAS,UAAU;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100543344,
      "end": 1756100543344,
      "order": "normal"
    }
  ]
}
