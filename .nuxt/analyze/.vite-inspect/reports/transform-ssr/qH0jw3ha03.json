{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/inputotp/inputotp.esm.js?nuxt_component=async&nuxt_component_name=InputOtp&nuxt_component_export=default",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import InputText from 'primevue/inputtext';\nimport BaseComponent from 'primevue/basecomponent';\nimport InputOtpStyle from 'primevue/inputotp/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createVNode, normalizeClass } from 'vue';\n\nvar script$1 = {\n  name: 'BaseInputOtp',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: {\n      type: null,\n      \"default\": false\n    },\n    invalid: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    variant: {\n      type: String,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": null\n    },\n    length: {\n      type: Number,\n      \"default\": 4\n    },\n    mask: {\n      type: Boolean,\n      \"default\": false\n    },\n    integerOnly: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: InputOtpStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'InputOtp',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'change', 'focus', 'blur'],\n  data: function data() {\n    return {\n      tokens: []\n    };\n  },\n  watch: {\n    modelValue: {\n      immediate: true,\n      handler: function handler(newValue) {\n        this.tokens = newValue ? newValue.split('') : new Array(this.length);\n      }\n    }\n  },\n  methods: {\n    getTemplateAttrs: function getTemplateAttrs(index) {\n      return {\n        value: this.tokens[index]\n      };\n    },\n    getTemplateEvents: function getTemplateEvents(index) {\n      var _this = this;\n      return {\n        input: function input(event) {\n          return _this.onInput(event, index);\n        },\n        keydown: function keydown(event) {\n          return _this.onKeyDown(event);\n        },\n        focus: function focus(event) {\n          return _this.onFocus(event);\n        },\n        blur: function blur(event) {\n          return _this.onBlur(event);\n        },\n        paste: function paste(event) {\n          return _this.onPaste(event);\n        }\n      };\n    },\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          checked: this.checked,\n          disabled: this.disabled\n        }\n      });\n    },\n    onInput: function onInput(event, index) {\n      this.tokens[index] = event.target.value;\n      this.updateModel(event);\n      if (event.inputType === 'deleteContentBackward') {\n        this.moveToPrev(event);\n      } else if (event.inputType === 'insertText' || event.inputType === 'deleteContentForward') {\n        this.moveToNext(event);\n      }\n    },\n    updateModel: function updateModel(event) {\n      var newValue = this.tokens.join('');\n      this.$emit('update:modelValue', newValue);\n      this.$emit('change', {\n        originalEvent: event,\n        value: newValue\n      });\n    },\n    moveToPrev: function moveToPrev(event) {\n      var prevInput = this.findPrevInput(event.target);\n      if (prevInput) {\n        prevInput.focus();\n        prevInput.select();\n      }\n    },\n    moveToNext: function moveToNext(event) {\n      var nextInput = this.findNextInput(event.target);\n      if (nextInput) {\n        nextInput.focus();\n        nextInput.select();\n      }\n    },\n    findNextInput: function findNextInput(element) {\n      var nextElement = element.nextElementSibling;\n      if (!nextElement) return;\n      return nextElement.nodeName === 'INPUT' ? nextElement : this.findNextInput(nextElement);\n    },\n    findPrevInput: function findPrevInput(element) {\n      var prevElement = element.previousElementSibling;\n      if (!prevElement) return;\n      return prevElement.nodeName === 'INPUT' ? prevElement : this.findPrevInput(prevElement);\n    },\n    onFocus: function onFocus(event) {\n      event.target.select();\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event) {\n      this.$emit('blur', event);\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (event.ctrlKey || event.metaKey) {\n        return;\n      }\n      switch (event.code) {\n        case 'ArrowLeft':\n          this.moveToPrev(event);\n          event.preventDefault();\n          break;\n        case 'ArrowUp':\n        case 'ArrowDown':\n          event.preventDefault();\n          break;\n        case 'Backspace':\n          if (event.target.value.length === 0) {\n            this.moveToPrev(event);\n            event.preventDefault();\n          }\n          break;\n        case 'ArrowRight':\n          this.moveToNext(event);\n          event.preventDefault();\n          break;\n        default:\n          if (this.integerOnly && !(Number(event.key) >= 0 && Number(event.key) <= 9) || this.tokens.join('').length >= this.length && event.code !== 'Delete') {\n            event.preventDefault();\n          }\n          break;\n      }\n    },\n    onPaste: function onPaste(event) {\n      if (this.readonly || this.disabled) {\n        return;\n      }\n      var paste = event.clipboardData.getData('text');\n      if (paste.length) {\n        var pastedCode = paste.substring(0, this.length + 1);\n        if (!this.integerOnly || !isNaN(pastedCode)) {\n          this.tokens = pastedCode.split('');\n          this.updateModel(event);\n        }\n      }\n      event.preventDefault();\n    }\n  },\n  computed: {\n    inputMode: function inputMode() {\n      return this.integerOnly ? 'numeric' : 'text';\n    },\n    inputType: function inputType() {\n      return this.mask ? 'password' : 'text';\n    }\n  },\n  components: {\n    OtpInputText: InputText\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_OtpInputText = resolveComponent(\"OtpInputText\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.length, function (i) {\n    return renderSlot(_ctx.$slots, \"default\", {\n      key: i,\n      events: $options.getTemplateEvents(i - 1),\n      attrs: $options.getTemplateAttrs(i - 1),\n      index: i\n    }, function () {\n      return [createVNode(_component_OtpInputText, {\n        value: $data.tokens[i - 1],\n        type: $options.inputType,\n        \"class\": normalizeClass(_ctx.cx('input')),\n        inputmode: $options.inputMode,\n        variant: _ctx.variant,\n        readonly: _ctx.readonly,\n        disabled: _ctx.disabled,\n        invalid: _ctx.invalid,\n        tabindex: _ctx.tabindex,\n        unstyled: _ctx.unstyled,\n        onInput: function onInput($event) {\n          return $options.onInput($event, i - 1);\n        },\n        onFocus: _cache[0] || (_cache[0] = function ($event) {\n          return $options.onFocus($event);\n        }),\n        onBlur: _cache[1] || (_cache[1] = function ($event) {\n          return $options.onBlur($event);\n        }),\n        onPaste: _cache[2] || (_cache[2] = function ($event) {\n          return $options.onPaste($event);\n        }),\n        onKeydown: _cache[3] || (_cache[3] = function ($event) {\n          return $options.onKeyDown($event);\n        }),\n        pt: _ctx.ptm('input')\n      }, null, 8, [\"value\", \"type\", \"class\", \"inputmode\", \"variant\", \"readonly\", \"disabled\", \"invalid\", \"tabindex\", \"unstyled\", \"onInput\", \"pt\"])];\n    });\n  }), 128))], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100540082,
      "end": 1756100540193,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/inputotp/inputotp.esm.js\").then(r => r[\"default\"] || r.default || r))",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100540193,
      "end": 1756100540193,
      "order": "normal"
    }
  ]
}
