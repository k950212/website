{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/sticky/Sticky.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watch, computed, nextTick, reactive, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { extend, isHidden, unitToPx, numericProp, windowWidth, windowHeight, getScrollTop, getZIndexStyle, makeStringProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useRect, useEventListener, useScrollParent } from \"@vant/use\";\nimport { useVisibilityChange } from \"../composables/use-visibility-change.mjs\";\nconst [name, bem] = createNamespace(\"sticky\");\nconst stickyProps = {\n  zIndex: numericProp,\n  position: makeStringProp(\"top\"),\n  container: Object,\n  offsetTop: makeNumericProp(0),\n  offsetBottom: makeNumericProp(0)\n};\nvar stdin_default = defineComponent({\n  name,\n  props: stickyProps,\n  emits: [\"scroll\", \"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const scrollParent = useScrollParent(root);\n    const state = reactive({\n      fixed: false,\n      width: 0,\n      // root width\n      height: 0,\n      // root height\n      transform: 0\n    });\n    const isReset = ref(false);\n    const offset = computed(() => unitToPx(props.position === \"top\" ? props.offsetTop : props.offsetBottom));\n    const rootStyle = computed(() => {\n      if (isReset.value) {\n        return;\n      }\n      const {\n        fixed,\n        height,\n        width\n      } = state;\n      if (fixed) {\n        return {\n          width: `${width}px`,\n          height: `${height}px`\n        };\n      }\n    });\n    const stickyStyle = computed(() => {\n      if (!state.fixed || isReset.value) {\n        return;\n      }\n      const style = extend(getZIndexStyle(props.zIndex), {\n        width: `${state.width}px`,\n        height: `${state.height}px`,\n        [props.position]: `${offset.value}px`\n      });\n      if (state.transform) {\n        style.transform = `translate3d(0, ${state.transform}px, 0)`;\n      }\n      return style;\n    });\n    const emitScroll = (scrollTop) => emit(\"scroll\", {\n      scrollTop,\n      isFixed: state.fixed\n    });\n    const onScroll = () => {\n      if (!root.value || isHidden(root)) {\n        return;\n      }\n      const {\n        container,\n        position\n      } = props;\n      const rootRect = useRect(root);\n      const scrollTop = getScrollTop(window);\n      state.width = rootRect.width;\n      state.height = rootRect.height;\n      if (position === \"top\") {\n        if (container) {\n          const containerRect = useRect(container);\n          const difference = containerRect.bottom - offset.value - state.height;\n          state.fixed = offset.value > rootRect.top && containerRect.bottom > 0;\n          state.transform = difference < 0 ? difference : 0;\n        } else {\n          state.fixed = offset.value > rootRect.top;\n        }\n      } else {\n        const {\n          clientHeight\n        } = document.documentElement;\n        if (container) {\n          const containerRect = useRect(container);\n          const difference = clientHeight - containerRect.top - offset.value - state.height;\n          state.fixed = clientHeight - offset.value < rootRect.bottom && clientHeight > containerRect.top;\n          state.transform = difference < 0 ? -difference : 0;\n        } else {\n          state.fixed = clientHeight - offset.value < rootRect.bottom;\n        }\n      }\n      emitScroll(scrollTop);\n    };\n    watch(() => state.fixed, (value) => emit(\"change\", value));\n    useEventListener(\"scroll\", onScroll, {\n      target: scrollParent,\n      passive: true\n    });\n    useVisibilityChange(root, onScroll);\n    watch([windowWidth, windowHeight], () => {\n      if (!root.value || isHidden(root) || !state.fixed) {\n        return;\n      }\n      isReset.value = true;\n      nextTick(() => {\n        const rootRect = useRect(root);\n        state.width = rootRect.width;\n        state.height = rootRect.height;\n        isReset.value = false;\n      });\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"style\": rootStyle.value\n      }, [_createVNode(\"div\", {\n        \"class\": bem({\n          fixed: state.fixed && !isReset.value\n        }),\n        \"style\": stickyStyle.value\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)])]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  stickyProps\n};\n",
      "start": 1756100544692,
      "end": 1756100544716,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544716,
      "end": 1756100544716,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { ref, watch, computed, nextTick, reactive, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { extend, isHidden, unitToPx, numericProp, windowWidth, windowHeight, getScrollTop, getZIndexStyle, makeStringProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useRect, useEventListener, useScrollParent } from \"@vant/use\";\nimport { useVisibilityChange } from \"../composables/use-visibility-change.mjs\";\nconst [name, bem] = createNamespace(\"sticky\");\nconst stickyProps = {\n  zIndex: numericProp,\n  position: makeStringProp(\"top\"),\n  container: Object,\n  offsetTop: makeNumericProp(0),\n  offsetBottom: makeNumericProp(0)\n};\nvar stdin_default = defineComponent({\n  name,\n  props: stickyProps,\n  emits: [\"scroll\", \"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const scrollParent = useScrollParent(root);\n    const state = reactive({\n      fixed: false,\n      width: 0,\n      // root width\n      height: 0,\n      // root height\n      transform: 0\n    });\n    const isReset = ref(false);\n    const offset = computed(() => unitToPx(props.position === \"top\" ? props.offsetTop : props.offsetBottom));\n    const rootStyle = computed(() => {\n      if (isReset.value) {\n        return;\n      }\n      const {\n        fixed,\n        height,\n        width\n      } = state;\n      if (fixed) {\n        return {\n          width: `${width}px`,\n          height: `${height}px`\n        };\n      }\n    });\n    const stickyStyle = computed(() => {\n      if (!state.fixed || isReset.value) {\n        return;\n      }\n      const style = extend(getZIndexStyle(props.zIndex), {\n        width: `${state.width}px`,\n        height: `${state.height}px`,\n        [props.position]: `${offset.value}px`\n      });\n      if (state.transform) {\n        style.transform = `translate3d(0, ${state.transform}px, 0)`;\n      }\n      return style;\n    });\n    const emitScroll = (scrollTop) => emit(\"scroll\", {\n      scrollTop,\n      isFixed: state.fixed\n    });\n    const onScroll = () => {\n      if (!root.value || isHidden(root)) {\n        return;\n      }\n      const {\n        container,\n        position\n      } = props;\n      const rootRect = useRect(root);\n      const scrollTop = getScrollTop(void 0);\n      state.width = rootRect.width;\n      state.height = rootRect.height;\n      if (position === \"top\") {\n        if (container) {\n          const containerRect = useRect(container);\n          const difference = containerRect.bottom - offset.value - state.height;\n          state.fixed = offset.value > rootRect.top && containerRect.bottom > 0;\n          state.transform = difference < 0 ? difference : 0;\n        } else {\n          state.fixed = offset.value > rootRect.top;\n        }\n      } else {\n        const {\n          clientHeight\n        } = (void 0).documentElement;\n        if (container) {\n          const containerRect = useRect(container);\n          const difference = clientHeight - containerRect.top - offset.value - state.height;\n          state.fixed = clientHeight - offset.value < rootRect.bottom && clientHeight > containerRect.top;\n          state.transform = difference < 0 ? -difference : 0;\n        } else {\n          state.fixed = clientHeight - offset.value < rootRect.bottom;\n        }\n      }\n      emitScroll(scrollTop);\n    };\n    watch(() => state.fixed, (value) => emit(\"change\", value));\n    useEventListener(\"scroll\", onScroll, {\n      target: scrollParent,\n      passive: true\n    });\n    useVisibilityChange(root, onScroll);\n    watch([windowWidth, windowHeight], () => {\n      if (!root.value || isHidden(root) || !state.fixed) {\n        return;\n      }\n      isReset.value = true;\n      nextTick(() => {\n        const rootRect = useRect(root);\n        state.width = rootRect.width;\n        state.height = rootRect.height;\n        isReset.value = false;\n      });\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"style\": rootStyle.value\n      }, [_createVNode(\"div\", {\n        \"class\": bem({\n          fixed: state.fixed && !isReset.value\n        }),\n        \"style\": stickyStyle.value\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)])]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  stickyProps\n};\n",
      "start": 1756100544716,
      "end": 1756100544948,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/sticky/Sticky.mjs\"],\n  \"sourcesContent\": [\"import { ref, watch, computed, nextTick, reactive, defineComponent, createVNode as _createVNode } from \\\"vue\\\";\\nimport { extend, isHidden, unitToPx, numericProp, windowWidth, windowHeight, getScrollTop, getZIndexStyle, makeStringProp, makeNumericProp, createNamespace } from \\\"../utils/index.mjs\\\";\\nimport { useRect, useEventListener, useScrollParent } from \\\"@vant/use\\\";\\nimport { useVisibilityChange } from \\\"../composables/use-visibility-change.mjs\\\";\\nconst [name, bem] = createNamespace(\\\"sticky\\\");\\nconst stickyProps = {\\n  zIndex: numericProp,\\n  position: makeStringProp(\\\"top\\\"),\\n  container: Object,\\n  offsetTop: makeNumericProp(0),\\n  offsetBottom: makeNumericProp(0)\\n};\\nvar stdin_default = defineComponent({\\n  name,\\n  props: stickyProps,\\n  emits: [\\\"scroll\\\", \\\"change\\\"],\\n  setup(props, {\\n    emit,\\n    slots\\n  }) {\\n    const root = ref();\\n    const scrollParent = useScrollParent(root);\\n    const state = reactive({\\n      fixed: false,\\n      width: 0,\\n      // root width\\n      height: 0,\\n      // root height\\n      transform: 0\\n    });\\n    const isReset = ref(false);\\n    const offset = computed(() => unitToPx(props.position === \\\"top\\\" ? props.offsetTop : props.offsetBottom));\\n    const rootStyle = computed(() => {\\n      if (isReset.value) {\\n        return;\\n      }\\n      const {\\n        fixed,\\n        height,\\n        width\\n      } = state;\\n      if (fixed) {\\n        return {\\n          width: `${width}px`,\\n          height: `${height}px`\\n        };\\n      }\\n    });\\n    const stickyStyle = computed(() => {\\n      if (!state.fixed || isReset.value) {\\n        return;\\n      }\\n      const style = extend(getZIndexStyle(props.zIndex), {\\n        width: `${state.width}px`,\\n        height: `${state.height}px`,\\n        [props.position]: `${offset.value}px`\\n      });\\n      if (state.transform) {\\n        style.transform = `translate3d(0, ${state.transform}px, 0)`;\\n      }\\n      return style;\\n    });\\n    const emitScroll = (scrollTop) => emit(\\\"scroll\\\", {\\n      scrollTop,\\n      isFixed: state.fixed\\n    });\\n    const onScroll = () => {\\n      if (!root.value || isHidden(root)) {\\n        return;\\n      }\\n      const {\\n        container,\\n        position\\n      } = props;\\n      const rootRect = useRect(root);\\n      const scrollTop = getScrollTop(window);\\n      state.width = rootRect.width;\\n      state.height = rootRect.height;\\n      if (position === \\\"top\\\") {\\n        if (container) {\\n          const containerRect = useRect(container);\\n          const difference = containerRect.bottom - offset.value - state.height;\\n          state.fixed = offset.value > rootRect.top && containerRect.bottom > 0;\\n          state.transform = difference < 0 ? difference : 0;\\n        } else {\\n          state.fixed = offset.value > rootRect.top;\\n        }\\n      } else {\\n        const {\\n          clientHeight\\n        } = document.documentElement;\\n        if (container) {\\n          const containerRect = useRect(container);\\n          const difference = clientHeight - containerRect.top - offset.value - state.height;\\n          state.fixed = clientHeight - offset.value < rootRect.bottom && clientHeight > containerRect.top;\\n          state.transform = difference < 0 ? -difference : 0;\\n        } else {\\n          state.fixed = clientHeight - offset.value < rootRect.bottom;\\n        }\\n      }\\n      emitScroll(scrollTop);\\n    };\\n    watch(() => state.fixed, (value) => emit(\\\"change\\\", value));\\n    useEventListener(\\\"scroll\\\", onScroll, {\\n      target: scrollParent,\\n      passive: true\\n    });\\n    useVisibilityChange(root, onScroll);\\n    watch([windowWidth, windowHeight], () => {\\n      if (!root.value || isHidden(root) || !state.fixed) {\\n        return;\\n      }\\n      isReset.value = true;\\n      nextTick(() => {\\n        const rootRect = useRect(root);\\n        state.width = rootRect.width;\\n        state.height = rootRect.height;\\n        isReset.value = false;\\n      });\\n    });\\n    return () => {\\n      var _a;\\n      return _createVNode(\\\"div\\\", {\\n        \\\"ref\\\": root,\\n        \\\"style\\\": rootStyle.value\\n      }, [_createVNode(\\\"div\\\", {\\n        \\\"class\\\": bem({\\n          fixed: state.fixed && !isReset.value\\n        }),\\n        \\\"style\\\": stickyStyle.value\\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)])]);\\n    };\\n  }\\n});\\nexport {\\n  stdin_default as default,\\n  stickyProps\\n};\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544948,
      "end": 1756100544948,
      "order": "normal"
    }
  ]
}
