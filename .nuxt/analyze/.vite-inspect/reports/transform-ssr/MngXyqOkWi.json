{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/tabmenu/tabmenu.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import Ripple from 'primevue/ripple';\nimport { DomHandler } from 'primevue/utils';\nimport { mergeProps, resolveDirective, openBlock, createElementBlock, createElementVNode, Fragment, renderList, withDirectives, createBlock, resolveDynamicComponent, normalizeClass, createCommentVNode, toDisplayString } from 'vue';\nimport BaseComponent from 'primevue/basecomponent';\nimport TabMenuStyle from 'primevue/tabmenu/style';\n\nvar script$1 = {\n  name: 'BaseTabMenu',\n  \"extends\": BaseComponent,\n  props: {\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    activeIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: TabMenuStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'TabMenu',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:activeIndex', 'tab-change'],\n  timeout: null,\n  data: function data() {\n    return {\n      d_activeIndex: this.activeIndex\n    };\n  },\n  watch: {\n    activeIndex: function activeIndex(newValue) {\n      this.d_activeIndex = newValue;\n    }\n  },\n  mounted: function mounted() {\n    this.updateInkBar();\n    var activeItem = this.findActiveItem();\n    activeItem && (activeItem.tabIndex = '0');\n  },\n  updated: function updated() {\n    this.updateInkBar();\n  },\n  beforeUnmount: function beforeUnmount() {\n    clearTimeout(this.timeout);\n  },\n  methods: {\n    getPTOptions: function getPTOptions(key, item, index) {\n      return this.ptm(key, {\n        context: {\n          item: item,\n          index: index\n        }\n      });\n    },\n    onItemClick: function onItemClick(event, item, index) {\n      if (this.disabled(item)) {\n        event.preventDefault();\n        return;\n      }\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n      if (index !== this.d_activeIndex) {\n        this.d_activeIndex = index;\n        this.$emit('update:activeIndex', this.d_activeIndex);\n      }\n      this.$emit('tab-change', {\n        originalEvent: event,\n        index: index\n      });\n    },\n    onKeydownItem: function onKeydownItem(event, item, index) {\n      switch (event.code) {\n        case 'ArrowRight':\n          {\n            this.navigateToNextItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowLeft':\n          {\n            this.navigateToPrevItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'Home':\n          {\n            this.navigateToFirstItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'End':\n          {\n            this.navigateToLastItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'Space':\n        case 'NumpadEnter':\n        case 'Enter':\n          {\n            this.onItemClick(event, item, index);\n            event.preventDefault();\n            break;\n          }\n        case 'Tab':\n          {\n            this.onTabKey();\n            break;\n          }\n      }\n    },\n    navigateToNextItem: function navigateToNextItem(target) {\n      var nextItem = this.findNextItem(target);\n      nextItem && this.setFocusToMenuitem(target, nextItem);\n    },\n    navigateToPrevItem: function navigateToPrevItem(target) {\n      var prevItem = this.findPrevItem(target);\n      prevItem && this.setFocusToMenuitem(target, prevItem);\n    },\n    navigateToFirstItem: function navigateToFirstItem(target) {\n      var firstItem = this.findFirstItem(target);\n      firstItem && this.setFocusToMenuitem(target, firstItem);\n    },\n    navigateToLastItem: function navigateToLastItem(target) {\n      var lastItem = this.findLastItem(target);\n      lastItem && this.setFocusToMenuitem(target, lastItem);\n    },\n    findNextItem: function findNextItem(item) {\n      var nextItem = item.parentElement.nextElementSibling;\n      return nextItem ? DomHandler.getAttribute(nextItem, 'data-p-disabled') === true ? this.findNextItem(nextItem.children[0]) : nextItem.children[0] : null;\n    },\n    findPrevItem: function findPrevItem(item) {\n      var prevItem = item.parentElement.previousElementSibling;\n      return prevItem ? DomHandler.getAttribute(prevItem, 'data-p-disabled') === true ? this.findPrevItem(prevItem.children[0]) : prevItem.children[0] : null;\n    },\n    findFirstItem: function findFirstItem() {\n      var firstSibling = DomHandler.findSingle(this.$refs.nav, '[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      return firstSibling ? firstSibling.children[0] : null;\n    },\n    findLastItem: function findLastItem() {\n      var siblings = DomHandler.find(this.$refs.nav, '[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      return siblings ? siblings[siblings.length - 1].children[0] : null;\n    },\n    findActiveItem: function findActiveItem() {\n      var activeItem = DomHandler.findSingle(this.$refs.nav, '[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"][data-p-highlight=\"true\"]');\n      return activeItem ? activeItem.children[0] : null;\n    },\n    setFocusToMenuitem: function setFocusToMenuitem(target, focusableItem) {\n      target.tabIndex = '-1';\n      focusableItem.tabIndex = '0';\n      focusableItem.focus();\n    },\n    onTabKey: function onTabKey() {\n      var activeItem = DomHandler.findSingle(this.$refs.nav, '[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"][data-p-highlight=\"true\"]');\n      var focusedItem = DomHandler.findSingle(this.$refs.nav, '[data-pc-section=\"action\"][tabindex=\"0\"]');\n      if (focusedItem !== activeItem.children[0]) {\n        activeItem && (activeItem.children[0].tabIndex = '0');\n        focusedItem.tabIndex = '-1';\n      }\n    },\n    visible: function visible(item) {\n      return typeof item.visible === 'function' ? item.visible() : item.visible !== false;\n    },\n    disabled: function disabled(item) {\n      return typeof item.disabled === 'function' ? item.disabled() : item.disabled === true;\n    },\n    label: function label(item) {\n      return typeof item.label === 'function' ? item.label() : item.label;\n    },\n    updateInkBar: function updateInkBar() {\n      var tabs = this.$refs.nav.children;\n      var inkHighlighted = false;\n      for (var i = 0; i < tabs.length; i++) {\n        var tab = tabs[i];\n        if (DomHandler.getAttribute(tab, 'data-p-highlight')) {\n          this.$refs.inkbar.style.width = DomHandler.getWidth(tab) + 'px';\n          this.$refs.inkbar.style.left = DomHandler.getOffset(tab).left - DomHandler.getOffset(this.$refs.nav).left + 'px';\n          inkHighlighted = true;\n        }\n      }\n      if (!inkHighlighted) {\n        this.$refs.inkbar.style.width = '0px';\n        this.$refs.inkbar.style.left = '0px';\n      }\n    },\n    getMenuItemProps: function getMenuItemProps(item, index) {\n      var _this = this;\n      return {\n        action: mergeProps({\n          \"class\": this.cx('action'),\n          tabindex: -1,\n          onClick: function onClick($event) {\n            return _this.onItemClick($event, item, index);\n          },\n          onKeyDown: function onKeyDown($event) {\n            return _this.onKeydownItem($event, item, index);\n          }\n        }, this.getPTOptions('action', item, index)),\n        icon: mergeProps({\n          \"class\": [this.cx('icon'), item.icon]\n        }, this.getPTOptions('icon', item, index)),\n        label: mergeProps({\n          \"class\": this.cx('label')\n        }, this.getPTOptions('label', item, index))\n      };\n    }\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"aria-labelledby\", \"aria-label\"];\nvar _hoisted_2 = [\"onClick\", \"onKeydown\", \"data-p-highlight\", \"data-p-disabled\"];\nvar _hoisted_3 = [\"href\", \"target\", \"aria-label\", \"aria-disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"ul\", mergeProps({\n    ref: \"nav\",\n    \"class\": _ctx.cx('menu'),\n    role: \"menubar\",\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-label\": _ctx.ariaLabel\n  }, _ctx.ptm('menu')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function (item, i) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: $options.label(item) + '_' + i.toString()\n    }, [$options.visible(item) ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 0,\n      ref_for: true,\n      ref: \"tab\",\n      \"class\": [_ctx.cx('menuitem', {\n        item: item,\n        index: i\n      }), item[\"class\"]],\n      role: \"presentation\",\n      onClick: function onClick($event) {\n        return $options.onItemClick($event, item, i);\n      },\n      onKeydown: function onKeydown($event) {\n        return $options.onKeydownItem($event, item, i);\n      }\n    }, $options.getPTOptions('menuitem', item, i), {\n      \"data-p-highlight\": $data.d_activeIndex === i,\n      \"data-p-disabled\": $options.disabled(item)\n    }), [!_ctx.$slots.item ? withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n      key: 0,\n      ref_for: true,\n      ref: \"tabLink\",\n      role: \"menuitem\",\n      href: item.url,\n      \"class\": _ctx.cx('action'),\n      target: item.target,\n      \"aria-label\": $options.label(item),\n      \"aria-disabled\": $options.disabled(item),\n      tabindex: -1\n    }, $options.getPTOptions('action', item, i)), [_ctx.$slots.itemicon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.itemicon), {\n      key: 0,\n      item: item,\n      \"class\": normalizeClass(_ctx.cx('icon'))\n    }, null, 8, [\"item\", \"class\"])) : item.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 1,\n      \"class\": [_ctx.cx('icon'), item.icon]\n    }, $options.getPTOptions('icon', item, i)), null, 16)) : createCommentVNode(\"\", true), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('label')\n    }, $options.getPTOptions('label', item, i)), toDisplayString($options.label(item)), 17)], 16, _hoisted_3)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {\n      key: 1,\n      item: item,\n      index: i,\n      active: i === $data.d_activeIndex,\n      label: $options.label(item),\n      props: $options.getMenuItemProps(item, i)\n    }, null, 8, [\"item\", \"index\", \"active\", \"label\", \"props\"]))], 16, _hoisted_2)) : createCommentVNode(\"\", true)], 64);\n  }), 128)), createElementVNode(\"li\", mergeProps({\n    ref: \"inkbar\",\n    role: \"none\",\n    \"class\": _ctx.cx('inkbar')\n  }, _ctx.ptm('inkbar')), null, 16)], 16, _hoisted_1)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100540973,
      "end": 1756100541021,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100541021,
      "end": 1756100541021,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100541021,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100541022,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100541022,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100541022,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100541022,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100541022,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100541022,
      "end": 1756100541022,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100541022,
      "end": 1756100541023,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100541023,
      "end": 1756100541023,
      "order": "normal"
    }
  ]
}
