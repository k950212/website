{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/lazyload/vue-lazyload/listener.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useRect } from \"@vant/use\";\nimport { loadImageAsync } from \"./util.mjs\";\nimport { noop } from \"../../utils/index.mjs\";\nclass ReactiveListener {\n  constructor({\n    el,\n    src,\n    error,\n    loading,\n    bindType,\n    $parent,\n    options,\n    cors,\n    elRenderer,\n    imageCache\n  }) {\n    this.el = el;\n    this.src = src;\n    this.error = error;\n    this.loading = loading;\n    this.bindType = bindType;\n    this.attempt = 0;\n    this.cors = cors;\n    this.naturalHeight = 0;\n    this.naturalWidth = 0;\n    this.options = options;\n    this.$parent = $parent;\n    this.elRenderer = elRenderer;\n    this.imageCache = imageCache;\n    this.performanceData = {\n      loadStart: 0,\n      loadEnd: 0\n    };\n    this.filter();\n    this.initState();\n    this.render(\"loading\", false);\n  }\n  /*\n   * init listener state\n   * @return\n   */\n  initState() {\n    if (\"dataset\" in this.el) {\n      this.el.dataset.src = this.src;\n    } else {\n      this.el.setAttribute(\"data-src\", this.src);\n    }\n    this.state = {\n      loading: false,\n      error: false,\n      loaded: false,\n      rendered: false\n    };\n  }\n  /*\n   * record performance\n   * @return\n   */\n  record(event) {\n    this.performanceData[event] = Date.now();\n  }\n  /*\n   * update image listener data\n   * @param  {String} image uri\n   * @param  {String} loading image uri\n   * @param  {String} error image uri\n   * @return\n   */\n  update({ src, loading, error }) {\n    const oldSrc = this.src;\n    this.src = src;\n    this.loading = loading;\n    this.error = error;\n    this.filter();\n    if (oldSrc !== this.src) {\n      this.attempt = 0;\n      this.initState();\n    }\n  }\n  /*\n   *  check el is in view\n   * @return {Boolean} el is in view\n   */\n  checkInView() {\n    const rect = useRect(this.el);\n    return rect.top < window.innerHeight * this.options.preLoad && rect.bottom > this.options.preLoadTop && rect.left < window.innerWidth * this.options.preLoad && rect.right > 0;\n  }\n  /*\n   * listener filter\n   */\n  filter() {\n    Object.keys(this.options.filter).forEach((key) => {\n      this.options.filter[key](this, this.options);\n    });\n  }\n  /*\n   * render loading first\n   * @params cb:Function\n   * @return\n   */\n  renderLoading(cb) {\n    this.state.loading = true;\n    loadImageAsync(\n      {\n        src: this.loading,\n        cors: this.cors\n      },\n      () => {\n        this.render(\"loading\", false);\n        this.state.loading = false;\n        cb();\n      },\n      () => {\n        cb();\n        this.state.loading = false;\n        if (process.env.NODE_ENV !== \"production\" && !this.options.silent)\n          console.warn(\n            `[@vant/lazyload] load failed with loading image(${this.loading})`\n          );\n      }\n    );\n  }\n  /*\n   * try load image and  render it\n   * @return\n   */\n  load(onFinish = noop) {\n    if (this.attempt > this.options.attempt - 1 && this.state.error) {\n      if (process.env.NODE_ENV !== \"production\" && !this.options.silent) {\n        console.log(\n          `[@vant/lazyload] ${this.src} tried too more than ${this.options.attempt} times`\n        );\n      }\n      onFinish();\n      return;\n    }\n    if (this.state.rendered && this.state.loaded) return;\n    if (this.imageCache.has(this.src)) {\n      this.state.loaded = true;\n      this.render(\"loaded\", true);\n      this.state.rendered = true;\n      return onFinish();\n    }\n    this.renderLoading(() => {\n      var _a, _b;\n      this.attempt++;\n      (_b = (_a = this.options.adapter).beforeLoad) == null ? void 0 : _b.call(_a, this, this.options);\n      this.record(\"loadStart\");\n      loadImageAsync(\n        {\n          src: this.src,\n          cors: this.cors\n        },\n        (data) => {\n          this.naturalHeight = data.naturalHeight;\n          this.naturalWidth = data.naturalWidth;\n          this.state.loaded = true;\n          this.state.error = false;\n          this.record(\"loadEnd\");\n          this.render(\"loaded\", false);\n          this.state.rendered = true;\n          this.imageCache.add(this.src);\n          onFinish();\n        },\n        (err) => {\n          !this.options.silent && console.error(err);\n          this.state.error = true;\n          this.state.loaded = false;\n          this.render(\"error\", false);\n        }\n      );\n    });\n  }\n  /*\n   * render image\n   * @param  {String} state to render // ['loading', 'src', 'error']\n   * @param  {String} is form cache\n   * @return\n   */\n  render(state, cache) {\n    this.elRenderer(this, state, cache);\n  }\n  /*\n   * output performance data\n   * @return {Object} performance data\n   */\n  performance() {\n    let state = \"loading\";\n    let time = 0;\n    if (this.state.loaded) {\n      state = \"loaded\";\n      time = (this.performanceData.loadEnd - this.performanceData.loadStart) / 1e3;\n    }\n    if (this.state.error) state = \"error\";\n    return {\n      src: this.src,\n      state,\n      time\n    };\n  }\n  /*\n   * $destroy\n   * @return\n   */\n  $destroy() {\n    this.el = null;\n    this.src = null;\n    this.error = null;\n    this.loading = null;\n    this.bindType = null;\n    this.attempt = 0;\n  }\n}\nexport {\n  ReactiveListener as default\n};\n",
      "start": 1756100544984,
      "end": 1756100544987,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544987,
      "end": 1756100544987,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544988,
      "end": 1756100544988,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { useRect } from \"@vant/use\";\nimport { loadImageAsync } from \"./util.mjs\";\nimport { noop } from \"../../utils/index.mjs\";\nclass ReactiveListener {\n  constructor({\n    el,\n    src,\n    error,\n    loading,\n    bindType,\n    $parent,\n    options,\n    cors,\n    elRenderer,\n    imageCache\n  }) {\n    this.el = el;\n    this.src = src;\n    this.error = error;\n    this.loading = loading;\n    this.bindType = bindType;\n    this.attempt = 0;\n    this.cors = cors;\n    this.naturalHeight = 0;\n    this.naturalWidth = 0;\n    this.options = options;\n    this.$parent = $parent;\n    this.elRenderer = elRenderer;\n    this.imageCache = imageCache;\n    this.performanceData = {\n      loadStart: 0,\n      loadEnd: 0\n    };\n    this.filter();\n    this.initState();\n    this.render(\"loading\", false);\n  }\n  /*\n   * init listener state\n   * @return\n   */\n  initState() {\n    if (\"dataset\" in this.el) {\n      this.el.dataset.src = this.src;\n    } else {\n      this.el.setAttribute(\"data-src\", this.src);\n    }\n    this.state = {\n      loading: false,\n      error: false,\n      loaded: false,\n      rendered: false\n    };\n  }\n  /*\n   * record performance\n   * @return\n   */\n  record(event) {\n    this.performanceData[event] = Date.now();\n  }\n  /*\n   * update image listener data\n   * @param  {String} image uri\n   * @param  {String} loading image uri\n   * @param  {String} error image uri\n   * @return\n   */\n  update({ src, loading, error }) {\n    const oldSrc = this.src;\n    this.src = src;\n    this.loading = loading;\n    this.error = error;\n    this.filter();\n    if (oldSrc !== this.src) {\n      this.attempt = 0;\n      this.initState();\n    }\n  }\n  /*\n   *  check el is in view\n   * @return {Boolean} el is in view\n   */\n  checkInView() {\n    const rect = useRect(this.el);\n    return rect.top < (void 0).innerHeight * this.options.preLoad && rect.bottom > this.options.preLoadTop && rect.left < (void 0).innerWidth * this.options.preLoad && rect.right > 0;\n  }\n  /*\n   * listener filter\n   */\n  filter() {\n    Object.keys(this.options.filter).forEach((key) => {\n      this.options.filter[key](this, this.options);\n    });\n  }\n  /*\n   * render loading first\n   * @params cb:Function\n   * @return\n   */\n  renderLoading(cb) {\n    this.state.loading = true;\n    loadImageAsync(\n      {\n        src: this.loading,\n        cors: this.cors\n      },\n      () => {\n        this.render(\"loading\", false);\n        this.state.loading = false;\n        cb();\n      },\n      () => {\n        cb();\n        this.state.loading = false;\n        if (process.env.NODE_ENV !== \"production\" && !this.options.silent)\n          console.warn(\n            `[@vant/lazyload] load failed with loading image(${this.loading})`\n          );\n      }\n    );\n  }\n  /*\n   * try load image and  render it\n   * @return\n   */\n  load(onFinish = noop) {\n    if (this.attempt > this.options.attempt - 1 && this.state.error) {\n      if (process.env.NODE_ENV !== \"production\" && !this.options.silent) {\n        console.log(\n          `[@vant/lazyload] ${this.src} tried too more than ${this.options.attempt} times`\n        );\n      }\n      onFinish();\n      return;\n    }\n    if (this.state.rendered && this.state.loaded)\n      return;\n    if (this.imageCache.has(this.src)) {\n      this.state.loaded = true;\n      this.render(\"loaded\", true);\n      this.state.rendered = true;\n      return onFinish();\n    }\n    this.renderLoading(() => {\n      var _a, _b;\n      this.attempt++;\n      (_b = (_a = this.options.adapter).beforeLoad) == null ? void 0 : _b.call(_a, this, this.options);\n      this.record(\"loadStart\");\n      loadImageAsync(\n        {\n          src: this.src,\n          cors: this.cors\n        },\n        (data) => {\n          this.naturalHeight = data.naturalHeight;\n          this.naturalWidth = data.naturalWidth;\n          this.state.loaded = true;\n          this.state.error = false;\n          this.record(\"loadEnd\");\n          this.render(\"loaded\", false);\n          this.state.rendered = true;\n          this.imageCache.add(this.src);\n          onFinish();\n        },\n        (err) => {\n          !this.options.silent && console.error(err);\n          this.state.error = true;\n          this.state.loaded = false;\n          this.render(\"error\", false);\n        }\n      );\n    });\n  }\n  /*\n   * render image\n   * @param  {String} state to render // ['loading', 'src', 'error']\n   * @param  {String} is form cache\n   * @return\n   */\n  render(state, cache) {\n    this.elRenderer(this, state, cache);\n  }\n  /*\n   * output performance data\n   * @return {Object} performance data\n   */\n  performance() {\n    let state = \"loading\";\n    let time = 0;\n    if (this.state.loaded) {\n      state = \"loaded\";\n      time = (this.performanceData.loadEnd - this.performanceData.loadStart) / 1e3;\n    }\n    if (this.state.error)\n      state = \"error\";\n    return {\n      src: this.src,\n      state,\n      time\n    };\n  }\n  /*\n   * $destroy\n   * @return\n   */\n  $destroy() {\n    this.el = null;\n    this.src = null;\n    this.error = null;\n    this.loading = null;\n    this.bindType = null;\n    this.attempt = 0;\n  }\n}\nexport {\n  ReactiveListener as default\n};\n",
      "start": 1756100544988,
      "end": 1756100544994,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/lazyload/vue-lazyload/listener.mjs\"],\n  \"sourcesContent\": [\"import { useRect } from \\\"@vant/use\\\";\\nimport { loadImageAsync } from \\\"./util.mjs\\\";\\nimport { noop } from \\\"../../utils/index.mjs\\\";\\nclass ReactiveListener {\\n  constructor({\\n    el,\\n    src,\\n    error,\\n    loading,\\n    bindType,\\n    $parent,\\n    options,\\n    cors,\\n    elRenderer,\\n    imageCache\\n  }) {\\n    this.el = el;\\n    this.src = src;\\n    this.error = error;\\n    this.loading = loading;\\n    this.bindType = bindType;\\n    this.attempt = 0;\\n    this.cors = cors;\\n    this.naturalHeight = 0;\\n    this.naturalWidth = 0;\\n    this.options = options;\\n    this.$parent = $parent;\\n    this.elRenderer = elRenderer;\\n    this.imageCache = imageCache;\\n    this.performanceData = {\\n      loadStart: 0,\\n      loadEnd: 0\\n    };\\n    this.filter();\\n    this.initState();\\n    this.render(\\\"loading\\\", false);\\n  }\\n  /*\\n   * init listener state\\n   * @return\\n   */\\n  initState() {\\n    if (\\\"dataset\\\" in this.el) {\\n      this.el.dataset.src = this.src;\\n    } else {\\n      this.el.setAttribute(\\\"data-src\\\", this.src);\\n    }\\n    this.state = {\\n      loading: false,\\n      error: false,\\n      loaded: false,\\n      rendered: false\\n    };\\n  }\\n  /*\\n   * record performance\\n   * @return\\n   */\\n  record(event) {\\n    this.performanceData[event] = Date.now();\\n  }\\n  /*\\n   * update image listener data\\n   * @param  {String} image uri\\n   * @param  {String} loading image uri\\n   * @param  {String} error image uri\\n   * @return\\n   */\\n  update({ src, loading, error }) {\\n    const oldSrc = this.src;\\n    this.src = src;\\n    this.loading = loading;\\n    this.error = error;\\n    this.filter();\\n    if (oldSrc !== this.src) {\\n      this.attempt = 0;\\n      this.initState();\\n    }\\n  }\\n  /*\\n   *  check el is in view\\n   * @return {Boolean} el is in view\\n   */\\n  checkInView() {\\n    const rect = useRect(this.el);\\n    return rect.top < window.innerHeight * this.options.preLoad && rect.bottom > this.options.preLoadTop && rect.left < window.innerWidth * this.options.preLoad && rect.right > 0;\\n  }\\n  /*\\n   * listener filter\\n   */\\n  filter() {\\n    Object.keys(this.options.filter).forEach((key) => {\\n      this.options.filter[key](this, this.options);\\n    });\\n  }\\n  /*\\n   * render loading first\\n   * @params cb:Function\\n   * @return\\n   */\\n  renderLoading(cb) {\\n    this.state.loading = true;\\n    loadImageAsync(\\n      {\\n        src: this.loading,\\n        cors: this.cors\\n      },\\n      () => {\\n        this.render(\\\"loading\\\", false);\\n        this.state.loading = false;\\n        cb();\\n      },\\n      () => {\\n        cb();\\n        this.state.loading = false;\\n        if (process.env.NODE_ENV !== \\\"production\\\" && !this.options.silent)\\n          console.warn(\\n            `[@vant/lazyload] load failed with loading image(${this.loading})`\\n          );\\n      }\\n    );\\n  }\\n  /*\\n   * try load image and  render it\\n   * @return\\n   */\\n  load(onFinish = noop) {\\n    if (this.attempt > this.options.attempt - 1 && this.state.error) {\\n      if (process.env.NODE_ENV !== \\\"production\\\" && !this.options.silent) {\\n        console.log(\\n          `[@vant/lazyload] ${this.src} tried too more than ${this.options.attempt} times`\\n        );\\n      }\\n      onFinish();\\n      return;\\n    }\\n    if (this.state.rendered && this.state.loaded) return;\\n    if (this.imageCache.has(this.src)) {\\n      this.state.loaded = true;\\n      this.render(\\\"loaded\\\", true);\\n      this.state.rendered = true;\\n      return onFinish();\\n    }\\n    this.renderLoading(() => {\\n      var _a, _b;\\n      this.attempt++;\\n      (_b = (_a = this.options.adapter).beforeLoad) == null ? void 0 : _b.call(_a, this, this.options);\\n      this.record(\\\"loadStart\\\");\\n      loadImageAsync(\\n        {\\n          src: this.src,\\n          cors: this.cors\\n        },\\n        (data) => {\\n          this.naturalHeight = data.naturalHeight;\\n          this.naturalWidth = data.naturalWidth;\\n          this.state.loaded = true;\\n          this.state.error = false;\\n          this.record(\\\"loadEnd\\\");\\n          this.render(\\\"loaded\\\", false);\\n          this.state.rendered = true;\\n          this.imageCache.add(this.src);\\n          onFinish();\\n        },\\n        (err) => {\\n          !this.options.silent && console.error(err);\\n          this.state.error = true;\\n          this.state.loaded = false;\\n          this.render(\\\"error\\\", false);\\n        }\\n      );\\n    });\\n  }\\n  /*\\n   * render image\\n   * @param  {String} state to render // ['loading', 'src', 'error']\\n   * @param  {String} is form cache\\n   * @return\\n   */\\n  render(state, cache) {\\n    this.elRenderer(this, state, cache);\\n  }\\n  /*\\n   * output performance data\\n   * @return {Object} performance data\\n   */\\n  performance() {\\n    let state = \\\"loading\\\";\\n    let time = 0;\\n    if (this.state.loaded) {\\n      state = \\\"loaded\\\";\\n      time = (this.performanceData.loadEnd - this.performanceData.loadStart) / 1e3;\\n    }\\n    if (this.state.error) state = \\\"error\\\";\\n    return {\\n      src: this.src,\\n      state,\\n      time\\n    };\\n  }\\n  /*\\n   * $destroy\\n   * @return\\n   */\\n  $destroy() {\\n    this.el = null;\\n    this.src = null;\\n    this.error = null;\\n    this.loading = null;\\n    this.bindType = null;\\n    this.attempt = 0;\\n  }\\n}\\nexport {\\n  ReactiveListener as default\\n};\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544994,
      "end": 1756100544994,
      "order": "normal"
    }
  ]
}
