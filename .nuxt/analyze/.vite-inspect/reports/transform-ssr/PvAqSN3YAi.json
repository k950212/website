{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/button/Button.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, createVNode as _createVNode } from \"vue\";\nimport { extend, numericProp, preventDefault, makeStringProp, createNamespace, BORDER_SURROUND } from \"../utils/index.mjs\";\nimport { useRoute, routeProps } from \"../composables/use-route.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nconst [name, bem] = createNamespace(\"button\");\nconst buttonProps = extend({}, routeProps, {\n  tag: makeStringProp(\"button\"),\n  text: String,\n  icon: String,\n  type: makeStringProp(\"default\"),\n  size: makeStringProp(\"normal\"),\n  color: String,\n  block: Boolean,\n  plain: Boolean,\n  round: Boolean,\n  square: Boolean,\n  loading: Boolean,\n  hairline: Boolean,\n  disabled: Boolean,\n  iconPrefix: String,\n  nativeType: makeStringProp(\"button\"),\n  loadingSize: numericProp,\n  loadingText: String,\n  loadingType: String,\n  iconPosition: makeStringProp(\"left\")\n});\nvar stdin_default = defineComponent({\n  name,\n  props: buttonProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const route = useRoute();\n    const renderLoadingIcon = () => {\n      if (slots.loading) {\n        return slots.loading();\n      }\n      return _createVNode(Loading, {\n        \"size\": props.loadingSize,\n        \"type\": props.loadingType,\n        \"class\": bem(\"loading\")\n      }, null);\n    };\n    const renderIcon = () => {\n      if (props.loading) {\n        return renderLoadingIcon();\n      }\n      if (slots.icon) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"icon\")\n        }, [slots.icon()]);\n      }\n      if (props.icon) {\n        return _createVNode(Icon, {\n          \"name\": props.icon,\n          \"class\": bem(\"icon\"),\n          \"classPrefix\": props.iconPrefix\n        }, null);\n      }\n    };\n    const renderText = () => {\n      let text;\n      if (props.loading) {\n        text = props.loadingText;\n      } else {\n        text = slots.default ? slots.default() : props.text;\n      }\n      if (text) {\n        return _createVNode(\"span\", {\n          \"class\": bem(\"text\")\n        }, [text]);\n      }\n    };\n    const getStyle = () => {\n      const {\n        color,\n        plain\n      } = props;\n      if (color) {\n        const style = {\n          color: plain ? color : \"white\"\n        };\n        if (!plain) {\n          style.background = color;\n        }\n        if (color.includes(\"gradient\")) {\n          style.border = 0;\n        } else {\n          style.borderColor = color;\n        }\n        return style;\n      }\n    };\n    const onClick = (event) => {\n      if (props.loading) {\n        preventDefault(event);\n      } else if (!props.disabled) {\n        emit(\"click\", event);\n        route();\n      }\n    };\n    return () => {\n      const {\n        tag,\n        type,\n        size,\n        block,\n        round,\n        plain,\n        square,\n        loading,\n        disabled,\n        hairline,\n        nativeType,\n        iconPosition\n      } = props;\n      const classes = [bem([type, size, {\n        plain,\n        block,\n        round,\n        square,\n        loading,\n        disabled,\n        hairline\n      }]), {\n        [BORDER_SURROUND]: hairline\n      }];\n      return _createVNode(tag, {\n        \"type\": nativeType,\n        \"class\": classes,\n        \"style\": getStyle(),\n        \"disabled\": disabled,\n        \"onClick\": onClick\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": bem(\"content\")\n        }, [iconPosition === \"left\" && renderIcon(), renderText(), iconPosition === \"right\" && renderIcon()])]\n      });\n    };\n  }\n});\nexport {\n  buttonProps,\n  stdin_default as default\n};\n",
      "start": 1756100544518,
      "end": 1756100544540,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544540,
      "end": 1756100544540,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100544540,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544541,
      "end": 1756100544541,
      "order": "normal"
    }
  ]
}
