{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/highlight/Highlight.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, computed, createVNode as _createVNode } from \"vue\";\nimport { createNamespace, makeRequiredProp, makeStringProp, truthProp } from \"../utils/index.mjs\";\nconst [name, bem] = createNamespace(\"highlight\");\nconst highlightProps = {\n  autoEscape: truthProp,\n  caseSensitive: Boolean,\n  highlightClass: String,\n  highlightTag: makeStringProp(\"span\"),\n  keywords: makeRequiredProp([String, Array]),\n  sourceString: makeStringProp(\"\"),\n  tag: makeStringProp(\"div\"),\n  unhighlightClass: String,\n  unhighlightTag: makeStringProp(\"span\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: highlightProps,\n  setup(props) {\n    const highlightChunks = computed(() => {\n      const {\n        autoEscape,\n        caseSensitive,\n        keywords,\n        sourceString\n      } = props;\n      const flags = caseSensitive ? \"g\" : \"gi\";\n      const _keywords = Array.isArray(keywords) ? keywords : [keywords];\n      let chunks = _keywords.filter((keyword) => keyword).reduce((chunks2, keyword) => {\n        if (autoEscape) {\n          keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        }\n        const regex = new RegExp(keyword, flags);\n        let match;\n        while (match = regex.exec(sourceString)) {\n          const start = match.index;\n          const end = regex.lastIndex;\n          if (start >= end) {\n            regex.lastIndex++;\n            continue;\n          }\n          chunks2.push({\n            start,\n            end,\n            highlight: true\n          });\n        }\n        return chunks2;\n      }, []);\n      chunks = chunks.sort((a, b) => a.start - b.start).reduce((chunks2, currentChunk) => {\n        const prevChunk = chunks2[chunks2.length - 1];\n        if (!prevChunk || currentChunk.start > prevChunk.end) {\n          const unhighlightStart = prevChunk ? prevChunk.end : 0;\n          const unhighlightEnd = currentChunk.start;\n          if (unhighlightStart !== unhighlightEnd) {\n            chunks2.push({\n              start: unhighlightStart,\n              end: unhighlightEnd,\n              highlight: false\n            });\n          }\n          chunks2.push(currentChunk);\n        } else {\n          prevChunk.end = Math.max(prevChunk.end, currentChunk.end);\n        }\n        return chunks2;\n      }, []);\n      const lastChunk = chunks[chunks.length - 1];\n      if (!lastChunk) {\n        chunks.push({\n          start: 0,\n          end: sourceString.length,\n          highlight: false\n        });\n      }\n      if (lastChunk && lastChunk.end < sourceString.length) {\n        chunks.push({\n          start: lastChunk.end,\n          end: sourceString.length,\n          highlight: false\n        });\n      }\n      return chunks;\n    });\n    const renderContent = () => {\n      const {\n        sourceString,\n        highlightClass,\n        unhighlightClass,\n        highlightTag,\n        unhighlightTag\n      } = props;\n      return highlightChunks.value.map((chunk) => {\n        const {\n          start,\n          end,\n          highlight\n        } = chunk;\n        const text = sourceString.slice(start, end);\n        if (highlight) {\n          return _createVNode(highlightTag, {\n            \"class\": [bem(\"tag\"), highlightClass]\n          }, {\n            default: () => [text]\n          });\n        }\n        return _createVNode(unhighlightTag, {\n          \"class\": unhighlightClass\n        }, {\n          default: () => [text]\n        });\n      });\n    };\n    return () => {\n      const {\n        tag\n      } = props;\n      return _createVNode(tag, {\n        \"class\": bem()\n      }, {\n        default: () => [renderContent()]\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  highlightProps\n};\n",
      "start": 1756100544632,
      "end": 1756100544666,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544666,
      "end": 1756100544666,
      "order": "normal"
    }
  ]
}
