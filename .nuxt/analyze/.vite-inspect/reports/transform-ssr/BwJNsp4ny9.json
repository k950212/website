{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/confirmpopup/confirmpopup.esm.js?nuxt_component=async&nuxt_component_name=ConfirmPopup&nuxt_component_export=default",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import Button from 'primevue/button';\nimport ConfirmationEventBus from 'primevue/confirmationeventbus';\nimport FocusTrap from 'primevue/focustrap';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport { ZIndexUtils, DomHandler, ConnectedOverlayScrollHandler } from 'primevue/utils';\nimport BaseComponent from 'primevue/basecomponent';\nimport ConfirmPopupStyle from 'primevue/confirmpopup/style';\nimport { resolveComponent, resolveDirective, openBlock, createBlock, withCtx, createVNode, Transition, mergeProps, withDirectives, createElementBlock, renderSlot, Fragment, resolveDynamicComponent, normalizeClass, createCommentVNode, createElementVNode, toDisplayString, createSlots } from 'vue';\n\nvar script$1 = {\n  name: 'BaseConfirmPopup',\n  \"extends\": BaseComponent,\n  props: {\n    group: String\n  },\n  style: ConfirmPopupStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'ConfirmPopup',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  data: function data() {\n    return {\n      visible: false,\n      confirmation: null,\n      autoFocusAccept: null,\n      autoFocusReject: null,\n      target: null\n    };\n  },\n  target: null,\n  outsideClickListener: null,\n  scrollHandler: null,\n  resizeListener: null,\n  container: null,\n  confirmListener: null,\n  closeListener: null,\n  mounted: function mounted() {\n    var _this = this;\n    this.confirmListener = function (options) {\n      if (!options) {\n        return;\n      }\n      if (options.group === _this.group) {\n        _this.confirmation = options;\n        _this.target = options.target;\n        if (_this.confirmation.onShow) {\n          _this.confirmation.onShow();\n        }\n        _this.visible = true;\n      }\n    };\n    this.closeListener = function () {\n      _this.visible = false;\n      _this.confirmation = null;\n    };\n    ConfirmationEventBus.on('confirm', this.confirmListener);\n    ConfirmationEventBus.on('close', this.closeListener);\n  },\n  beforeUnmount: function beforeUnmount() {\n    ConfirmationEventBus.off('confirm', this.confirmListener);\n    ConfirmationEventBus.off('close', this.closeListener);\n    this.unbindOutsideClickListener();\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    this.unbindResizeListener();\n    if (this.container) {\n      ZIndexUtils.clear(this.container);\n      this.container = null;\n    }\n    this.target = null;\n    this.confirmation = null;\n  },\n  methods: {\n    accept: function accept() {\n      if (this.confirmation.accept) {\n        this.confirmation.accept();\n      }\n      this.visible = false;\n    },\n    reject: function reject() {\n      if (this.confirmation.reject) {\n        this.confirmation.reject();\n      }\n      this.visible = false;\n    },\n    onHide: function onHide() {\n      if (this.confirmation.onHide) {\n        this.confirmation.onHide();\n      }\n      this.visible = false;\n    },\n    onAcceptKeydown: function onAcceptKeydown(event) {\n      if (event.code === 'Space' || event.code === 'Enter' || event.code === 'NumpadEnter') {\n        this.accept();\n        DomHandler.focus(this.target);\n        event.preventDefault();\n      }\n    },\n    onRejectKeydown: function onRejectKeydown(event) {\n      if (event.code === 'Space' || event.code === 'Enter' || event.code === 'NumpadEnter') {\n        this.reject();\n        DomHandler.focus(this.target);\n        event.preventDefault();\n      }\n    },\n    onEnter: function onEnter(el) {\n      this.autoFocusAccept = this.confirmation.defaultFocus === undefined || this.confirmation.defaultFocus === 'accept' ? true : false;\n      this.autoFocusReject = this.confirmation.defaultFocus === 'reject' ? true : false;\n      this.target = document.activeElement;\n      this.bindOutsideClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n      ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.focus();\n    },\n    onLeave: function onLeave() {\n      this.autoFocusAccept = null;\n      this.autoFocusReject = null;\n      DomHandler.focus(this.target);\n      this.target = null;\n      this.unbindOutsideClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n    },\n    onAfterLeave: function onAfterLeave(el) {\n      ZIndexUtils.clear(el);\n    },\n    alignOverlay: function alignOverlay() {\n      DomHandler.absolutePosition(this.container, this.target, false);\n      var containerOffset = DomHandler.getOffset(this.container);\n      var targetOffset = DomHandler.getOffset(this.target);\n      var arrowLeft = 0;\n      if (containerOffset.left < targetOffset.left) {\n        arrowLeft = targetOffset.left - containerOffset.left;\n      }\n      this.container.style.setProperty('--overlayArrowLeft', \"\".concat(arrowLeft, \"px\"));\n      if (containerOffset.top < targetOffset.top) {\n        this.container.setAttribute('data-p-confirm-popup-flipped', 'true');\n        !this.isUnstyled && DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n      }\n    },\n    bindOutsideClickListener: function bindOutsideClickListener() {\n      var _this2 = this;\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = function (event) {\n          if (_this2.visible && _this2.container && !_this2.container.contains(event.target) && !_this2.isTargetClicked(event)) {\n            if (_this2.confirmation.onHide) {\n              _this2.confirmation.onHide();\n            }\n            _this2.visible = false;\n          } else {\n            _this2.alignOverlay();\n          }\n        };\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    },\n    unbindOutsideClickListener: function unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    },\n    bindScrollListener: function bindScrollListener() {\n      var _this3 = this;\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function () {\n          if (_this3.visible) {\n            _this3.visible = false;\n          }\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    },\n    unbindScrollListener: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    },\n    bindResizeListener: function bindResizeListener() {\n      var _this4 = this;\n      if (!this.resizeListener) {\n        this.resizeListener = function () {\n          if (_this4.visible && !DomHandler.isTouchDevice()) {\n            _this4.visible = false;\n          }\n        };\n        window.addEventListener('resize', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    focus: function focus() {\n      var focusTarget = this.container.querySelector('[autofocus]');\n      if (focusTarget) {\n        focusTarget.focus({\n          preventScroll: true\n        }); // Firefox requires preventScroll\n      }\n    },\n    isTargetClicked: function isTargetClicked(event) {\n      return this.target && (this.target === event.target || this.target.contains(event.target));\n    },\n    containerRef: function containerRef(el) {\n      this.container = el;\n    },\n    onOverlayClick: function onOverlayClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.target\n      });\n    },\n    onOverlayKeydown: function onOverlayKeydown(event) {\n      if (event.code === 'Escape') {\n        ConfirmationEventBus.emit('close', this.closeListener);\n        DomHandler.focus(this.target);\n      }\n    },\n    getCXOptions: function getCXOptions(icon, iconProps) {\n      return {\n        contenxt: {\n          icon: icon,\n          iconClass: iconProps[\"class\"]\n        }\n      };\n    }\n  },\n  computed: {\n    message: function message() {\n      return this.confirmation ? this.confirmation.message : null;\n    },\n    acceptLabel: function acceptLabel() {\n      return this.confirmation ? this.confirmation.acceptLabel || this.$primevue.config.locale.accept : null;\n    },\n    rejectLabel: function rejectLabel() {\n      return this.confirmation ? this.confirmation.rejectLabel || this.$primevue.config.locale.reject : null;\n    },\n    acceptIcon: function acceptIcon() {\n      return this.confirmation ? this.confirmation.acceptIcon : null;\n    },\n    rejectIcon: function rejectIcon() {\n      return this.confirmation ? this.confirmation.rejectIcon : null;\n    }\n  },\n  components: {\n    CPButton: Button,\n    Portal: Portal\n  },\n  directives: {\n    focustrap: FocusTrap\n  }\n};\n\nvar _hoisted_1 = [\"aria-modal\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_CPButton = resolveComponent(\"CPButton\");\n  var _component_Portal = resolveComponent(\"Portal\");\n  var _directive_focustrap = resolveDirective(\"focustrap\");\n  return openBlock(), createBlock(_component_Portal, null, {\n    \"default\": withCtx(function () {\n      return [createVNode(Transition, mergeProps({\n        name: \"p-confirm-popup\",\n        onEnter: $options.onEnter,\n        onAfterEnter: $options.onAfterEnter,\n        onLeave: $options.onLeave,\n        onAfterLeave: $options.onAfterLeave\n      }, _ctx.ptm('transition')), {\n        \"default\": withCtx(function () {\n          return [$data.visible ? withDirectives((openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            ref: $options.containerRef,\n            role: \"alertdialog\",\n            \"class\": _ctx.cx('root'),\n            \"aria-modal\": $data.visible,\n            onClick: _cache[2] || (_cache[2] = function () {\n              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);\n            }),\n            onKeydown: _cache[3] || (_cache[3] = function () {\n              return $options.onOverlayKeydown && $options.onOverlayKeydown.apply($options, arguments);\n            })\n          }, _ctx.ptmi('root')), [_ctx.$slots.container ? renderSlot(_ctx.$slots, \"container\", {\n            key: 0,\n            message: $data.confirmation,\n            onAccept: $options.accept,\n            onReject: $options.reject,\n            acceptCallback: $options.accept,\n            rejectCallback: $options.reject\n          }) : (openBlock(), createElementBlock(Fragment, {\n            key: 1\n          }, [!_ctx.$slots.message ? (openBlock(), createElementBlock(\"div\", mergeProps({\n            key: 0,\n            \"class\": _ctx.cx('content')\n          }, _ctx.ptm('content')), [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n            return [_ctx.$slots.icon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.icon), {\n              key: 0,\n              \"class\": normalizeClass(_ctx.cx('icon'))\n            }, null, 8, [\"class\"])) : $data.confirmation.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n              key: 1,\n              \"class\": [$data.confirmation.icon, _ctx.cx('icon')]\n            }, _ctx.ptm('icon')), null, 16)) : createCommentVNode(\"\", true)];\n          }), createElementVNode(\"span\", mergeProps({\n            \"class\": _ctx.cx('message')\n          }, _ctx.ptm('message')), toDisplayString($data.confirmation.message), 17)], 16)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.message), {\n            key: 1,\n            message: $data.confirmation\n          }, null, 8, [\"message\"])), createElementVNode(\"div\", mergeProps({\n            \"class\": _ctx.cx('footer')\n          }, _ctx.ptm('footer')), [createVNode(_component_CPButton, {\n            label: $options.rejectLabel,\n            onClick: _cache[0] || (_cache[0] = function ($event) {\n              return $options.reject();\n            }),\n            onKeydown: $options.onRejectKeydown,\n            autofocus: $data.autoFocusReject,\n            \"class\": normalizeClass([_ctx.cx('rejectButton'), $data.confirmation.rejectClass]),\n            unstyled: _ctx.unstyled,\n            pt: _ctx.ptm('rejectButton')\n          }, createSlots({\n            _: 2\n          }, [$options.rejectIcon || _ctx.$slots.rejecticon ? {\n            name: \"icon\",\n            fn: withCtx(function (iconProps) {\n              return [renderSlot(_ctx.$slots, \"rejecticon\", {}, function () {\n                return [createElementVNode(\"span\", mergeProps({\n                  \"class\": [$options.rejectIcon, iconProps[\"class\"]]\n                }, _ctx.ptm('rejectButton')['icon'], {\n                  \"data-pc-section\": \"rejectbuttonicon\"\n                }), null, 16)];\n              })];\n            }),\n            key: \"0\"\n          } : undefined]), 1032, [\"label\", \"onKeydown\", \"autofocus\", \"class\", \"unstyled\", \"pt\"]), createVNode(_component_CPButton, {\n            label: $options.acceptLabel,\n            onClick: _cache[1] || (_cache[1] = function ($event) {\n              return $options.accept();\n            }),\n            onKeydown: $options.onAcceptKeydown,\n            autofocus: $data.autoFocusAccept,\n            \"class\": normalizeClass([_ctx.cx('acceptButton'), $data.confirmation.acceptClass]),\n            unstyled: _ctx.unstyled,\n            pt: _ctx.ptm('acceptButton')\n          }, createSlots({\n            _: 2\n          }, [$options.acceptIcon || _ctx.$slots.accepticon ? {\n            name: \"icon\",\n            fn: withCtx(function (iconProps) {\n              return [renderSlot(_ctx.$slots, \"accepticon\", {}, function () {\n                return [createElementVNode(\"span\", mergeProps({\n                  \"class\": [$options.acceptIcon, iconProps[\"class\"]]\n                }, _ctx.ptm('acceptButton')['icon'], {\n                  \"data-pc-section\": \"acceptbuttonicon\"\n                }), null, 16)];\n              })];\n            }),\n            key: \"0\"\n          } : undefined]), 1032, [\"label\", \"onKeydown\", \"autofocus\", \"class\", \"unstyled\", \"pt\"])], 16)], 64))], 16, _hoisted_1)), [[_directive_focustrap]]) : createCommentVNode(\"\", true)];\n        }),\n        _: 3\n      }, 16, [\"onEnter\", \"onAfterEnter\", \"onLeave\", \"onAfterLeave\"])];\n    }),\n    _: 3\n  });\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100540230,
      "end": 1756100540245,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100540245,
      "end": 1756100540245,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540245,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540245,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/confirmpopup/confirmpopup.esm.js\").then(r => r[\"default\"] || r.default || r))",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100540246,
      "end": 1756100540246,
      "order": "normal"
    }
  ]
}
