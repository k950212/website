{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/picker/utils.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isDef, clamp, extend, createNamespace } from \"../utils/index.mjs\";\nconst [name, bem, t] = createNamespace(\"picker\");\nconst getFirstEnabledOption = (options) => options.find((option) => !option.disabled) || options[0];\nfunction getColumnsType(columns, fields) {\n  const firstColumn = columns[0];\n  if (firstColumn) {\n    if (Array.isArray(firstColumn)) {\n      return \"multiple\";\n    }\n    if (fields.children in firstColumn) {\n      return \"cascade\";\n    }\n  }\n  return \"default\";\n}\nfunction findIndexOfEnabledOption(options, index) {\n  index = clamp(index, 0, options.length);\n  for (let i = index; i < options.length; i++) {\n    if (!options[i].disabled) return i;\n  }\n  for (let i = index - 1; i >= 0; i--) {\n    if (!options[i].disabled) return i;\n  }\n  return 0;\n}\nconst isOptionExist = (options, value, fields) => value !== void 0 && !!options.find((option) => option[fields.value] === value);\nfunction findOptionByValue(options, value, fields) {\n  const index = options.findIndex((option) => option[fields.value] === value);\n  const enabledIndex = findIndexOfEnabledOption(options, index);\n  return options[enabledIndex];\n}\nfunction formatCascadeColumns(columns, fields, selectedValues) {\n  const formatted = [];\n  let cursor = {\n    [fields.children]: columns\n  };\n  let columnIndex = 0;\n  while (cursor && cursor[fields.children]) {\n    const options = cursor[fields.children];\n    const value = selectedValues.value[columnIndex];\n    cursor = isDef(value) ? findOptionByValue(options, value, fields) : void 0;\n    if (!cursor && options.length) {\n      const firstValue = getFirstEnabledOption(options)[fields.value];\n      cursor = findOptionByValue(options, firstValue, fields);\n    }\n    columnIndex++;\n    formatted.push(options);\n  }\n  return formatted;\n}\nfunction getElementTranslateY(element) {\n  const { transform } = window.getComputedStyle(element);\n  const translateY = transform.slice(7, transform.length - 1).split(\", \")[5];\n  return Number(translateY);\n}\nfunction assignDefaultFields(fields) {\n  return extend(\n    {\n      text: \"text\",\n      value: \"value\",\n      children: \"children\"\n    },\n    fields\n  );\n}\nexport {\n  assignDefaultFields,\n  bem,\n  findIndexOfEnabledOption,\n  findOptionByValue,\n  formatCascadeColumns,\n  getColumnsType,\n  getElementTranslateY,\n  getFirstEnabledOption,\n  isOptionExist,\n  name,\n  t\n};\n",
      "start": 1756100544753,
      "end": 1756100544770,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100544770,
      "end": 1756100544770,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { isDef, clamp, extend, createNamespace } from \"../utils/index.mjs\";\nconst [name, bem, t] = createNamespace(\"picker\");\nconst getFirstEnabledOption = (options) => options.find((option) => !option.disabled) || options[0];\nfunction getColumnsType(columns, fields) {\n  const firstColumn = columns[0];\n  if (firstColumn) {\n    if (Array.isArray(firstColumn)) {\n      return \"multiple\";\n    }\n    if (fields.children in firstColumn) {\n      return \"cascade\";\n    }\n  }\n  return \"default\";\n}\nfunction findIndexOfEnabledOption(options, index) {\n  index = clamp(index, 0, options.length);\n  for (let i = index; i < options.length; i++) {\n    if (!options[i].disabled)\n      return i;\n  }\n  for (let i = index - 1; i >= 0; i--) {\n    if (!options[i].disabled)\n      return i;\n  }\n  return 0;\n}\nconst isOptionExist = (options, value, fields) => value !== void 0 && !!options.find((option) => option[fields.value] === value);\nfunction findOptionByValue(options, value, fields) {\n  const index = options.findIndex((option) => option[fields.value] === value);\n  const enabledIndex = findIndexOfEnabledOption(options, index);\n  return options[enabledIndex];\n}\nfunction formatCascadeColumns(columns, fields, selectedValues) {\n  const formatted = [];\n  let cursor = {\n    [fields.children]: columns\n  };\n  let columnIndex = 0;\n  while (cursor && cursor[fields.children]) {\n    const options = cursor[fields.children];\n    const value = selectedValues.value[columnIndex];\n    cursor = isDef(value) ? findOptionByValue(options, value, fields) : void 0;\n    if (!cursor && options.length) {\n      const firstValue = getFirstEnabledOption(options)[fields.value];\n      cursor = findOptionByValue(options, firstValue, fields);\n    }\n    columnIndex++;\n    formatted.push(options);\n  }\n  return formatted;\n}\nfunction getElementTranslateY(element) {\n  const { transform } = (void 0).getComputedStyle(element);\n  const translateY = transform.slice(7, transform.length - 1).split(\", \")[5];\n  return Number(translateY);\n}\nfunction assignDefaultFields(fields) {\n  return extend(\n    {\n      text: \"text\",\n      value: \"value\",\n      children: \"children\"\n    },\n    fields\n  );\n}\nexport {\n  assignDefaultFields,\n  bem,\n  findIndexOfEnabledOption,\n  findOptionByValue,\n  formatCascadeColumns,\n  getColumnsType,\n  getElementTranslateY,\n  getFirstEnabledOption,\n  isOptionExist,\n  name,\n  t\n};\n",
      "start": 1756100544770,
      "end": 1756100544961,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/picker/utils.mjs\"],\n  \"sourcesContent\": [\"import { isDef, clamp, extend, createNamespace } from \\\"../utils/index.mjs\\\";\\nconst [name, bem, t] = createNamespace(\\\"picker\\\");\\nconst getFirstEnabledOption = (options) => options.find((option) => !option.disabled) || options[0];\\nfunction getColumnsType(columns, fields) {\\n  const firstColumn = columns[0];\\n  if (firstColumn) {\\n    if (Array.isArray(firstColumn)) {\\n      return \\\"multiple\\\";\\n    }\\n    if (fields.children in firstColumn) {\\n      return \\\"cascade\\\";\\n    }\\n  }\\n  return \\\"default\\\";\\n}\\nfunction findIndexOfEnabledOption(options, index) {\\n  index = clamp(index, 0, options.length);\\n  for (let i = index; i < options.length; i++) {\\n    if (!options[i].disabled) return i;\\n  }\\n  for (let i = index - 1; i >= 0; i--) {\\n    if (!options[i].disabled) return i;\\n  }\\n  return 0;\\n}\\nconst isOptionExist = (options, value, fields) => value !== void 0 && !!options.find((option) => option[fields.value] === value);\\nfunction findOptionByValue(options, value, fields) {\\n  const index = options.findIndex((option) => option[fields.value] === value);\\n  const enabledIndex = findIndexOfEnabledOption(options, index);\\n  return options[enabledIndex];\\n}\\nfunction formatCascadeColumns(columns, fields, selectedValues) {\\n  const formatted = [];\\n  let cursor = {\\n    [fields.children]: columns\\n  };\\n  let columnIndex = 0;\\n  while (cursor && cursor[fields.children]) {\\n    const options = cursor[fields.children];\\n    const value = selectedValues.value[columnIndex];\\n    cursor = isDef(value) ? findOptionByValue(options, value, fields) : void 0;\\n    if (!cursor && options.length) {\\n      const firstValue = getFirstEnabledOption(options)[fields.value];\\n      cursor = findOptionByValue(options, firstValue, fields);\\n    }\\n    columnIndex++;\\n    formatted.push(options);\\n  }\\n  return formatted;\\n}\\nfunction getElementTranslateY(element) {\\n  const { transform } = window.getComputedStyle(element);\\n  const translateY = transform.slice(7, transform.length - 1).split(\\\", \\\")[5];\\n  return Number(translateY);\\n}\\nfunction assignDefaultFields(fields) {\\n  return extend(\\n    {\\n      text: \\\"text\\\",\\n      value: \\\"value\\\",\\n      children: \\\"children\\\"\\n    },\\n    fields\\n  );\\n}\\nexport {\\n  assignDefaultFields,\\n  bem,\\n  findIndexOfEnabledOption,\\n  findOptionByValue,\\n  formatCascadeColumns,\\n  getColumnsType,\\n  getElementTranslateY,\\n  getFirstEnabledOption,\\n  isOptionExist,\\n  name,\\n  t\\n};\\n\"],\n  \"mappings\": \"AAAA,SAAS,OAAO,OAAO,QAAQ,uBAAuB;AACtD,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,gBAAgB,QAAQ;AAC/C,MAAM,wBAAwB,CAAC,YAAY,QAAQ,KAAK,CAAC,WAAW,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC;AAClG,SAAS,eAAe,SAAS,QAAQ;AACvC,QAAM,cAAc,QAAQ,CAAC;AAC7B,MAAI,aAAa;AACf,QAAI,MAAM,QAAQ,WAAW,GAAG;AAC9B,aAAO;AAAA,IACT;AACA,QAAI,OAAO,YAAY,aAAa;AAClC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,yBAAyB,SAAS,OAAO;AAChD,UAAQ,MAAM,OAAO,GAAG,QAAQ,MAAM;AACtC,WAAS,IAAI,OAAO,IAAI,QAAQ,QAAQ,KAAK;AAC3C,QAAI,CAAC,QAAQ,CAAC,EAAE;AAAU,aAAO;AAAA,EACnC;AACA,WAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK;AACnC,QAAI,CAAC,QAAQ,CAAC,EAAE;AAAU,aAAO;AAAA,EACnC;AACA,SAAO;AACT;AACA,MAAM,gBAAgB,CAAC,SAAS,OAAO,WAAW,UAAU,UAAU,CAAC,CAAC,QAAQ,KAAK,CAAC,WAAW,OAAO,OAAO,KAAK,MAAM,KAAK;AAC/H,SAAS,kBAAkB,SAAS,OAAO,QAAQ;AACjD,QAAM,QAAQ,QAAQ,UAAU,CAAC,WAAW,OAAO,OAAO,KAAK,MAAM,KAAK;AAC1E,QAAM,eAAe,yBAAyB,SAAS,KAAK;AAC5D,SAAO,QAAQ,YAAY;AAC7B;AACA,SAAS,qBAAqB,SAAS,QAAQ,gBAAgB;AAC7D,QAAM,YAAY,CAAC;AACnB,MAAI,SAAS;AAAA,IACX,CAAC,OAAO,QAAQ,GAAG;AAAA,EACrB;AACA,MAAI,cAAc;AAClB,SAAO,UAAU,OAAO,OAAO,QAAQ,GAAG;AACxC,UAAM,UAAU,OAAO,OAAO,QAAQ;AACtC,UAAM,QAAQ,eAAe,MAAM,WAAW;AAC9C,aAAS,MAAM,KAAK,IAAI,kBAAkB,SAAS,OAAO,MAAM,IAAI;AACpE,QAAI,CAAC,UAAU,QAAQ,QAAQ;AAC7B,YAAM,aAAa,sBAAsB,OAAO,EAAE,OAAO,KAAK;AAC9D,eAAS,kBAAkB,SAAS,YAAY,MAAM;AAAA,IACxD;AACA;AACA,cAAU,KAAK,OAAO;AAAA,EACxB;AACA,SAAO;AACT;AACA,SAAS,qBAAqB,SAAS;AACrC,QAAM,EAAE,UAAU,IAAI,SAAO,iBAAiB,OAAO;AACrD,QAAM,aAAa,UAAU,MAAM,GAAG,UAAU,SAAS,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC;AACzE,SAAO,OAAO,UAAU;AAC1B;AACA,SAAS,oBAAoB,QAAQ;AACnC,SAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,EACF;AACF;AACA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544961,
      "end": 1756100544961,
      "order": "normal"
    }
  ]
}
