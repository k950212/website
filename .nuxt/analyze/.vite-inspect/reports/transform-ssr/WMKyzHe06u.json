{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/dock/dock.esm.js?nuxt_component=async&nuxt_component_name=Dock&nuxt_component_export=default",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import BaseComponent from 'primevue/basecomponent';\nimport DockStyle from 'primevue/dock/style';\nimport Ripple from 'primevue/ripple';\nimport Tooltip from 'primevue/tooltip';\nimport { UniqueComponentId, ObjectUtils, DomHandler } from 'primevue/utils';\nimport { mergeProps, resolveDirective, openBlock, createElementBlock, createElementVNode, Fragment, renderList, withDirectives, createBlock, resolveDynamicComponent, normalizeClass, resolveComponent, createVNode } from 'vue';\n\nvar script$2 = {\n  name: 'BaseDock',\n  \"extends\": BaseComponent,\n  props: {\n    position: {\n      type: String,\n      \"default\": 'bottom'\n    },\n    model: null,\n    \"class\": null,\n    style: null,\n    tooltipOptions: null,\n    menuId: {\n      type: String,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    breakpoint: {\n      type: String,\n      \"default\": '960px'\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: DockStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar script$1 = {\n  name: 'DockSub',\n  hostName: 'Dock',\n  \"extends\": BaseComponent,\n  emits: ['focus', 'blur'],\n  props: {\n    position: {\n      type: String,\n      \"default\": 'bottom'\n    },\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    templates: {\n      type: null,\n      \"default\": null\n    },\n    tooltipOptions: null,\n    menuId: {\n      type: String,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    }\n  },\n  data: function data() {\n    return {\n      id: this.menuId,\n      currentIndex: -3,\n      focused: false,\n      focusedOptionIndex: -1\n    };\n  },\n  watch: {\n    menuId: function menuId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    }\n  },\n  mounted: function mounted() {\n    this.id = this.id || UniqueComponentId();\n  },\n  methods: {\n    getItemId: function getItemId(index) {\n      return \"\".concat(this.id, \"_\").concat(index);\n    },\n    getItemProp: function getItemProp(processedItem, name) {\n      return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name]) : undefined;\n    },\n    getPTOptions: function getPTOptions(key, item, index) {\n      return this.ptm(key, {\n        context: {\n          index: index,\n          item: item,\n          active: this.isItemActive(this.getItemId(index))\n        }\n      });\n    },\n    isSameMenuItem: function isSameMenuItem(event) {\n      return event.currentTarget && (event.currentTarget.isSameNode(event.target) || event.currentTarget.isSameNode(event.target.closest('[data-pc-section=\"menuitem\"]')));\n    },\n    isItemActive: function isItemActive(id) {\n      return id === this.focusedOptionIndex;\n    },\n    onListMouseLeave: function onListMouseLeave() {\n      this.currentIndex = -3;\n    },\n    onItemMouseEnter: function onItemMouseEnter(index) {\n      this.currentIndex = index;\n    },\n    onItemClick: function onItemClick(event, processedItem) {\n      if (this.isSameMenuItem(event)) {\n        var command = this.getItemProp(processedItem, 'command');\n        command && command({\n          originalEvent: event,\n          item: processedItem.item\n        });\n      }\n    },\n    onListFocus: function onListFocus(event) {\n      this.focused = true;\n      this.changeFocusedOptionIndex(0);\n      this.$emit('focus', event);\n    },\n    onListBlur: function onListBlur(event) {\n      this.focused = false;\n      this.focusedOptionIndex = -1;\n      this.$emit('blur', event);\n    },\n    onListKeyDown: function onListKeyDown(event) {\n      switch (event.code) {\n        case 'ArrowDown':\n          {\n            if (this.position === 'left' || this.position === 'right') this.onArrowDownKey();\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowUp':\n          {\n            if (this.position === 'left' || this.position === 'right') this.onArrowUpKey();\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowRight':\n          {\n            if (this.position === 'top' || this.position === 'bottom') this.onArrowDownKey();\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowLeft':\n          {\n            if (this.position === 'top' || this.position === 'bottom') this.onArrowUpKey();\n            event.preventDefault();\n            break;\n          }\n        case 'Home':\n          {\n            this.onHomeKey();\n            event.preventDefault();\n            break;\n          }\n        case 'End':\n          {\n            this.onEndKey();\n            event.preventDefault();\n            break;\n          }\n        case 'Enter':\n        case 'NumpadEnter':\n        case 'Space':\n          {\n            this.onSpaceKey(event);\n            event.preventDefault();\n            break;\n          }\n      }\n    },\n    onArrowDownKey: function onArrowDownKey() {\n      var optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);\n      this.changeFocusedOptionIndex(optionIndex);\n    },\n    onArrowUpKey: function onArrowUpKey() {\n      var optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);\n      this.changeFocusedOptionIndex(optionIndex);\n    },\n    onHomeKey: function onHomeKey() {\n      this.changeFocusedOptionIndex(0);\n    },\n    onEndKey: function onEndKey() {\n      this.changeFocusedOptionIndex(DomHandler.find(this.$refs.list, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]').length - 1);\n    },\n    onSpaceKey: function onSpaceKey() {\n      var element = DomHandler.findSingle(this.$refs.list, \"li[id=\\\"\".concat(\"\".concat(this.focusedOptionIndex), \"\\\"]\"));\n      var anchorElement = element && DomHandler.findSingle(element, '[data-pc-section=\"action\"]');\n      anchorElement ? anchorElement.click() : element && element.click();\n    },\n    findNextOptionIndex: function findNextOptionIndex(index) {\n      var menuitems = DomHandler.find(this.$refs.list, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      var matchedOptionIndex = _toConsumableArray(menuitems).findIndex(function (link) {\n        return link.id === index;\n      });\n      return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n    },\n    findPrevOptionIndex: function findPrevOptionIndex(index) {\n      var menuitems = DomHandler.find(this.$refs.list, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      var matchedOptionIndex = _toConsumableArray(menuitems).findIndex(function (link) {\n        return link.id === index;\n      });\n      return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n    },\n    changeFocusedOptionIndex: function changeFocusedOptionIndex(index) {\n      var menuitems = DomHandler.find(this.$refs.list, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      var order = index >= menuitems.length ? menuitems.length - 1 : index < 0 ? 0 : index;\n      this.focusedOptionIndex = menuitems[order].getAttribute('id');\n    },\n    disabled: function disabled(item) {\n      return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n    },\n    getMenuItemProps: function getMenuItemProps(item, index) {\n      return {\n        action: mergeProps({\n          tabindex: -1,\n          'aria-hidden': true,\n          \"class\": this.cx('action')\n        }, this.getPTOptions('action', item, index)),\n        icon: mergeProps({\n          \"class\": [this.cx('icon'), item.icon]\n        }, this.getPTOptions('icon', item, index))\n      };\n    }\n  },\n  computed: {\n    focusedOptionId: function focusedOptionId() {\n      return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;\n    }\n  },\n  directives: {\n    ripple: Ripple,\n    tooltip: Tooltip\n  }\n};\n\nvar _hoisted_1 = [\"id\", \"aria-orientation\", \"aria-activedescendant\", \"tabindex\", \"aria-label\", \"aria-labelledby\"];\nvar _hoisted_2 = [\"id\", \"aria-label\", \"aria-disabled\", \"onClick\", \"onMouseenter\", \"data-p-focused\", \"data-p-disabled\"];\nvar _hoisted_3 = [\"href\", \"target\"];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  var _directive_tooltip = resolveDirective(\"tooltip\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('container')\n  }, _ctx.ptm('container')), [createElementVNode(\"ul\", mergeProps({\n    ref: \"list\",\n    id: $data.id,\n    \"class\": _ctx.cx('menu'),\n    role: \"menu\",\n    \"aria-orientation\": $props.position === 'bottom' || $props.position === 'top' ? 'horizontal' : 'vertical',\n    \"aria-activedescendant\": $data.focused ? $options.focusedOptionId : undefined,\n    tabindex: $props.tabindex,\n    \"aria-label\": $props.ariaLabel,\n    \"aria-labelledby\": $props.ariaLabelledby,\n    onFocus: _cache[0] || (_cache[0] = function () {\n      return $options.onListFocus && $options.onListFocus.apply($options, arguments);\n    }),\n    onBlur: _cache[1] || (_cache[1] = function () {\n      return $options.onListBlur && $options.onListBlur.apply($options, arguments);\n    }),\n    onKeydown: _cache[2] || (_cache[2] = function () {\n      return $options.onListKeyDown && $options.onListKeyDown.apply($options, arguments);\n    }),\n    onMouseleave: _cache[3] || (_cache[3] = function () {\n      return $options.onListMouseLeave && $options.onListMouseLeave.apply($options, arguments);\n    })\n  }, _ctx.ptm('menu')), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.model, function (processedItem, index) {\n    return openBlock(), createElementBlock(\"li\", mergeProps({\n      key: index,\n      id: $options.getItemId(index),\n      \"class\": _ctx.cx('menuitem', {\n        processedItem: processedItem,\n        index: index,\n        id: $options.getItemId(index)\n      }),\n      role: \"menuitem\",\n      \"aria-label\": processedItem.label,\n      \"aria-disabled\": $options.disabled(processedItem),\n      onClick: function onClick($event) {\n        return $options.onItemClick($event, processedItem);\n      },\n      onMouseenter: function onMouseenter($event) {\n        return $options.onItemMouseEnter(index);\n      }\n    }, $options.getPTOptions('menuitem', processedItem, index), {\n      \"data-p-focused\": $options.isItemActive($options.getItemId(index)),\n      \"data-p-disabled\": $options.disabled(processedItem) || false\n    }), [createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('content')\n    }, $options.getPTOptions('content', processedItem, index)), [!$props.templates['item'] ? withDirectives((openBlock(), createElementBlock(\"a\", mergeProps({\n      key: 0,\n      href: processedItem.url,\n      \"class\": _ctx.cx('action'),\n      target: processedItem.target,\n      tabindex: \"-1\",\n      \"aria-hidden\": \"true\"\n    }, $options.getPTOptions('action', processedItem, index)), [!$props.templates['icon'] ? withDirectives((openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 0,\n      \"class\": [_ctx.cx('icon'), processedItem.icon]\n    }, $options.getPTOptions('icon', processedItem, index)), null, 16)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates['icon']), {\n      key: 1,\n      item: processedItem,\n      \"class\": normalizeClass(_ctx.cx('icon'))\n    }, null, 8, [\"item\", \"class\"]))], 16, _hoisted_3)), [[_directive_tooltip, {\n      value: processedItem.label,\n      disabled: !$props.tooltipOptions\n    }, $props.tooltipOptions]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates['item']), {\n      key: 1,\n      item: processedItem,\n      index: index,\n      label: processedItem.label,\n      props: $options.getMenuItemProps(processedItem, index)\n    }, null, 8, [\"item\", \"index\", \"label\", \"props\"]))], 16)], 16, _hoisted_2);\n  }), 128))], 16, _hoisted_1)], 16);\n}\n\nscript$1.render = render$1;\n\nvar script = {\n  name: 'Dock',\n  \"extends\": script$2,\n  inheritAttrs: false,\n  matchMediaListener: null,\n  data: function data() {\n    return {\n      query: null,\n      queryMatches: false\n    };\n  },\n  mounted: function mounted() {\n    this.bindMatchMediaListener();\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.unbindMatchMediaListener();\n  },\n  methods: {\n    bindMatchMediaListener: function bindMatchMediaListener() {\n      var _this = this;\n      if (!this.matchMediaListener) {\n        var query = matchMedia(\"(max-width: \".concat(this.breakpoint, \")\"));\n        this.query = query;\n        this.queryMatches = query.matches;\n        this.matchMediaListener = function () {\n          _this.queryMatches = query.matches;\n          _this.mobileActive = false;\n        };\n        this.query.addEventListener('change', this.matchMediaListener);\n      }\n    },\n    unbindMatchMediaListener: function unbindMatchMediaListener() {\n      if (this.matchMediaListener) {\n        this.query.removeEventListener('change', this.matchMediaListener);\n        this.matchMediaListener = null;\n      }\n    }\n  },\n  computed: {\n    containerClass: function containerClass() {\n      return [this[\"class\"], this.cx('root')];\n    }\n  },\n  components: {\n    DockSub: script$1\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_DockSub = resolveComponent(\"DockSub\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": $options.containerClass,\n    style: _ctx.style\n  }, _ctx.ptmi('root')), [createVNode(_component_DockSub, {\n    model: _ctx.model,\n    templates: _ctx.$slots,\n    tooltipOptions: _ctx.tooltipOptions,\n    position: _ctx.position,\n    menuId: _ctx.menuId,\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    tabindex: _ctx.tabindex,\n    pt: _ctx.pt,\n    unstyled: _ctx.unstyled\n  }, null, 8, [\"model\", \"templates\", \"tooltipOptions\", \"position\", \"menuId\", \"aria-label\", \"aria-labelledby\", \"tabindex\", \"pt\", \"unstyled\"])], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100540240,
      "end": 1756100540256,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/dock/dock.esm.js\").then(r => r[\"default\"] || r.default || r))",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100540256,
      "end": 1756100540256,
      "order": "normal"
    }
  ]
}
