{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isElement.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n",
      "start": 1756100542604,
      "end": 1756100542614,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100542614,
      "end": 1756100542614,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import isObjectLike from \"./isObjectLike.js\";\nimport isPlainObject from \"./isPlainObject.js\";\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\nexport default isElement;\n",
      "start": 1756100542614,
      "end": 1756100544645,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/yunhao/Project/website/node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isElement.js\"],\n  \"sourcesContent\": [\"import isObjectLike from './isObjectLike.js';\\nimport isPlainObject from './isPlainObject.js';\\n\\n/**\\n * Checks if `value` is likely a DOM element.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\\n * @example\\n *\\n * _.isElement(document.body);\\n * // => true\\n *\\n * _.isElement('<body>');\\n * // => false\\n */\\nfunction isElement(value) {\\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\\n}\\n\\nexport default isElement;\\n\"],\n  \"mappings\": \"AAAA,OAAO,kBAAkB;AACzB,OAAO,mBAAmB;AAmB1B,SAAS,UAAU,OAAO;AACxB,SAAO,aAAa,KAAK,KAAK,MAAM,aAAa,KAAK,CAAC,cAAc,KAAK;AAC5E;AAEA,eAAe;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100544645,
      "end": 1756100544645,
      "order": "normal"
    }
  ]
}
