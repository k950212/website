{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/area/utils.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const AREA_EMPTY_CODE = \"000000\";\nconst INHERIT_SLOTS = [\n  \"title\",\n  \"cancel\",\n  \"confirm\",\n  \"toolbar\",\n  \"columns-top\",\n  \"columns-bottom\"\n];\nconst INHERIT_PROPS = [\n  \"title\",\n  \"loading\",\n  \"readonly\",\n  \"optionHeight\",\n  \"swipeDuration\",\n  \"visibleOptionNum\",\n  \"cancelButtonText\",\n  \"confirmButtonText\"\n];\nconst makeOption = (text = \"\", value = AREA_EMPTY_CODE, children = void 0) => ({\n  text,\n  value,\n  children\n});\nfunction formatDataForCascade({\n  areaList,\n  columnsNum,\n  columnsPlaceholder: placeholder\n}) {\n  const {\n    city_list: city = {},\n    county_list: county = {},\n    province_list: province = {}\n  } = areaList;\n  const showCity = +columnsNum > 1;\n  const showCounty = +columnsNum > 2;\n  const getProvinceChildren = () => {\n    if (showCity) {\n      return placeholder.length > 1 ? [\n        makeOption(\n          placeholder[1],\n          AREA_EMPTY_CODE,\n          showCounty ? [] : void 0\n        )\n      ] : [];\n    }\n  };\n  const provinceMap = /* @__PURE__ */ new Map();\n  Object.keys(province).forEach((code) => {\n    provinceMap.set(\n      code.slice(0, 2),\n      makeOption(province[code], code, getProvinceChildren())\n    );\n  });\n  const cityMap = /* @__PURE__ */ new Map();\n  if (showCity) {\n    const getCityChildren = () => {\n      if (showCounty) {\n        return placeholder.length > 2 ? [makeOption(placeholder[2])] : [];\n      }\n    };\n    Object.keys(city).forEach((code) => {\n      const option = makeOption(city[code], code, getCityChildren());\n      cityMap.set(code.slice(0, 4), option);\n      const province2 = provinceMap.get(code.slice(0, 2));\n      if (province2) {\n        province2.children.push(option);\n      }\n    });\n  }\n  if (showCounty) {\n    Object.keys(county).forEach((code) => {\n      const city2 = cityMap.get(code.slice(0, 4));\n      if (city2) {\n        city2.children.push(makeOption(county[code], code));\n      }\n    });\n  }\n  const options = Array.from(provinceMap.values());\n  if (placeholder.length) {\n    const county2 = showCounty ? [makeOption(placeholder[2])] : void 0;\n    const city2 = showCity ? [makeOption(placeholder[1], AREA_EMPTY_CODE, county2)] : void 0;\n    options.unshift(makeOption(placeholder[0], AREA_EMPTY_CODE, city2));\n  }\n  return options;\n}\nexport {\n  AREA_EMPTY_CODE,\n  INHERIT_PROPS,\n  INHERIT_SLOTS,\n  formatDataForCascade\n};\n",
      "start": 1756100534031,
      "end": 1756100534050,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100534050,
      "end": 1756100534050,
      "order": "normal"
    }
  ]
}
