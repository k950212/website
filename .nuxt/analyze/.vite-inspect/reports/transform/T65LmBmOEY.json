{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/badgedirective/badgedirective.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { UniqueComponentId, DomHandler } from 'primevue/utils';\nimport BadgeDirectiveStyle from 'primevue/badgedirective/style';\nimport BaseDirective from 'primevue/basedirective';\n\nvar BaseBadgeDirective = BaseDirective.extend({\n  style: BadgeDirectiveStyle\n});\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar BadgeDirective = BaseBadgeDirective.extend('badge', {\n  mounted: function mounted(el, binding) {\n    var id = UniqueComponentId() + '_badge';\n    var badge = DomHandler.createElement('span', {\n      id: id,\n      \"class\": !this.isUnstyled() && this.cx('root'),\n      'p-bind': this.ptm('root', {\n        context: _objectSpread(_objectSpread({}, binding.modifiers), {}, {\n          nogutter: String(binding.value).length === 1,\n          dot: binding.value == null\n        })\n      })\n    });\n    el.$_pbadgeId = badge.getAttribute('id');\n    for (var modifier in binding.modifiers) {\n      !this.isUnstyled() && DomHandler.addClass(badge, 'p-badge-' + modifier);\n    }\n    if (binding.value != null) {\n      if (_typeof(binding.value) === 'object') el.$_badgeValue = binding.value.value;else el.$_badgeValue = binding.value;\n      badge.appendChild(document.createTextNode(el.$_badgeValue));\n      if (String(el.$_badgeValue).length === 1 && !this.isUnstyled()) {\n        !this.isUnstyled() && DomHandler.addClass(badge, 'p-badge-no-gutter');\n      }\n    } else {\n      !this.isUnstyled() && DomHandler.addClass(badge, 'p-badge-dot');\n    }\n    el.setAttribute('data-pd-badge', true);\n    !this.isUnstyled() && DomHandler.addClass(el, 'p-overlay-badge');\n    el.setAttribute('data-p-overlay-badge', 'true');\n    el.appendChild(badge);\n    this.$el = badge;\n  },\n  updated: function updated(el, binding) {\n    !this.isUnstyled() && DomHandler.addClass(el, 'p-overlay-badge');\n    el.setAttribute('data-p-overlay-badge', 'true');\n    if (binding.oldValue !== binding.value) {\n      var badge = document.getElementById(el.$_pbadgeId);\n      if (_typeof(binding.value) === 'object') el.$_badgeValue = binding.value.value;else el.$_badgeValue = binding.value;\n      if (!this.isUnstyled()) {\n        if (el.$_badgeValue) {\n          if (DomHandler.hasClass(badge, 'p-badge-dot')) DomHandler.removeClass(badge, 'p-badge-dot');\n          if (el.$_badgeValue.length === 1) DomHandler.addClass(badge, 'p-badge-no-gutter');else DomHandler.removeClass(badge, 'p-badge-no-gutter');\n        } else if (!el.$_badgeValue && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n          DomHandler.addClass(badge, 'p-badge-dot');\n        }\n      }\n      badge.innerHTML = '';\n      badge.appendChild(document.createTextNode(el.$_badgeValue));\n    }\n  }\n});\n\nexport { BadgeDirective as default };\n",
      "start": 1756100531191,
      "end": 1756100531221,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100531221,
      "end": 1756100531221,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100531221,
      "end": 1756100531222,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100531222,
      "end": 1756100531222,
      "order": "normal"
    }
  ]
}
