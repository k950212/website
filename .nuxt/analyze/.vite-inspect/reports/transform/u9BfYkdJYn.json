{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/popover/Popover.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watch, nextTick, onMounted, watchEffect, onBeforeUnmount, defineComponent, createVNode as _createVNode, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\nimport { createPopper, offsetModifier } from \"@vant/popperjs\";\nimport { pick, extend, inBrowser, truthProp, numericProp, unknownProp, BORDER_RIGHT, BORDER_BOTTOM, makeArrayProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nimport { useClickAway } from \"@vant/use\";\nimport { useScopeId } from \"../composables/use-scope-id.mjs\";\nimport { useSyncPropRef } from \"../composables/use-sync-prop-ref.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Popup } from \"../popup/index.mjs\";\nconst [name, bem] = createNamespace(\"popover\");\nconst popupProps = [\"overlay\", \"duration\", \"teleport\", \"overlayStyle\", \"overlayClass\", \"closeOnClickOverlay\"];\nconst popoverProps = {\n  show: Boolean,\n  theme: makeStringProp(\"light\"),\n  overlay: Boolean,\n  actions: makeArrayProp(),\n  actionsDirection: makeStringProp(\"vertical\"),\n  trigger: makeStringProp(\"click\"),\n  duration: numericProp,\n  showArrow: truthProp,\n  placement: makeStringProp(\"bottom\"),\n  iconPrefix: String,\n  overlayClass: unknownProp,\n  overlayStyle: Object,\n  closeOnClickAction: truthProp,\n  closeOnClickOverlay: truthProp,\n  closeOnClickOutside: truthProp,\n  offset: {\n    type: Array,\n    default: () => [0, 8]\n  },\n  teleport: {\n    type: [String, Object],\n    default: \"body\"\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: popoverProps,\n  emits: [\"select\", \"touchstart\", \"update:show\"],\n  setup(props, {\n    emit,\n    slots,\n    attrs\n  }) {\n    let popper;\n    const popupRef = ref();\n    const wrapperRef = ref();\n    const popoverRef = ref();\n    const show = useSyncPropRef(() => props.show, (value) => emit(\"update:show\", value));\n    const getPopoverOptions = () => ({\n      placement: props.placement,\n      modifiers: [{\n        name: \"computeStyles\",\n        options: {\n          adaptive: false,\n          gpuAcceleration: false\n        }\n      }, extend({}, offsetModifier, {\n        options: {\n          offset: props.offset\n        }\n      })]\n    });\n    const createPopperInstance = () => {\n      if (wrapperRef.value && popoverRef.value) {\n        return createPopper(wrapperRef.value, popoverRef.value.popupRef.value, getPopoverOptions());\n      }\n      return null;\n    };\n    const updateLocation = () => {\n      nextTick(() => {\n        if (!show.value) {\n          return;\n        }\n        if (!popper) {\n          popper = createPopperInstance();\n          if (inBrowser) {\n            window.addEventListener(\"animationend\", updateLocation);\n            window.addEventListener(\"transitionend\", updateLocation);\n          }\n        } else {\n          popper.setOptions(getPopoverOptions());\n        }\n      });\n    };\n    const updateShow = (value) => {\n      show.value = value;\n    };\n    const onClickWrapper = () => {\n      if (props.trigger === \"click\") {\n        show.value = !show.value;\n      }\n    };\n    const onClickAction = (action, index) => {\n      if (action.disabled) {\n        return;\n      }\n      emit(\"select\", action, index);\n      if (props.closeOnClickAction) {\n        show.value = false;\n      }\n    };\n    const onClickAway = () => {\n      if (show.value && props.closeOnClickOutside && (!props.overlay || props.closeOnClickOverlay)) {\n        show.value = false;\n      }\n    };\n    const renderActionContent = (action, index) => {\n      if (slots.action) {\n        return slots.action({\n          action,\n          index\n        });\n      }\n      return [action.icon && _createVNode(Icon, {\n        \"name\": action.icon,\n        \"classPrefix\": props.iconPrefix,\n        \"class\": bem(\"action-icon\")\n      }, null), _createVNode(\"div\", {\n        \"class\": [bem(\"action-text\"), {\n          [BORDER_BOTTOM]: props.actionsDirection === \"vertical\"\n        }]\n      }, [action.text])];\n    };\n    const renderAction = (action, index) => {\n      const {\n        icon,\n        color,\n        disabled,\n        className\n      } = action;\n      return _createVNode(\"div\", {\n        \"role\": \"menuitem\",\n        \"class\": [bem(\"action\", {\n          disabled,\n          \"with-icon\": icon\n        }), {\n          [BORDER_RIGHT]: props.actionsDirection === \"horizontal\"\n        }, className],\n        \"style\": {\n          color\n        },\n        \"tabindex\": disabled ? void 0 : 0,\n        \"aria-disabled\": disabled || void 0,\n        \"onClick\": () => onClickAction(action, index)\n      }, [renderActionContent(action, index)]);\n    };\n    onMounted(() => {\n      updateLocation();\n      watchEffect(() => {\n        var _a;\n        popupRef.value = (_a = popoverRef.value) == null ? void 0 : _a.popupRef.value;\n      });\n    });\n    onBeforeUnmount(() => {\n      if (popper) {\n        if (inBrowser) {\n          window.removeEventListener(\"animationend\", updateLocation);\n          window.removeEventListener(\"transitionend\", updateLocation);\n        }\n        popper.destroy();\n        popper = null;\n      }\n    });\n    watch(() => [show.value, props.offset, props.placement], updateLocation);\n    useClickAway([wrapperRef, popupRef], onClickAway, {\n      eventName: \"touchstart\"\n    });\n    return () => {\n      var _a;\n      return _createVNode(_Fragment, null, [_createVNode(\"span\", {\n        \"ref\": wrapperRef,\n        \"class\": bem(\"wrapper\"),\n        \"onClick\": onClickWrapper\n      }, [(_a = slots.reference) == null ? void 0 : _a.call(slots)]), _createVNode(Popup, _mergeProps({\n        \"ref\": popoverRef,\n        \"show\": show.value,\n        \"class\": bem([props.theme]),\n        \"position\": \"\",\n        \"transition\": \"van-popover-zoom\",\n        \"lockScroll\": false,\n        \"onUpdate:show\": updateShow\n      }, attrs, useScopeId(), pick(props, popupProps)), {\n        default: () => [props.showArrow && _createVNode(\"div\", {\n          \"class\": bem(\"arrow\")\n        }, null), _createVNode(\"div\", {\n          \"role\": \"menu\",\n          \"class\": bem(\"content\", props.actionsDirection)\n        }, [slots.default ? slots.default() : props.actions.map(renderAction)])]\n      })]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  popoverProps\n};\n",
      "start": 1756100533434,
      "end": 1756100533447,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100533447,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100533448,
      "end": 1756100533448,
      "order": "normal"
    }
  ]
}
