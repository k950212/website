{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/splitbutton/splitbutton.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import Button from 'primevue/button';\nimport ChevronDownIcon from 'primevue/icons/chevrondown';\nimport TieredMenu from 'primevue/tieredmenu';\nimport { UniqueComponentId } from 'primevue/utils';\nimport BaseComponent from 'primevue/basecomponent';\nimport SplitButtonStyle from 'primevue/splitbutton/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, createVNode, createSlots, withCtx, renderSlot, normalizeClass, createElementVNode, createBlock, resolveDynamicComponent } from 'vue';\n\nvar script$1 = {\n  name: 'BaseSplitButton',\n  \"extends\": BaseComponent,\n  props: {\n    label: {\n      type: String,\n      \"default\": null\n    },\n    icon: {\n      type: String,\n      \"default\": null\n    },\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    autoZIndex: {\n      type: Boolean,\n      \"default\": true\n    },\n    baseZIndex: {\n      type: Number,\n      \"default\": 0\n    },\n    appendTo: {\n      type: [String, Object],\n      \"default\": 'body'\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    \"class\": {\n      type: null,\n      \"default\": null\n    },\n    style: {\n      type: null,\n      \"default\": null\n    },\n    buttonProps: {\n      type: null,\n      \"default\": null\n    },\n    menuButtonProps: {\n      type: null,\n      \"default\": null\n    },\n    menuButtonIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    severity: {\n      type: String,\n      \"default\": null\n    },\n    raised: {\n      type: Boolean,\n      \"default\": false\n    },\n    rounded: {\n      type: Boolean,\n      \"default\": false\n    },\n    text: {\n      type: Boolean,\n      \"default\": false\n    },\n    outlined: {\n      type: Boolean,\n      \"default\": false\n    },\n    size: {\n      type: String,\n      \"default\": null\n    },\n    plain: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: SplitButtonStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'SplitButton',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['click'],\n  data: function data() {\n    return {\n      id: this.$attrs.id,\n      isExpanded: false\n    };\n  },\n  watch: {\n    '$attrs.id': function $attrsId(newValue) {\n      this.id = newValue || UniqueComponentId();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.id = this.id || UniqueComponentId();\n    this.$watch('$refs.menu.visible', function (newValue) {\n      _this.isExpanded = newValue;\n    });\n  },\n  methods: {\n    onDropdownButtonClick: function onDropdownButtonClick(event) {\n      if (event) {\n        event.preventDefault();\n      }\n      this.$refs.menu.toggle({\n        currentTarget: this.$el,\n        relatedTarget: this.$refs.button.$el\n      });\n      this.isExpanded = this.$refs.menu.visible;\n    },\n    onDropdownKeydown: function onDropdownKeydown(event) {\n      if (event.code === 'ArrowDown' || event.code === 'ArrowUp') {\n        this.onDropdownButtonClick();\n        event.preventDefault();\n      }\n    },\n    onDefaultButtonClick: function onDefaultButtonClick(event) {\n      if (this.isExpanded) {\n        this.$refs.menu.hide(event);\n      }\n      this.$emit('click', event);\n    }\n  },\n  computed: {\n    containerClass: function containerClass() {\n      return [this.cx('root'), this[\"class\"]];\n    }\n  },\n  components: {\n    PVSButton: Button,\n    PVSMenu: TieredMenu,\n    ChevronDownIcon: ChevronDownIcon\n  }\n};\n\nvar _hoisted_1 = [\"data-p-severity\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_PVSButton = resolveComponent(\"PVSButton\");\n  var _component_PVSMenu = resolveComponent(\"PVSMenu\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": $options.containerClass,\n    style: _ctx.style\n  }, _ctx.ptmi('root'), {\n    \"data-p-severity\": _ctx.severity\n  }), [createVNode(_component_PVSButton, mergeProps({\n    type: \"button\",\n    \"class\": _ctx.cx('button'),\n    label: _ctx.label,\n    icon: _ctx.icon,\n    disabled: _ctx.disabled,\n    severity: _ctx.severity,\n    text: _ctx.text,\n    outlined: _ctx.outlined,\n    size: _ctx.size,\n    \"aria-label\": _ctx.label,\n    onClick: $options.onDefaultButtonClick\n  }, _ctx.buttonProps, {\n    pt: _ctx.ptm('button'),\n    unstyled: _ctx.unstyled\n  }), createSlots({\n    \"default\": withCtx(function () {\n      return [renderSlot(_ctx.$slots, \"default\")];\n    }),\n    _: 2\n  }, [_ctx.$slots.icon ? {\n    name: \"icon\",\n    fn: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"icon\", {\n        \"class\": normalizeClass(slotProps[\"class\"])\n      }, function () {\n        return [createElementVNode(\"span\", mergeProps({\n          \"class\": [_ctx.icon, slotProps[\"class\"]]\n        }, _ctx.ptm('button')['icon'], {\n          \"data-pc-section\": \"buttonicon\"\n        }), null, 16)];\n      })];\n    }),\n    key: \"0\"\n  } : undefined]), 1040, [\"class\", \"label\", \"icon\", \"disabled\", \"severity\", \"text\", \"outlined\", \"size\", \"aria-label\", \"onClick\", \"pt\", \"unstyled\"]), createVNode(_component_PVSButton, mergeProps({\n    ref: \"button\",\n    type: \"button\",\n    \"class\": _ctx.cx('menuButton'),\n    disabled: _ctx.disabled,\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": $data.isExpanded,\n    \"aria-controls\": $data.id + '_overlay',\n    onClick: $options.onDropdownButtonClick,\n    onKeydown: $options.onDropdownKeydown,\n    severity: _ctx.severity,\n    text: _ctx.text,\n    outlined: _ctx.outlined,\n    size: _ctx.size\n  }, _ctx.menuButtonProps, {\n    pt: _ctx.ptm('menuButton'),\n    unstyled: _ctx.unstyled\n  }), {\n    icon: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"menubuttonicon\", {\n        \"class\": normalizeClass(slotProps[\"class\"])\n      }, function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.menuButtonIcon ? 'span' : 'ChevronDownIcon'), mergeProps({\n          \"class\": [_ctx.menuButtonIcon, slotProps[\"class\"]]\n        }, _ctx.ptm('menuButton')['icon'], {\n          \"data-pc-section\": \"menubuttonicon\"\n        }), null, 16, [\"class\"]))];\n      })];\n    }),\n    _: 3\n  }, 16, [\"class\", \"disabled\", \"aria-expanded\", \"aria-controls\", \"onClick\", \"onKeydown\", \"severity\", \"text\", \"outlined\", \"size\", \"pt\", \"unstyled\"]), createVNode(_component_PVSMenu, {\n    ref: \"menu\",\n    id: $data.id + '_overlay',\n    model: _ctx.model,\n    popup: true,\n    autoZIndex: _ctx.autoZIndex,\n    baseZIndex: _ctx.baseZIndex,\n    appendTo: _ctx.appendTo,\n    unstyled: _ctx.unstyled,\n    pt: _ctx.ptm('menu')\n  }, createSlots({\n    _: 2\n  }, [_ctx.$slots.menuitemicon ? {\n    name: \"itemicon\",\n    fn: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"menuitemicon\", {\n        item: slotProps.item,\n        \"class\": normalizeClass(slotProps[\"class\"])\n      })];\n    }),\n    key: \"0\"\n  } : undefined, _ctx.$slots.item ? {\n    name: \"item\",\n    fn: withCtx(function (slotProps) {\n      return [renderSlot(_ctx.$slots, \"item\", {\n        item: slotProps.item,\n        hasSubmenu: slotProps.hasSubmenu,\n        label: slotProps.label,\n        props: slotProps.props\n      })];\n    }),\n    key: \"1\"\n  } : undefined]), 1032, [\"id\", \"model\", \"autoZIndex\", \"baseZIndex\", \"appendTo\", \"unstyled\", \"pt\"])], 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100531594,
      "end": 1756100531658,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100531658,
      "end": 1756100531658,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100531659,
      "end": 1756100531659,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100531659,
      "end": 1756100531659,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100531659,
      "end": 1756100531659,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100531659,
      "end": 1756100531659,
      "order": "normal"
    }
  ]
}
