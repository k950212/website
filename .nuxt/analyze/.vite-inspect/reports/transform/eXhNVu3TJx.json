{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/swipe-item/SwipeItem.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, nextTick, reactive, onMounted, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { createNamespace } from \"../utils/index.mjs\";\nimport { SWIPE_KEY } from \"../swipe/Swipe.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"swipe-item\");\nvar stdin_default = defineComponent({\n  name,\n  setup(props, {\n    slots\n  }) {\n    let rendered;\n    const state = reactive({\n      offset: 0,\n      inited: false,\n      mounted: false\n    });\n    const {\n      parent,\n      index\n    } = useParent(SWIPE_KEY);\n    if (!parent) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(\"[Vant] <SwipeItem> must be a child component of <Swipe>.\");\n      }\n      return;\n    }\n    const style = computed(() => {\n      const style2 = {};\n      const {\n        vertical\n      } = parent.props;\n      if (parent.size.value) {\n        style2[vertical ? \"height\" : \"width\"] = `${parent.size.value}px`;\n      }\n      if (state.offset) {\n        style2.transform = `translate${vertical ? \"Y\" : \"X\"}(${state.offset}px)`;\n      }\n      return style2;\n    });\n    const shouldRender = computed(() => {\n      const {\n        loop,\n        lazyRender\n      } = parent.props;\n      if (!lazyRender || rendered) {\n        return true;\n      }\n      if (!state.mounted) {\n        return false;\n      }\n      const active = parent.activeIndicator.value;\n      const maxActive = parent.count.value - 1;\n      const prevActive = active === 0 && loop ? maxActive : active - 1;\n      const nextActive = active === maxActive && loop ? 0 : active + 1;\n      rendered = index.value === active || index.value === prevActive || index.value === nextActive;\n      return rendered;\n    });\n    const setOffset = (offset) => {\n      state.offset = offset;\n    };\n    onMounted(() => {\n      nextTick(() => {\n        state.mounted = true;\n      });\n    });\n    useExpose({\n      setOffset\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"style\": style.value\n      }, [shouldRender.value ? (_a = slots.default) == null ? void 0 : _a.call(slots) : null]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n",
      "start": 1756100533461,
      "end": 1756100533482,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100533482,
      "end": 1756100533482,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { computed, nextTick, reactive, onMounted, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { createNamespace } from \"../utils/index.mjs\";\nimport { SWIPE_KEY } from \"../swipe/Swipe.mjs\";\nimport { useParent } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"swipe-item\");\nvar stdin_default = defineComponent({\n  name,\n  setup(props, {\n    slots\n  }) {\n    let rendered;\n    const state = reactive({\n      offset: 0,\n      inited: false,\n      mounted: false\n    });\n    const {\n      parent,\n      index\n    } = useParent(SWIPE_KEY);\n    if (!parent) {\n      if (false) {\n        console.error(\"[Vant] <SwipeItem> must be a child component of <Swipe>.\");\n      }\n      return;\n    }\n    const style = computed(() => {\n      const style2 = {};\n      const {\n        vertical\n      } = parent.props;\n      if (parent.size.value) {\n        style2[vertical ? \"height\" : \"width\"] = `${parent.size.value}px`;\n      }\n      if (state.offset) {\n        style2.transform = `translate${vertical ? \"Y\" : \"X\"}(${state.offset}px)`;\n      }\n      return style2;\n    });\n    const shouldRender = computed(() => {\n      const {\n        loop,\n        lazyRender\n      } = parent.props;\n      if (!lazyRender || rendered) {\n        return true;\n      }\n      if (!state.mounted) {\n        return false;\n      }\n      const active = parent.activeIndicator.value;\n      const maxActive = parent.count.value - 1;\n      const prevActive = active === 0 && loop ? maxActive : active - 1;\n      const nextActive = active === maxActive && loop ? 0 : active + 1;\n      rendered = index.value === active || index.value === prevActive || index.value === nextActive;\n      return rendered;\n    });\n    const setOffset = (offset) => {\n      state.offset = offset;\n    };\n    onMounted(() => {\n      nextTick(() => {\n        state.mounted = true;\n      });\n    });\n    useExpose({\n      setOffset\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem(),\n        \"style\": style.value\n      }, [shouldRender.value ? (_a = slots.default) == null ? void 0 : _a.call(slots) : null]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n",
      "start": 1756100533482,
      "end": 1756100533911,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100533911,
      "end": 1756100533911,
      "order": "normal"
    }
  ]
}
