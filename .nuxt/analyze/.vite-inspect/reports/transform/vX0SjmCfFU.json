{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/row/Row.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { truthProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nconst [name, bem] = createNamespace(\"row\");\nconst ROW_KEY = Symbol(name);\nconst rowProps = {\n  tag: makeStringProp(\"div\"),\n  wrap: truthProp,\n  align: String,\n  gutter: {\n    type: [String, Number, Array],\n    default: 0\n  },\n  justify: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: rowProps,\n  setup(props, {\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(ROW_KEY);\n    const groups = computed(() => {\n      const groups2 = [[]];\n      let totalSpan = 0;\n      children.forEach((child, index) => {\n        totalSpan += Number(child.span);\n        if (totalSpan > 24) {\n          groups2.push([index]);\n          totalSpan -= 24;\n        } else {\n          groups2[groups2.length - 1].push(index);\n        }\n      });\n      return groups2;\n    });\n    const spaces = computed(() => {\n      let gutter = 0;\n      if (Array.isArray(props.gutter)) {\n        gutter = Number(props.gutter[0]) || 0;\n      } else {\n        gutter = Number(props.gutter);\n      }\n      const spaces2 = [];\n      if (!gutter) {\n        return spaces2;\n      }\n      groups.value.forEach((group) => {\n        const averagePadding = gutter * (group.length - 1) / group.length;\n        group.forEach((item, index) => {\n          if (index === 0) {\n            spaces2.push({\n              right: averagePadding\n            });\n          } else {\n            const left = gutter - spaces2[item - 1].right;\n            const right = averagePadding - left;\n            spaces2.push({\n              left,\n              right\n            });\n          }\n        });\n      });\n      return spaces2;\n    });\n    const verticalSpaces = computed(() => {\n      const {\n        gutter\n      } = props;\n      const spaces2 = [];\n      if (Array.isArray(gutter) && gutter.length > 1) {\n        const bottom = Number(gutter[1]) || 0;\n        if (bottom <= 0) {\n          return spaces2;\n        }\n        groups.value.forEach((group, index) => {\n          if (index === groups.value.length - 1) return;\n          group.forEach(() => {\n            spaces2.push({\n              bottom\n            });\n          });\n        });\n      }\n      return spaces2;\n    });\n    linkChildren({\n      spaces,\n      verticalSpaces\n    });\n    return () => {\n      const {\n        tag,\n        wrap,\n        align,\n        justify\n      } = props;\n      return _createVNode(tag, {\n        \"class\": bem({\n          [`align-${align}`]: align,\n          [`justify-${justify}`]: justify,\n          nowrap: !wrap\n        })\n      }, {\n        default: () => {\n          var _a;\n          return [(_a = slots.default) == null ? void 0 : _a.call(slots)];\n        }\n      });\n    };\n  }\n});\nexport {\n  ROW_KEY,\n  stdin_default as default,\n  rowProps\n};\n",
      "start": 1756100533438,
      "end": 1756100533454,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100533454,
      "end": 1756100533454,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100533455,
      "end": 1756100533455,
      "order": "normal"
    }
  ]
}
