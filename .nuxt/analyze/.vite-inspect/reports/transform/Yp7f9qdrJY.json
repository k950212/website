{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/button/button.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import Badge from 'primevue/badge';\nimport SpinnerIcon from 'primevue/icons/spinner';\nimport Ripple from 'primevue/ripple';\nimport BaseComponent from 'primevue/basecomponent';\nimport ButtonStyle from 'primevue/button/style';\nimport { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, mergeProps, renderSlot, normalizeClass, createBlock, createCommentVNode, createElementVNode, toDisplayString } from 'vue';\n\nvar script$1 = {\n  name: 'BaseButton',\n  \"extends\": BaseComponent,\n  props: {\n    label: {\n      type: String,\n      \"default\": null\n    },\n    icon: {\n      type: String,\n      \"default\": null\n    },\n    iconPos: {\n      type: String,\n      \"default\": 'left'\n    },\n    iconClass: {\n      type: String,\n      \"default\": null\n    },\n    badge: {\n      type: String,\n      \"default\": null\n    },\n    badgeClass: {\n      type: String,\n      \"default\": null\n    },\n    badgeSeverity: {\n      type: String,\n      \"default\": null\n    },\n    loading: {\n      type: Boolean,\n      \"default\": false\n    },\n    loadingIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    link: {\n      type: Boolean,\n      \"default\": false\n    },\n    severity: {\n      type: String,\n      \"default\": null\n    },\n    raised: {\n      type: Boolean,\n      \"default\": false\n    },\n    rounded: {\n      type: Boolean,\n      \"default\": false\n    },\n    text: {\n      type: Boolean,\n      \"default\": false\n    },\n    outlined: {\n      type: Boolean,\n      \"default\": false\n    },\n    size: {\n      type: String,\n      \"default\": null\n    },\n    plain: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: ButtonStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Button',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  methods: {\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          disabled: this.disabled\n        }\n      });\n    }\n  },\n  computed: {\n    disabled: function disabled() {\n      return this.$attrs.disabled || this.$attrs.disabled === '' || this.loading;\n    },\n    defaultAriaLabel: function defaultAriaLabel() {\n      return this.label ? this.label + (this.badge ? ' ' + this.badge : '') : this.$attrs.ariaLabel;\n    },\n    hasIcon: function hasIcon() {\n      return this.icon || this.$slots.icon;\n    }\n  },\n  components: {\n    SpinnerIcon: SpinnerIcon,\n    Badge: Badge\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"aria-label\", \"disabled\", \"data-p-severity\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SpinnerIcon = resolveComponent(\"SpinnerIcon\");\n  var _component_Badge = resolveComponent(\"Badge\");\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return withDirectives((openBlock(), createElementBlock(\"button\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    type: \"button\",\n    \"aria-label\": $options.defaultAriaLabel,\n    disabled: $options.disabled\n  }, $options.getPTOptions('root'), {\n    \"data-p-severity\": _ctx.severity\n  }), [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [_ctx.loading ? renderSlot(_ctx.$slots, \"loadingicon\", {\n      key: 0,\n      \"class\": normalizeClass([_ctx.cx('loadingIcon'), _ctx.cx('icon')])\n    }, function () {\n      return [_ctx.loadingIcon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n        key: 0,\n        \"class\": [_ctx.cx('loadingIcon'), _ctx.cx('icon'), _ctx.loadingIcon]\n      }, _ctx.ptm('loadingIcon')), null, 16)) : (openBlock(), createBlock(_component_SpinnerIcon, mergeProps({\n        key: 1,\n        \"class\": [_ctx.cx('loadingIcon'), _ctx.cx('icon')],\n        spin: \"\"\n      }, _ctx.ptm('loadingIcon')), null, 16, [\"class\"]))];\n    }) : renderSlot(_ctx.$slots, \"icon\", {\n      key: 1,\n      \"class\": normalizeClass([_ctx.cx('icon')])\n    }, function () {\n      return [_ctx.icon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n        key: 0,\n        \"class\": [_ctx.cx('icon'), _ctx.icon, _ctx.iconClass]\n      }, _ctx.ptm('icon')), null, 16)) : createCommentVNode(\"\", true)];\n    }), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('label')\n    }, _ctx.ptm('label')), toDisplayString(_ctx.label || 'Â '), 17), _ctx.badge ? (openBlock(), createBlock(_component_Badge, mergeProps({\n      key: 2,\n      value: _ctx.badge,\n      \"class\": _ctx.badgeClass,\n      severity: _ctx.badgeSeverity,\n      unstyled: _ctx.unstyled\n    }, _ctx.ptm('badge')), null, 16, [\"value\", \"class\", \"severity\", \"unstyled\"])) : createCommentVNode(\"\", true)];\n  })], 16, _hoisted_1)), [[_directive_ripple]]);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100531587,
      "end": 1756100531647,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100531647,
      "end": 1756100531647,
      "order": "normal"
    }
  ]
}
