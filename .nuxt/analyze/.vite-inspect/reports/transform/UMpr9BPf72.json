{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/utils/utils.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _toConsumableArray$3(arr) { return _arrayWithoutHoles$3(arr) || _iterableToArray$3(arr) || _unsupportedIterableToArray$3(arr) || _nonIterableSpread$3(); }\nfunction _nonIterableSpread$3() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray$3(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles$3(arr) { if (Array.isArray(arr)) return _arrayLikeToArray$3(arr); }\nfunction _typeof$3(o) { \"@babel/helpers - typeof\"; return _typeof$3 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof$3(o); }\nfunction _slicedToArray$1(arr, i) { return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$3(arr, i) || _nonIterableRest$1(); }\nfunction _nonIterableRest$1() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray$3(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }\nfunction _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit$1(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles$1(arr) { if (Array.isArray(arr)) return arr; }\nvar DomHandler = {\n  innerWidth: function innerWidth(el) {\n    if (el) {\n      var width = el.offsetWidth;\n      var style = getComputedStyle(el);\n      width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n      return width;\n    }\n    return 0;\n  },\n  width: function width(el) {\n    if (el) {\n      var width = el.offsetWidth;\n      var style = getComputedStyle(el);\n      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n      return width;\n    }\n    return 0;\n  },\n  getWindowScrollTop: function getWindowScrollTop() {\n    var doc = document.documentElement;\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  },\n  getWindowScrollLeft: function getWindowScrollLeft() {\n    var doc = document.documentElement;\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  },\n  getOuterWidth: function getOuterWidth(el, margin) {\n    if (el) {\n      var width = el.offsetWidth;\n      if (margin) {\n        var style = getComputedStyle(el);\n        width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n      }\n      return width;\n    }\n    return 0;\n  },\n  getOuterHeight: function getOuterHeight(el, margin) {\n    if (el) {\n      var height = el.offsetHeight;\n      if (margin) {\n        var style = getComputedStyle(el);\n        height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n      }\n      return height;\n    }\n    return 0;\n  },\n  getClientHeight: function getClientHeight(el, margin) {\n    if (el) {\n      var height = el.clientHeight;\n      if (margin) {\n        var style = getComputedStyle(el);\n        height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n      }\n      return height;\n    }\n    return 0;\n  },\n  getViewport: function getViewport() {\n    var win = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  },\n  getOffset: function getOffset(el) {\n    if (el) {\n      var rect = el.getBoundingClientRect();\n      return {\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n      };\n    }\n    return {\n      top: 'auto',\n      left: 'auto'\n    };\n  },\n  index: function index(element) {\n    if (element) {\n      var _this$getParentNode;\n      var children = (_this$getParentNode = this.getParentNode(element)) === null || _this$getParentNode === void 0 ? void 0 : _this$getParentNode.childNodes;\n      var num = 0;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i] === element) return num;\n        if (children[i].nodeType === 1) num++;\n      }\n    }\n    return -1;\n  },\n  addMultipleClasses: function addMultipleClasses(element, classNames) {\n    var _this = this;\n    if (element && classNames) {\n      [classNames].flat().filter(Boolean).forEach(function (cNames) {\n        return cNames.split(' ').forEach(function (className) {\n          return _this.addClass(element, className);\n        });\n      });\n    }\n  },\n  removeMultipleClasses: function removeMultipleClasses(element, classNames) {\n    var _this2 = this;\n    if (element && classNames) {\n      [classNames].flat().filter(Boolean).forEach(function (cNames) {\n        return cNames.split(' ').forEach(function (className) {\n          return _this2.removeClass(element, className);\n        });\n      });\n    }\n  },\n  addClass: function addClass(element, className) {\n    if (element && className && !this.hasClass(element, className)) {\n      if (element.classList) element.classList.add(className);else element.className += ' ' + className;\n    }\n  },\n  removeClass: function removeClass(element, className) {\n    if (element && className) {\n      if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  },\n  hasClass: function hasClass(element, className) {\n    if (element) {\n      if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n    return false;\n  },\n  addStyles: function addStyles(element) {\n    var styles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (element) {\n      Object.entries(styles).forEach(function (_ref) {\n        var _ref2 = _slicedToArray$1(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n        return element.style[key] = value;\n      });\n    }\n  },\n  find: function find(element, selector) {\n    return this.isElement(element) ? element.querySelectorAll(selector) : [];\n  },\n  findSingle: function findSingle(element, selector) {\n    return this.isElement(element) ? element.querySelector(selector) : null;\n  },\n  createElement: function createElement(type) {\n    var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (type) {\n      var element = document.createElement(type);\n      this.setAttributes(element, attributes);\n      for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        children[_key - 2] = arguments[_key];\n      }\n      element.append.apply(element, children);\n      return element;\n    }\n    return undefined;\n  },\n  setAttribute: function setAttribute(element) {\n    var attribute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var value = arguments.length > 2 ? arguments[2] : undefined;\n    if (this.isElement(element) && value !== null && value !== undefined) {\n      element.setAttribute(attribute, value);\n    }\n  },\n  setAttributes: function setAttributes(element) {\n    var _this3 = this;\n    var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.isElement(element)) {\n      var computedStyles = function computedStyles(rule, value) {\n        var _element$$attrs, _element$$attrs2;\n        var styles = element !== null && element !== void 0 && (_element$$attrs = element.$attrs) !== null && _element$$attrs !== void 0 && _element$$attrs[rule] ? [element === null || element === void 0 || (_element$$attrs2 = element.$attrs) === null || _element$$attrs2 === void 0 ? void 0 : _element$$attrs2[rule]] : [];\n        return [value].flat().reduce(function (cv, v) {\n          if (v !== null && v !== undefined) {\n            var type = _typeof$3(v);\n            if (type === 'string' || type === 'number') {\n              cv.push(v);\n            } else if (type === 'object') {\n              var _cv = Array.isArray(v) ? computedStyles(rule, v) : Object.entries(v).map(function (_ref3) {\n                var _ref4 = _slicedToArray$1(_ref3, 2),\n                  _k = _ref4[0],\n                  _v = _ref4[1];\n                return rule === 'style' && (!!_v || _v === 0) ? \"\".concat(_k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(), \":\").concat(_v) : !!_v ? _k : undefined;\n              });\n              cv = _cv.length ? cv.concat(_cv.filter(function (c) {\n                return !!c;\n              })) : cv;\n            }\n          }\n          return cv;\n        }, styles);\n      };\n      Object.entries(attributes).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray$1(_ref5, 2),\n          key = _ref6[0],\n          value = _ref6[1];\n        if (value !== undefined && value !== null) {\n          var matchedEvent = key.match(/^on(.+)/);\n          if (matchedEvent) {\n            element.addEventListener(matchedEvent[1].toLowerCase(), value);\n          } else if (key === 'p-bind') {\n            _this3.setAttributes(element, value);\n          } else {\n            value = key === 'class' ? _toConsumableArray$3(new Set(computedStyles('class', value))).join(' ').trim() : key === 'style' ? computedStyles('style', value).join(';').trim() : value;\n            (element.$attrs = element.$attrs || {}) && (element.$attrs[key] = value);\n            element.setAttribute(key, value);\n          }\n        }\n      });\n    }\n  },\n  getAttribute: function getAttribute(element, name) {\n    if (this.isElement(element)) {\n      var value = element.getAttribute(name);\n      if (!isNaN(value)) {\n        return +value;\n      }\n      if (value === 'true' || value === 'false') {\n        return value === 'true';\n      }\n      return value;\n    }\n    return undefined;\n  },\n  isAttributeEquals: function isAttributeEquals(element, name, value) {\n    return this.isElement(element) ? this.getAttribute(element, name) === value : false;\n  },\n  isAttributeNotEquals: function isAttributeNotEquals(element, name, value) {\n    return !this.isAttributeEquals(element, name, value);\n  },\n  getHeight: function getHeight(el) {\n    if (el) {\n      var height = el.offsetHeight;\n      var style = getComputedStyle(el);\n      height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n      return height;\n    }\n    return 0;\n  },\n  getWidth: function getWidth(el) {\n    if (el) {\n      var width = el.offsetWidth;\n      var style = getComputedStyle(el);\n      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n      return width;\n    }\n    return 0;\n  },\n  absolutePosition: function absolutePosition(element, target) {\n    var gutter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (element) {\n      var elementDimensions = element.offsetParent ? {\n        width: element.offsetWidth,\n        height: element.offsetHeight\n      } : this.getHiddenElementDimensions(element);\n      var elementOuterHeight = elementDimensions.height;\n      var elementOuterWidth = elementDimensions.width;\n      var targetOuterHeight = target.offsetHeight;\n      var targetOuterWidth = target.offsetWidth;\n      var targetOffset = target.getBoundingClientRect();\n      var windowScrollTop = this.getWindowScrollTop();\n      var windowScrollLeft = this.getWindowScrollLeft();\n      var viewport = this.getViewport();\n      var top,\n        left,\n        origin = 'top';\n      if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n        top = targetOffset.top + windowScrollTop - elementOuterHeight;\n        origin = 'bottom';\n        if (top < 0) {\n          top = windowScrollTop;\n        }\n      } else {\n        top = targetOuterHeight + targetOffset.top + windowScrollTop;\n      }\n      if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;\n      element.style.top = top + 'px';\n      element.style.left = left + 'px';\n      element.style.transformOrigin = origin;\n      gutter && (element.style.marginTop = origin === 'bottom' ? 'calc(var(--p-anchor-gutter) * -1)' : 'calc(var(--p-anchor-gutter))');\n    }\n  },\n  relativePosition: function relativePosition(element, target) {\n    var gutter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (element) {\n      var elementDimensions = element.offsetParent ? {\n        width: element.offsetWidth,\n        height: element.offsetHeight\n      } : this.getHiddenElementDimensions(element);\n      var targetHeight = target.offsetHeight;\n      var targetOffset = target.getBoundingClientRect();\n      var viewport = this.getViewport();\n      var top,\n        left,\n        origin = 'top';\n      if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n        top = -1 * elementDimensions.height;\n        origin = 'bottom';\n        if (targetOffset.top + top < 0) {\n          top = -1 * targetOffset.top;\n        }\n      } else {\n        top = targetHeight;\n      }\n      if (elementDimensions.width > viewport.width) {\n        // element wider then viewport and cannot fit on screen (align at left side of viewport)\n        left = targetOffset.left * -1;\n      } else if (targetOffset.left + elementDimensions.width > viewport.width) {\n        // element wider then viewport but can be fit on screen (align at right side of viewport)\n        left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n      } else {\n        // element fits on screen (align with target)\n        left = 0;\n      }\n      element.style.top = top + 'px';\n      element.style.left = left + 'px';\n      element.style.transformOrigin = origin;\n      gutter && (element.style.marginTop = origin === 'bottom' ? 'calc(var(--p-anchor-gutter) * -1)' : 'calc(var(--p-anchor-gutter))');\n    }\n  },\n  nestedPosition: function nestedPosition(element, level) {\n    if (element) {\n      var parentItem = element.parentElement;\n      var elementOffset = this.getOffset(parentItem);\n      var viewport = this.getViewport();\n      var sublistWidth = element.offsetParent ? element.offsetWidth : this.getHiddenElementOuterWidth(element);\n      var itemOuterWidth = this.getOuterWidth(parentItem.children[0]);\n      var left;\n      if (parseInt(elementOffset.left, 10) + itemOuterWidth + sublistWidth > viewport.width - this.calculateScrollbarWidth()) {\n        if (parseInt(elementOffset.left, 10) < sublistWidth) {\n          // for too small screens\n          if (level % 2 === 1) {\n            left = parseInt(elementOffset.left, 10) ? '-' + parseInt(elementOffset.left, 10) + 'px' : '100%';\n          } else if (level % 2 === 0) {\n            left = viewport.width - sublistWidth - this.calculateScrollbarWidth() + 'px';\n          }\n        } else {\n          left = '-100%';\n        }\n      } else {\n        left = '100%';\n      }\n      element.style.top = '0px';\n      element.style.left = left;\n    }\n  },\n  getParentNode: function getParentNode(element) {\n    var parent = element === null || element === void 0 ? void 0 : element.parentNode;\n    if (parent && parent instanceof ShadowRoot && parent.host) {\n      parent = parent.host;\n    }\n    return parent;\n  },\n  getParents: function getParents(element) {\n    var parents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var parent = this.getParentNode(element);\n    return parent === null ? parents : this.getParents(parent, parents.concat([parent]));\n  },\n  getScrollableParents: function getScrollableParents(element) {\n    var scrollableParents = [];\n    if (element) {\n      var parents = this.getParents(element);\n      var overflowRegex = /(auto|scroll)/;\n      var overflowCheck = function overflowCheck(node) {\n        try {\n          var styleDeclaration = window['getComputedStyle'](node, null);\n          return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n        } catch (err) {\n          return false;\n        }\n      };\n      var _iterator = _createForOfIteratorHelper$1(parents),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var parent = _step.value;\n          var scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n          if (scrollSelectors) {\n            var selectors = scrollSelectors.split(',');\n            var _iterator2 = _createForOfIteratorHelper$1(selectors),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var selector = _step2.value;\n                var el = this.findSingle(parent, selector);\n                if (el && overflowCheck(el)) {\n                  scrollableParents.push(el);\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n          if (parent.nodeType !== 9 && overflowCheck(parent)) {\n            scrollableParents.push(parent);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    return scrollableParents;\n  },\n  getHiddenElementOuterHeight: function getHiddenElementOuterHeight(element) {\n    if (element) {\n      element.style.visibility = 'hidden';\n      element.style.display = 'block';\n      var elementHeight = element.offsetHeight;\n      element.style.display = 'none';\n      element.style.visibility = 'visible';\n      return elementHeight;\n    }\n    return 0;\n  },\n  getHiddenElementOuterWidth: function getHiddenElementOuterWidth(element) {\n    if (element) {\n      element.style.visibility = 'hidden';\n      element.style.display = 'block';\n      var elementWidth = element.offsetWidth;\n      element.style.display = 'none';\n      element.style.visibility = 'visible';\n      return elementWidth;\n    }\n    return 0;\n  },\n  getHiddenElementDimensions: function getHiddenElementDimensions(element) {\n    if (element) {\n      var dimensions = {};\n      element.style.visibility = 'hidden';\n      element.style.display = 'block';\n      dimensions.width = element.offsetWidth;\n      dimensions.height = element.offsetHeight;\n      element.style.display = 'none';\n      element.style.visibility = 'visible';\n      return dimensions;\n    }\n    return 0;\n  },\n  fadeIn: function fadeIn(element, duration) {\n    if (element) {\n      element.style.opacity = 0;\n      var last = +new Date();\n      var opacity = 0;\n      var tick = function tick() {\n        opacity = +element.style.opacity + (new Date().getTime() - last) / duration;\n        element.style.opacity = opacity;\n        last = +new Date();\n        if (+opacity < 1) {\n          window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n        }\n      };\n      tick();\n    }\n  },\n  fadeOut: function fadeOut(element, ms) {\n    if (element) {\n      var opacity = 1,\n        interval = 50,\n        duration = ms,\n        gap = interval / duration;\n      var fading = setInterval(function () {\n        opacity -= gap;\n        if (opacity <= 0) {\n          opacity = 0;\n          clearInterval(fading);\n        }\n        element.style.opacity = opacity;\n      }, interval);\n    }\n  },\n  getUserAgent: function getUserAgent() {\n    return navigator.userAgent;\n  },\n  appendChild: function appendChild(element, target) {\n    if (this.isElement(target)) target.appendChild(element);else if (target.el && target.elElement) target.elElement.appendChild(element);else throw new Error('Cannot append ' + target + ' to ' + element);\n  },\n  isElement: function isElement(obj) {\n    return (typeof HTMLElement === \"undefined\" ? \"undefined\" : _typeof$3(HTMLElement)) === 'object' ? obj instanceof HTMLElement : obj && _typeof$3(obj) === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n  },\n  scrollInView: function scrollInView(container, item) {\n    var borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n    var paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n    var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    var containerRect = container.getBoundingClientRect();\n    var itemRect = item.getBoundingClientRect();\n    var offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    var scroll = container.scrollTop;\n    var elementHeight = container.clientHeight;\n    var itemHeight = this.getOuterHeight(item);\n    if (offset < 0) {\n      container.scrollTop = scroll + offset;\n    } else if (offset + itemHeight > elementHeight) {\n      container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n  },\n  clearSelection: function clearSelection() {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document['selection'] && document['selection'].empty) {\n      try {\n        document['selection'].empty();\n      } catch (error) {\n        //ignore IE bug\n      }\n    }\n  },\n  getSelection: function getSelection() {\n    if (window.getSelection) return window.getSelection().toString();else if (document.getSelection) return document.getSelection().toString();else if (document['selection']) return document['selection'].createRange().text;\n    return null;\n  },\n  calculateScrollbarWidth: function calculateScrollbarWidth() {\n    if (this.calculatedScrollbarWidth != null) return this.calculatedScrollbarWidth;\n    var scrollDiv = document.createElement('div');\n    this.addStyles(scrollDiv, {\n      width: '100px',\n      height: '100px',\n      overflow: 'scroll',\n      position: 'absolute',\n      top: '-9999px'\n    });\n    document.body.appendChild(scrollDiv);\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    this.calculatedScrollbarWidth = scrollbarWidth;\n    return scrollbarWidth;\n  },\n  calculateBodyScrollbarWidth: function calculateBodyScrollbarWidth() {\n    return window.innerWidth - document.documentElement.offsetWidth;\n  },\n  getBrowser: function getBrowser() {\n    if (!this.browser) {\n      var matched = this.resolveUserAgent();\n      this.browser = {};\n      if (matched.browser) {\n        this.browser[matched.browser] = true;\n        this.browser['version'] = matched.version;\n      }\n      if (this.browser['chrome']) {\n        this.browser['webkit'] = true;\n      } else if (this.browser['webkit']) {\n        this.browser['safari'] = true;\n      }\n    }\n    return this.browser;\n  },\n  resolveUserAgent: function resolveUserAgent() {\n    var ua = navigator.userAgent.toLowerCase();\n    var match = /(chrome)[ ]([\\w.]+)/.exec(ua) || /(webkit)[ ]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ ]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n    return {\n      browser: match[1] || '',\n      version: match[2] || '0'\n    };\n  },\n  isVisible: function isVisible(element) {\n    return element && element.offsetParent != null;\n  },\n  invokeElementMethod: function invokeElementMethod(element, methodName, args) {\n    element[methodName].apply(element, args);\n  },\n  isExist: function isExist(element) {\n    return !!(element !== null && typeof element !== 'undefined' && element.nodeName && this.getParentNode(element));\n  },\n  isClient: function isClient() {\n    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n  },\n  focus: function focus(el, options) {\n    el && document.activeElement !== el && el.focus(options);\n  },\n  isFocusableElement: function isFocusableElement(element) {\n    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return this.isElement(element) ? element.matches(\"button:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\".concat(selector, \",\\n                [href][clientHeight][clientWidth]:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                input:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                select:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                textarea:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                [tabIndex]:not([tabIndex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                [contenteditable]:not([tabIndex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector)) : false;\n  },\n  getFocusableElements: function getFocusableElements(element) {\n    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var focusableElements = this.find(element, \"button:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\".concat(selector, \",\\n                [href][clientHeight][clientWidth]:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                input:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                select:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                textarea:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                [tabIndex]:not([tabIndex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector, \",\\n                [contenteditable]:not([tabIndex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\").concat(selector));\n    var visibleFocusableElements = [];\n    var _iterator3 = _createForOfIteratorHelper$1(focusableElements),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var focusableElement = _step3.value;\n        if (getComputedStyle(focusableElement).display != 'none' && getComputedStyle(focusableElement).visibility != 'hidden') visibleFocusableElements.push(focusableElement);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return visibleFocusableElements;\n  },\n  getFirstFocusableElement: function getFirstFocusableElement(element, selector) {\n    var focusableElements = this.getFocusableElements(element, selector);\n    return focusableElements.length > 0 ? focusableElements[0] : null;\n  },\n  getLastFocusableElement: function getLastFocusableElement(element, selector) {\n    var focusableElements = this.getFocusableElements(element, selector);\n    return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;\n  },\n  getNextFocusableElement: function getNextFocusableElement(container, element, selector) {\n    var focusableElements = this.getFocusableElements(container, selector);\n    var index = focusableElements.length > 0 ? focusableElements.findIndex(function (el) {\n      return el === element;\n    }) : -1;\n    var nextIndex = index > -1 && focusableElements.length >= index + 1 ? index + 1 : -1;\n    return nextIndex > -1 ? focusableElements[nextIndex] : null;\n  },\n  getPreviousElementSibling: function getPreviousElementSibling(element, selector) {\n    var previousElement = element.previousElementSibling;\n    while (previousElement) {\n      if (previousElement.matches(selector)) {\n        return previousElement;\n      } else {\n        previousElement = previousElement.previousElementSibling;\n      }\n    }\n    return null;\n  },\n  getNextElementSibling: function getNextElementSibling(element, selector) {\n    var nextElement = element.nextElementSibling;\n    while (nextElement) {\n      if (nextElement.matches(selector)) {\n        return nextElement;\n      } else {\n        nextElement = nextElement.nextElementSibling;\n      }\n    }\n    return null;\n  },\n  isClickable: function isClickable(element) {\n    if (element) {\n      var targetNode = element.nodeName;\n      var parentNode = element.parentElement && element.parentElement.nodeName;\n      return targetNode === 'INPUT' || targetNode === 'TEXTAREA' || targetNode === 'BUTTON' || targetNode === 'A' || parentNode === 'INPUT' || parentNode === 'TEXTAREA' || parentNode === 'BUTTON' || parentNode === 'A' || !!element.closest('.p-button, .p-checkbox, .p-radiobutton') // @todo Add [data-pc-section=\"button\"]\n      ;\n    }\n    return false;\n  },\n  applyStyle: function applyStyle(element, style) {\n    if (typeof style === 'string') {\n      element.style.cssText = style;\n    } else {\n      for (var prop in style) {\n        element.style[prop] = style[prop];\n      }\n    }\n  },\n  isIOS: function isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n  },\n  isAndroid: function isAndroid() {\n    return /(android)/i.test(navigator.userAgent);\n  },\n  isTouchDevice: function isTouchDevice() {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n  },\n  hasCSSAnimation: function hasCSSAnimation(element) {\n    if (element) {\n      var style = getComputedStyle(element);\n      var animationDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n      return animationDuration > 0;\n    }\n    return false;\n  },\n  hasCSSTransition: function hasCSSTransition(element) {\n    if (element) {\n      var style = getComputedStyle(element);\n      var transitionDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n      return transitionDuration > 0;\n    }\n    return false;\n  },\n  exportCSV: function exportCSV(csv, filename) {\n    var blob = new Blob([csv], {\n      type: 'application/csv;charset=utf-8;'\n    });\n    if (window.navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(blob, filename + '.csv');\n    } else {\n      var link = document.createElement('a');\n      if (link.download !== undefined) {\n        link.setAttribute('href', URL.createObjectURL(blob));\n        link.setAttribute('download', filename + '.csv');\n        link.style.display = 'none';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n        window.open(encodeURI(csv));\n      }\n    }\n  },\n  blockBodyScroll: function blockBodyScroll() {\n    var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'p-overflow-hidden';\n    document.body.style.setProperty('--scrollbar-width', this.calculateBodyScrollbarWidth() + 'px');\n    this.addClass(document.body, className);\n  },\n  unblockBodyScroll: function unblockBodyScroll() {\n    var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'p-overflow-hidden';\n    document.body.style.removeProperty('--scrollbar-width');\n    this.removeClass(document.body, className);\n  }\n};\n\nfunction _typeof$2(o) { \"@babel/helpers - typeof\"; return _typeof$2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof$2(o); }\nfunction _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey$1(descriptor.key), descriptor); } }\nfunction _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey$1(t) { var i = _toPrimitive$1(t, \"string\"); return \"symbol\" == _typeof$2(i) ? i : String(i); }\nfunction _toPrimitive$1(t, r) { if (\"object\" != _typeof$2(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof$2(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar ConnectedOverlayScrollHandler = /*#__PURE__*/function () {\n  function ConnectedOverlayScrollHandler(element) {\n    var listener = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    _classCallCheck$1(this, ConnectedOverlayScrollHandler);\n    this.element = element;\n    this.listener = listener;\n  }\n  _createClass$1(ConnectedOverlayScrollHandler, [{\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      this.scrollableParents = DomHandler.getScrollableParents(this.element);\n      for (var i = 0; i < this.scrollableParents.length; i++) {\n        this.scrollableParents[i].addEventListener('scroll', this.listener);\n      }\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollableParents) {\n        for (var i = 0; i < this.scrollableParents.length; i++) {\n          this.scrollableParents[i].removeEventListener('scroll', this.listener);\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unbindScrollListener();\n      this.element = null;\n      this.listener = null;\n      this.scrollableParents = null;\n    }\n  }]);\n  return ConnectedOverlayScrollHandler;\n}();\n\nfunction primebus() {\n  var allHandlers = new Map();\n  return {\n    on: function on(type, handler) {\n      var handlers = allHandlers.get(type);\n      if (!handlers) handlers = [handler];else handlers.push(handler);\n      allHandlers.set(type, handlers);\n    },\n    off: function off(type, handler) {\n      var handlers = allHandlers.get(type);\n      if (handlers) {\n        handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n      }\n    },\n    emit: function emit(type, evt) {\n      var handlers = allHandlers.get(type);\n      if (handlers) {\n        handlers.slice().map(function (handler) {\n          handler(evt);\n        });\n      }\n    }\n  };\n}\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray$2(arr) { return _arrayWithoutHoles$2(arr) || _iterableToArray$2(arr) || _unsupportedIterableToArray$2(arr) || _nonIterableSpread$2(); }\nfunction _nonIterableSpread$2() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray$2(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles$2(arr) { if (Array.isArray(arr)) return _arrayLikeToArray$2(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }\nfunction _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _typeof$1(o) { \"@babel/helpers - typeof\"; return _typeof$1 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof$1(o); }\nvar ObjectUtils = {\n  equals: function equals(obj1, obj2, field) {\n    if (field) return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);else return this.deepEquals(obj1, obj2);\n  },\n  deepEquals: function deepEquals(a, b) {\n    if (a === b) return true;\n    if (a && b && _typeof$1(a) == 'object' && _typeof$1(b) == 'object') {\n      var arrA = Array.isArray(a),\n        arrB = Array.isArray(b),\n        i,\n        length,\n        key;\n      if (arrA && arrB) {\n        length = a.length;\n        if (length != b.length) return false;\n        for (i = length; i-- !== 0;) if (!this.deepEquals(a[i], b[i])) return false;\n        return true;\n      }\n      if (arrA != arrB) return false;\n      var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n      if (dateA != dateB) return false;\n      if (dateA && dateB) return a.getTime() == b.getTime();\n      var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n      if (regexpA != regexpB) return false;\n      if (regexpA && regexpB) return a.toString() == b.toString();\n      var keys = Object.keys(a);\n      length = keys.length;\n      if (length !== Object.keys(b).length) return false;\n      for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n      for (i = length; i-- !== 0;) {\n        key = keys[i];\n        if (!this.deepEquals(a[key], b[key])) return false;\n      }\n      return true;\n    }\n    return a !== a && b !== b;\n  },\n  resolveFieldData: function resolveFieldData(data, field) {\n    if (!data || !field) {\n      // short circuit if there is nothing to resolve\n      return null;\n    }\n    try {\n      var value = data[field];\n      if (this.isNotEmpty(value)) return value;\n    } catch (_unused) {\n      // Performance optimization: https://github.com/primefaces/primereact/issues/4797\n      // do nothing and continue to other methods to resolve field data\n    }\n    if (Object.keys(data).length) {\n      if (this.isFunction(field)) {\n        return field(data);\n      } else if (field.indexOf('.') === -1) {\n        return data[field];\n      } else {\n        var fields = field.split('.');\n        var _value = data;\n        for (var i = 0, len = fields.length; i < len; ++i) {\n          if (_value == null) {\n            return null;\n          }\n          _value = _value[fields[i]];\n        }\n        return _value;\n      }\n    }\n    return null;\n  },\n  getItemValue: function getItemValue(obj) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n    return this.isFunction(obj) ? obj.apply(void 0, params) : obj;\n  },\n  filter: function filter(value, fields, filterValue) {\n    var filteredItems = [];\n    if (value) {\n      var _iterator = _createForOfIteratorHelper(value),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          var _iterator2 = _createForOfIteratorHelper(fields),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var field = _step2.value;\n              if (String(this.resolveFieldData(item, field)).toLowerCase().indexOf(filterValue.toLowerCase()) > -1) {\n                filteredItems.push(item);\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    return filteredItems;\n  },\n  reorderArray: function reorderArray(value, from, to) {\n    if (value && from !== to) {\n      if (to >= value.length) {\n        to %= value.length;\n        from %= value.length;\n      }\n      value.splice(to, 0, value.splice(from, 1)[0]);\n    }\n  },\n  findIndexInList: function findIndexInList(value, list) {\n    var index = -1;\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        if (list[i] === value) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  },\n  contains: function contains(value, list) {\n    if (value != null && list && list.length) {\n      var _iterator3 = _createForOfIteratorHelper(list),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var val = _step3.value;\n          if (this.equals(value, val)) return true;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n    return false;\n  },\n  insertIntoOrderedArray: function insertIntoOrderedArray(item, index, arr, sourceArr) {\n    if (arr.length > 0) {\n      var injected = false;\n      for (var i = 0; i < arr.length; i++) {\n        var currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n        if (currentItemIndex > index) {\n          arr.splice(i, 0, item);\n          injected = true;\n          break;\n        }\n      }\n      if (!injected) {\n        arr.push(item);\n      }\n    } else {\n      arr.push(item);\n    }\n  },\n  removeAccents: function removeAccents(str) {\n    if (str && str.search(/[\\xC0-\\xFF]/g) > -1) {\n      str = str.replace(/[\\xC0-\\xC5]/g, 'A').replace(/[\\xC6]/g, 'AE').replace(/[\\xC7]/g, 'C').replace(/[\\xC8-\\xCB]/g, 'E').replace(/[\\xCC-\\xCF]/g, 'I').replace(/[\\xD0]/g, 'D').replace(/[\\xD1]/g, 'N').replace(/[\\xD2-\\xD6\\xD8]/g, 'O').replace(/[\\xD9-\\xDC]/g, 'U').replace(/[\\xDD]/g, 'Y').replace(/[\\xDE]/g, 'P').replace(/[\\xE0-\\xE5]/g, 'a').replace(/[\\xE6]/g, 'ae').replace(/[\\xE7]/g, 'c').replace(/[\\xE8-\\xEB]/g, 'e').replace(/[\\xEC-\\xEF]/g, 'i').replace(/[\\xF1]/g, 'n').replace(/[\\xF2-\\xF6\\xF8]/g, 'o').replace(/[\\xF9-\\xFC]/g, 'u').replace(/[\\xFE]/g, 'p').replace(/[\\xFD\\xFF]/g, 'y');\n    }\n    return str;\n  },\n  getVNodeProp: function getVNodeProp(vnode, prop) {\n    if (vnode) {\n      var props = vnode.props;\n      if (props) {\n        var kebabProp = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        var propName = Object.prototype.hasOwnProperty.call(props, kebabProp) ? kebabProp : prop;\n        return vnode.type[\"extends\"].props[prop].type === Boolean && props[propName] === '' ? true : props[propName];\n      }\n    }\n    return null;\n  },\n  toFlatCase: function toFlatCase(str) {\n    // convert snake, kebab, camel and pascal cases to flat case\n    return this.isString(str) ? str.replace(/(-|_)/g, '').toLowerCase() : str;\n  },\n  toKebabCase: function toKebabCase(str) {\n    // convert snake, camel and pascal cases to kebab case\n    return this.isString(str) ? str.replace(/(_)/g, '-').replace(/[A-Z]/g, function (c, i) {\n      return i === 0 ? c : '-' + c.toLowerCase();\n    }).toLowerCase() : str;\n  },\n  toCapitalCase: function toCapitalCase(str) {\n    return this.isString(str, {\n      empty: false\n    }) ? str[0].toUpperCase() + str.slice(1) : str;\n  },\n  isEmpty: function isEmpty(value) {\n    return value === null || value === undefined || value === '' || Array.isArray(value) && value.length === 0 || !(value instanceof Date) && _typeof$1(value) === 'object' && Object.keys(value).length === 0;\n  },\n  isNotEmpty: function isNotEmpty(value) {\n    return !this.isEmpty(value);\n  },\n  isFunction: function isFunction(value) {\n    return !!(value && value.constructor && value.call && value.apply);\n  },\n  isObject: function isObject(value) {\n    var empty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return value instanceof Object && value.constructor === Object && (empty || Object.keys(value).length !== 0);\n  },\n  isDate: function isDate(value) {\n    return value instanceof Date && value.constructor === Date;\n  },\n  isArray: function isArray(value) {\n    var empty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return Array.isArray(value) && (empty || value.length !== 0);\n  },\n  isString: function isString(value) {\n    var empty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return typeof value === 'string' && (empty || value !== '');\n  },\n  isPrintableCharacter: function isPrintableCharacter() {\n    var _char = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return this.isNotEmpty(_char) && _char.length === 1 && _char.match(/\\S| /);\n  },\n  /**\n   * Firefox-v103 does not currently support the \"findLast\" method. It is stated that this method will be supported with Firefox-v104.\n   * https://caniuse.com/mdn-javascript_builtins_array_findlast\n   */\n  findLast: function findLast(arr, callback) {\n    var item;\n    if (this.isNotEmpty(arr)) {\n      try {\n        item = arr.findLast(callback);\n      } catch (_unused2) {\n        item = _toConsumableArray$2(arr).reverse().find(callback);\n      }\n    }\n    return item;\n  },\n  /**\n   * Firefox-v103 does not currently support the \"findLastIndex\" method. It is stated that this method will be supported with Firefox-v104.\n   * https://caniuse.com/mdn-javascript_builtins_array_findlastindex\n   */\n  findLastIndex: function findLastIndex(arr, callback) {\n    var index = -1;\n    if (this.isNotEmpty(arr)) {\n      try {\n        index = arr.findLastIndex(callback);\n      } catch (_unused3) {\n        index = arr.lastIndexOf(_toConsumableArray$2(arr).reverse().find(callback));\n      }\n    }\n    return index;\n  },\n  sort: function sort(value1, value2) {\n    var order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var comparator = arguments.length > 3 ? arguments[3] : undefined;\n    var nullSortOrder = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var result = this.compare(value1, value2, comparator, order);\n    var finalSortOrder = order;\n\n    // nullSortOrder == 1 means Excel like sort nulls at bottom\n    if (this.isEmpty(value1) || this.isEmpty(value2)) {\n      finalSortOrder = nullSortOrder === 1 ? order : nullSortOrder;\n    }\n    return finalSortOrder * result;\n  },\n  compare: function compare(value1, value2, comparator) {\n    var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var result = -1;\n    var emptyValue1 = this.isEmpty(value1);\n    var emptyValue2 = this.isEmpty(value2);\n    if (emptyValue1 && emptyValue2) result = 0;else if (emptyValue1) result = order;else if (emptyValue2) result = -order;else if (typeof value1 === 'string' && typeof value2 === 'string') result = comparator(value1, value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n    return result;\n  },\n  localeComparator: function localeComparator() {\n    //performance gain using Int.Collator. It is not recommended to use localeCompare against large arrays.\n    return new Intl.Collator(undefined, {\n      numeric: true\n    }).compare;\n  },\n  nestedKeys: function nestedKeys() {\n    var _this = this;\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var parentKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return Object.entries(obj).reduce(function (o, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      var currentKey = parentKey ? \"\".concat(parentKey, \".\").concat(key) : key;\n      _this.isObject(value) ? o = o.concat(_this.nestedKeys(value, currentKey)) : o.push(currentKey);\n      return o;\n    }, []);\n  },\n  stringify: function stringify(value) {\n    var _this2 = this;\n    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var currentIndent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var currentIndentStr = ' '.repeat(currentIndent);\n    var nextIndentStr = ' '.repeat(currentIndent + indent);\n    if (this.isArray(value)) {\n      return '[' + value.map(function (v) {\n        return _this2.stringify(v, indent, currentIndent + indent);\n      }).join(', ') + ']';\n    } else if (this.isDate(value)) {\n      return value.toISOString();\n    } else if (this.isFunction(value)) {\n      return value.toString();\n    } else if (this.isObject(value)) {\n      return '{\\n' + Object.entries(value).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          k = _ref4[0],\n          v = _ref4[1];\n        return \"\".concat(nextIndentStr).concat(k, \": \").concat(_this2.stringify(v, indent, currentIndent + indent));\n      }).join(',\\n') + \"\\n\".concat(currentIndentStr) + '}';\n    } else {\n      return JSON.stringify(value);\n    }\n  }\n};\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray$1(arr) { return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$1(); }\nfunction _nonIterableSpread$1() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }\nfunction _iterableToArray$1(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles$1(arr) { if (Array.isArray(arr)) return _arrayLikeToArray$1(arr); }\nfunction _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar _default = /*#__PURE__*/function () {\n  function _default(_ref) {\n    var init = _ref.init,\n      type = _ref.type;\n    _classCallCheck(this, _default);\n    _defineProperty(this, \"helpers\", void 0);\n    _defineProperty(this, \"type\", void 0);\n    this.helpers = new Set(init);\n    this.type = type;\n  }\n  _createClass(_default, [{\n    key: \"add\",\n    value: function add(instance) {\n      this.helpers.add(instance);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // @todo\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(instance) {\n      this.helpers[\"delete\"](instance);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.helpers.clear();\n    }\n  }, {\n    key: \"get\",\n    value: function get(parentInstance, slots) {\n      var children = this._get(parentInstance, slots);\n      var computed = children ? this._recursive(_toConsumableArray$1(this.helpers), children) : null;\n      return ObjectUtils.isNotEmpty(computed) ? computed : null;\n    }\n  }, {\n    key: \"_isMatched\",\n    value: function _isMatched(instance, key) {\n      var _parent$vnode;\n      var parent = instance === null || instance === void 0 ? void 0 : instance.parent;\n      return (parent === null || parent === void 0 || (_parent$vnode = parent.vnode) === null || _parent$vnode === void 0 ? void 0 : _parent$vnode.key) === key || parent && this._isMatched(parent, key) || false;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(parentInstance, slots) {\n      var _ref2, _ref2$default;\n      return ((_ref2 = slots || (parentInstance === null || parentInstance === void 0 ? void 0 : parentInstance.$slots)) === null || _ref2 === void 0 || (_ref2$default = _ref2[\"default\"]) === null || _ref2$default === void 0 ? void 0 : _ref2$default.call(_ref2)) || null;\n    }\n  }, {\n    key: \"_recursive\",\n    value: function _recursive() {\n      var _this = this;\n      var helpers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var components = [];\n      children.forEach(function (child) {\n        if (child.children instanceof Array) {\n          components = components.concat(_this._recursive(components, child.children));\n        } else if (child.type.name === _this.type) {\n          components.push(child);\n        } else if (ObjectUtils.isNotEmpty(child.key)) {\n          components = components.concat(helpers.filter(function (c) {\n            return _this._isMatched(c, child.key);\n          }).map(function (c) {\n            return c.vnode;\n          }));\n        }\n      });\n      return components;\n    }\n  }]);\n  return _default;\n}();\n\nvar lastId = 0;\nfunction UniqueComponentId () {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pv_id_';\n  lastId++;\n  return \"\".concat(prefix).concat(lastId);\n}\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction handler() {\n  var zIndexes = [];\n  var generateZIndex = function generateZIndex(key, autoZIndex) {\n    var baseZIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 999;\n    var lastZIndex = getLastZIndex(key, autoZIndex, baseZIndex);\n    var newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 1;\n    zIndexes.push({\n      key: key,\n      value: newZIndex\n    });\n    return newZIndex;\n  };\n  var revertZIndex = function revertZIndex(zIndex) {\n    zIndexes = zIndexes.filter(function (obj) {\n      return obj.value !== zIndex;\n    });\n  };\n  var getCurrentZIndex = function getCurrentZIndex(key, autoZIndex) {\n    return getLastZIndex(key, autoZIndex).value;\n  };\n  var getLastZIndex = function getLastZIndex(key, autoZIndex) {\n    var baseZIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return _toConsumableArray(zIndexes).reverse().find(function (obj) {\n      return autoZIndex ? true : obj.key === key;\n    }) || {\n      key: key,\n      value: baseZIndex\n    };\n  };\n  var getZIndex = function getZIndex(el) {\n    return el ? parseInt(el.style.zIndex, 10) || 0 : 0;\n  };\n  return {\n    get: getZIndex,\n    set: function set(key, el, baseZIndex) {\n      if (el) {\n        el.style.zIndex = String(generateZIndex(key, true, baseZIndex));\n      }\n    },\n    clear: function clear(el) {\n      if (el) {\n        revertZIndex(getZIndex(el));\n        el.style.zIndex = '';\n      }\n    },\n    getCurrent: function getCurrent(key) {\n      return getCurrentZIndex(key, true);\n    }\n  };\n}\nvar ZIndexUtils = handler();\n\nexport { ConnectedOverlayScrollHandler, DomHandler, primebus as EventBus, _default as HelperSet, ObjectUtils, UniqueComponentId, ZIndexUtils };\n",
      "start": 1756100531970,
      "end": 1756100532038,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100532038,
      "end": 1756100532038,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100532038,
      "end": 1756100532039,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100532039,
      "end": 1756100532039,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100532039,
      "end": 1756100532039,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100532039,
      "end": 1756100532039,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100532039,
      "end": 1756100532039,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100532039,
      "end": 1756100532042,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100532042,
      "end": 1756100532042,
      "order": "normal"
    }
  ]
}
