{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/steps/steps.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { DomHandler } from 'primevue/utils';\nimport { mergeProps, openBlock, createElementBlock, createElementVNode, Fragment, renderList, toDisplayString, createBlock, resolveDynamicComponent, createCommentVNode } from 'vue';\nimport BaseComponent from 'primevue/basecomponent';\nimport StepsStyle from 'primevue/steps/style';\n\nvar script$1 = {\n  name: 'BaseSteps',\n  \"extends\": BaseComponent,\n  props: {\n    id: {\n      type: String\n    },\n    model: {\n      type: Array,\n      \"default\": null\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": true\n    },\n    activeStep: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  style: StepsStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Steps',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:activeStep', 'step-change'],\n  data: function data() {\n    return {\n      d_activeStep: this.activeStep\n    };\n  },\n  watch: {\n    activeStep: function activeStep(newValue) {\n      this.d_activeStep = newValue;\n    }\n  },\n  mounted: function mounted() {\n    var firstItem = this.findFirstItem();\n    firstItem && (firstItem.tabIndex = '0');\n  },\n  methods: {\n    getPTOptions: function getPTOptions(key, item, index) {\n      return this.ptm(key, {\n        context: {\n          item: item,\n          index: index,\n          active: this.isActive(index),\n          disabled: this.isItemDisabled(item, index)\n        }\n      });\n    },\n    onItemClick: function onItemClick(event, item, index) {\n      if (this.disabled(item) || this.readonly) {\n        event.preventDefault();\n        return;\n      }\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n      if (index !== this.d_activeStep) {\n        this.d_activeStep = index;\n        this.$emit('update:activeStep', this.d_activeStep);\n      }\n      this.$emit('step-change', {\n        originalEvent: event,\n        index: index\n      });\n    },\n    onItemKeydown: function onItemKeydown(event, item) {\n      switch (event.code) {\n        case 'ArrowRight':\n          {\n            this.navigateToNextItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'ArrowLeft':\n          {\n            this.navigateToPrevItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'Home':\n          {\n            this.navigateToFirstItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'End':\n          {\n            this.navigateToLastItem(event.target);\n            event.preventDefault();\n            break;\n          }\n        case 'Tab':\n          //no op\n          break;\n        case 'Enter':\n        case 'NumpadEnter':\n        case 'Space':\n          {\n            this.onItemClick(event, item);\n            event.preventDefault();\n            break;\n          }\n      }\n    },\n    navigateToNextItem: function navigateToNextItem(target) {\n      var nextItem = this.findNextItem(target);\n      nextItem && this.setFocusToMenuitem(target, nextItem);\n    },\n    navigateToPrevItem: function navigateToPrevItem(target) {\n      var prevItem = this.findPrevItem(target);\n      prevItem && this.setFocusToMenuitem(target, prevItem);\n    },\n    navigateToFirstItem: function navigateToFirstItem(target) {\n      var firstItem = this.findFirstItem(target);\n      firstItem && this.setFocusToMenuitem(target, firstItem);\n    },\n    navigateToLastItem: function navigateToLastItem(target) {\n      var lastItem = this.findLastItem(target);\n      lastItem && this.setFocusToMenuitem(target, lastItem);\n    },\n    findNextItem: function findNextItem(item) {\n      var nextItem = item.parentElement.nextElementSibling;\n      return nextItem ? nextItem.children[0] : null;\n    },\n    findPrevItem: function findPrevItem(item) {\n      var prevItem = item.parentElement.previousElementSibling;\n      return prevItem ? prevItem.children[0] : null;\n    },\n    findFirstItem: function findFirstItem() {\n      var firstSibling = DomHandler.findSingle(this.$refs.list, '[data-pc-section=\"menuitem\"]');\n      return firstSibling ? firstSibling.children[0] : null;\n    },\n    findLastItem: function findLastItem() {\n      var siblings = DomHandler.find(this.$refs.list, '[data-pc-section=\"menuitem\"]');\n      return siblings ? siblings[siblings.length - 1].children[0] : null;\n    },\n    setFocusToMenuitem: function setFocusToMenuitem(target, focusableItem) {\n      target.tabIndex = '-1';\n      focusableItem.tabIndex = '0';\n      focusableItem.focus();\n    },\n    isActive: function isActive(index) {\n      return index === this.d_activeStep;\n    },\n    isItemDisabled: function isItemDisabled(item, index) {\n      return this.disabled(item) || this.readonly && !this.isActive(index);\n    },\n    visible: function visible(item) {\n      return typeof item.visible === 'function' ? item.visible() : item.visible !== false;\n    },\n    disabled: function disabled(item) {\n      return typeof item.disabled === 'function' ? item.disabled() : item.disabled;\n    },\n    label: function label(item) {\n      return typeof item.label === 'function' ? item.label() : item.label;\n    },\n    getMenuItemProps: function getMenuItemProps(item, index) {\n      var _this = this;\n      return {\n        action: mergeProps({\n          \"class\": this.cx('action'),\n          onClick: function onClick($event) {\n            return _this.onItemClick($event, item);\n          },\n          onKeyDown: function onKeyDown($event) {\n            return _this.onItemKeydown($event, item);\n          }\n        }, this.getPTOptions('action', item, index)),\n        step: mergeProps({\n          \"class\": this.cx('step')\n        }, this.getPTOptions('step', item, index)),\n        label: mergeProps({\n          \"class\": this.cx('label')\n        }, this.getPTOptions('label', item, index))\n      };\n    }\n  }\n};\n\nvar _hoisted_1 = [\"id\"];\nvar _hoisted_2 = [\"aria-current\", \"onClick\", \"onKeydown\", \"data-p-highlight\", \"data-p-disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"nav\", mergeProps({\n    id: _ctx.id,\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"ol\", mergeProps({\n    ref: \"list\",\n    \"class\": _ctx.cx('menu')\n  }, _ctx.ptm('menu')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function (item, index) {\n    return openBlock(), createElementBlock(Fragment, {\n      key: $options.label(item) + '_' + index.toString()\n    }, [$options.visible(item) ? (openBlock(), createElementBlock(\"li\", mergeProps({\n      key: 0,\n      \"class\": [_ctx.cx('menuitem', {\n        item: item,\n        index: index\n      }), item[\"class\"]],\n      style: item.style,\n      \"aria-current\": $options.isActive(index) ? 'step' : undefined,\n      onClick: function onClick($event) {\n        return $options.onItemClick($event, item, index);\n      },\n      onKeydown: function onKeydown($event) {\n        return $options.onItemKeydown($event, item, index);\n      }\n    }, $options.getPTOptions('menuitem', item, index), {\n      \"data-p-highlight\": $options.isActive(index),\n      \"data-p-disabled\": $options.isItemDisabled(item, index)\n    }), [!_ctx.$slots.item ? (openBlock(), createElementBlock(\"span\", mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('action')\n    }, $options.getPTOptions('action', item, index)), [createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('step')\n    }, $options.getPTOptions('step', item, index)), toDisplayString(index + 1), 17), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('label')\n    }, $options.getPTOptions('label', item, index)), toDisplayString($options.label(item)), 17)], 16)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {\n      key: 1,\n      item: item,\n      index: index,\n      active: index === $data.d_activeStep,\n      label: $options.label(item),\n      props: $options.getMenuItemProps(item, index)\n    }, null, 8, [\"item\", \"index\", \"active\", \"label\", \"props\"]))], 16, _hoisted_2)) : createCommentVNode(\"\", true)], 64);\n  }), 128))], 16)], 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100531781,
      "end": 1756100531832,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100531832,
      "end": 1756100531832,
      "order": "normal"
    }
  ]
}
