{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/picker-group/PickerGroup.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, Comment, Fragment, createVNode as _createVNode } from \"vue\";\nimport { flat, pick, extend, makeArrayProp, makeNumericProp, createNamespace, truthProp } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { useSyncPropRef } from \"../composables/use-sync-prop-ref.mjs\";\nimport { Tab } from \"../tab/index.mjs\";\nimport { Tabs } from \"../tabs/index.mjs\";\nimport Toolbar, { pickerToolbarProps, pickerToolbarSlots } from \"../picker/PickerToolbar.mjs\";\nconst [name, bem] = createNamespace(\"picker-group\");\nconst PICKER_GROUP_KEY = Symbol(name);\nconst pickerGroupProps = extend({\n  tabs: makeArrayProp(),\n  activeTab: makeNumericProp(0),\n  nextStepText: String,\n  showToolbar: truthProp\n}, pickerToolbarProps);\nvar stdin_default = defineComponent({\n  name,\n  props: pickerGroupProps,\n  emits: [\"confirm\", \"cancel\", \"update:activeTab\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const activeTab = useSyncPropRef(() => props.activeTab, (value) => emit(\"update:activeTab\", value));\n    const {\n      children,\n      linkChildren\n    } = useChildren(PICKER_GROUP_KEY);\n    linkChildren();\n    const showNextButton = () => +activeTab.value < props.tabs.length - 1 && props.nextStepText;\n    const onConfirm = () => {\n      if (showNextButton()) {\n        activeTab.value = +activeTab.value + 1;\n      } else {\n        emit(\"confirm\", children.map((item) => item.confirm()));\n      }\n    };\n    const onCancel = () => emit(\"cancel\");\n    return () => {\n      var _a, _b;\n      let childNodes = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) == null ? void 0 : _b.filter((node) => node.type !== Comment).map((node) => {\n        if (node.type === Fragment) {\n          return node.children;\n        }\n        return node;\n      });\n      if (childNodes) {\n        childNodes = flat(childNodes);\n      }\n      const confirmButtonText = showNextButton() ? props.nextStepText : props.confirmButtonText;\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [props.showToolbar ? _createVNode(Toolbar, {\n        \"title\": props.title,\n        \"cancelButtonText\": props.cancelButtonText,\n        \"confirmButtonText\": confirmButtonText,\n        \"onConfirm\": onConfirm,\n        \"onCancel\": onCancel\n      }, pick(slots, pickerToolbarSlots)) : null, _createVNode(Tabs, {\n        \"active\": activeTab.value,\n        \"onUpdate:active\": ($event) => activeTab.value = $event,\n        \"class\": bem(\"tabs\"),\n        \"shrink\": true,\n        \"animated\": true,\n        \"lazyRender\": false\n      }, {\n        default: () => [props.tabs.map((title, index) => _createVNode(Tab, {\n          \"title\": title,\n          \"titleClass\": bem(\"tab-title\")\n        }, {\n          default: () => [childNodes == null ? void 0 : childNodes[index]]\n        }))]\n      })]);\n    };\n  }\n});\nexport {\n  PICKER_GROUP_KEY,\n  stdin_default as default,\n  pickerGroupProps\n};\n",
      "start": 1756100533427,
      "end": 1756100533446,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100533446,
      "end": 1756100533446,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100533447,
      "end": 1756100533447,
      "order": "normal"
    }
  ]
}
