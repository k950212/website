{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/badge/Badge.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { isDef, addUnit, isNumeric, truthProp, numericProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nconst [name, bem] = createNamespace(\"badge\");\nconst badgeProps = {\n  dot: Boolean,\n  max: numericProp,\n  tag: makeStringProp(\"div\"),\n  color: String,\n  offset: Array,\n  content: numericProp,\n  showZero: truthProp,\n  position: makeStringProp(\"top-right\")\n};\nvar stdin_default = defineComponent({\n  name,\n  props: badgeProps,\n  setup(props, {\n    slots\n  }) {\n    const hasContent = () => {\n      if (slots.content) {\n        return true;\n      }\n      const {\n        content,\n        showZero\n      } = props;\n      return isDef(content) && content !== \"\" && (showZero || content !== 0 && content !== \"0\");\n    };\n    const renderContent = () => {\n      const {\n        dot,\n        max,\n        content\n      } = props;\n      if (!dot && hasContent()) {\n        if (slots.content) {\n          return slots.content();\n        }\n        if (isDef(max) && isNumeric(content) && +content > +max) {\n          return `${max}+`;\n        }\n        return content;\n      }\n    };\n    const getOffsetWithMinusString = (val) => val.startsWith(\"-\") ? val.replace(\"-\", \"\") : `-${val}`;\n    const style = computed(() => {\n      const style2 = {\n        background: props.color\n      };\n      if (props.offset) {\n        const [x, y] = props.offset;\n        const {\n          position\n        } = props;\n        const [offsetY, offsetX] = position.split(\"-\");\n        if (slots.default) {\n          if (typeof y === \"number\") {\n            style2[offsetY] = addUnit(offsetY === \"top\" ? y : -y);\n          } else {\n            style2[offsetY] = offsetY === \"top\" ? addUnit(y) : getOffsetWithMinusString(y);\n          }\n          if (typeof x === \"number\") {\n            style2[offsetX] = addUnit(offsetX === \"left\" ? x : -x);\n          } else {\n            style2[offsetX] = offsetX === \"left\" ? addUnit(x) : getOffsetWithMinusString(x);\n          }\n        } else {\n          style2.marginTop = addUnit(y);\n          style2.marginLeft = addUnit(x);\n        }\n      }\n      return style2;\n    });\n    const renderBadge = () => {\n      if (hasContent() || props.dot) {\n        return _createVNode(\"div\", {\n          \"class\": bem([props.position, {\n            dot: props.dot,\n            fixed: !!slots.default\n          }]),\n          \"style\": style.value\n        }, [renderContent()]);\n      }\n    };\n    return () => {\n      if (slots.default) {\n        const {\n          tag\n        } = props;\n        return _createVNode(tag, {\n          \"class\": bem(\"wrapper\")\n        }, {\n          default: () => [slots.default(), renderBadge()]\n        });\n      }\n      return renderBadge();\n    };\n  }\n});\nexport {\n  badgeProps,\n  stdin_default as default\n};\n",
      "start": 1756100533359,
      "end": 1756100533396,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    }
  ]
}
