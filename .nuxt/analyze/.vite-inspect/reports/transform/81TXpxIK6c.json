{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/primevue@3.53.0_vue@3.5.11/node_modules/primevue/inlinemessage/inlinemessage.esm.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import CheckIcon from 'primevue/icons/check';\nimport ExclamationTriangleIcon from 'primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from 'primevue/icons/infocircle';\nimport TimesCircleIcon from 'primevue/icons/timescircle';\nimport BaseComponent from 'primevue/basecomponent';\nimport InlineMessageStyle from 'primevue/inlinemessage/style';\nimport { openBlock, createElementBlock, mergeProps, renderSlot, createBlock, resolveDynamicComponent, createElementVNode, createTextVNode } from 'vue';\n\nvar script$1 = {\n  name: 'BaseInlineMessage',\n  \"extends\": BaseComponent,\n  props: {\n    severity: {\n      type: String,\n      \"default\": 'error'\n    },\n    icon: {\n      type: String,\n      \"default\": undefined\n    }\n  },\n  style: InlineMessageStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'InlineMessage',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  timeout: null,\n  data: function data() {\n    return {\n      visible: true\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    if (!this.sticky) {\n      setTimeout(function () {\n        _this.visible = false;\n      }, this.life);\n    }\n  },\n  computed: {\n    iconComponent: function iconComponent() {\n      return {\n        info: InfoCircleIcon,\n        success: CheckIcon,\n        warn: ExclamationTriangleIcon,\n        error: TimesCircleIcon\n      }[this.severity];\n    }\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"icon\", {}, function () {\n    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? 'span' : $options.iconComponent), mergeProps({\n      \"class\": _ctx.cx('icon')\n    }, _ctx.ptm('icon')), null, 16, [\"class\"]))];\n  }), createElementVNode(\"span\", mergeProps({\n    \"class\": _ctx.cx('text')\n  }, _ctx.ptm('text')), [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [createTextVNode(\"Â \")];\n  })], 16)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n",
      "start": 1756100531786,
      "end": 1756100531842,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100531842,
      "end": 1756100531842,
      "order": "normal"
    }
  ]
}
