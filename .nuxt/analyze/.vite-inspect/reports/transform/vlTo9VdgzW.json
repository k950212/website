{
  "resolvedId": "/Users/yunhao/Project/website/node_modules/.pnpm/vant@4.9.16_vue@3.5.11/node_modules/vant/es/back-top/BackTop.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watch, computed, Teleport, nextTick, onMounted, defineComponent, onDeactivated, onActivated, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, addUnit, inBrowser, numericProp, getScrollTop, getZIndexStyle, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { throttle } from \"../lazyload/vue-lazyload/util.mjs\";\nimport { useEventListener, getScrollParent } from \"@vant/use\";\nimport { Icon } from \"../icon/index.mjs\";\nconst [name, bem] = createNamespace(\"back-top\");\nconst backTopProps = {\n  right: numericProp,\n  bottom: numericProp,\n  zIndex: numericProp,\n  target: [String, Object],\n  offset: makeNumericProp(200),\n  immediate: Boolean,\n  teleport: {\n    type: [String, Object],\n    default: \"body\"\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  inheritAttrs: false,\n  props: backTopProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit,\n    slots,\n    attrs\n  }) {\n    let shouldReshow = false;\n    const show = ref(false);\n    const root = ref();\n    const scrollParent = ref();\n    const style = computed(() => extend(getZIndexStyle(props.zIndex), {\n      right: addUnit(props.right),\n      bottom: addUnit(props.bottom)\n    }));\n    const onClick = (event) => {\n      var _a;\n      emit(\"click\", event);\n      (_a = scrollParent.value) == null ? void 0 : _a.scrollTo({\n        top: 0,\n        behavior: props.immediate ? \"auto\" : \"smooth\"\n      });\n    };\n    const scroll = () => {\n      show.value = scrollParent.value ? getScrollTop(scrollParent.value) >= +props.offset : false;\n    };\n    const getTarget = () => {\n      const {\n        target\n      } = props;\n      if (typeof target === \"string\") {\n        const el = document.querySelector(target);\n        if (el) {\n          return el;\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(`[Vant] BackTop: target element \"${target}\" was not found, the BackTop component will not be rendered.`);\n        }\n      } else {\n        return target;\n      }\n    };\n    const updateTarget = () => {\n      if (inBrowser) {\n        nextTick(() => {\n          scrollParent.value = props.target ? getTarget() : getScrollParent(root.value);\n          scroll();\n        });\n      }\n    };\n    useEventListener(\"scroll\", throttle(scroll, 100), {\n      target: scrollParent\n    });\n    onMounted(updateTarget);\n    onActivated(() => {\n      if (shouldReshow) {\n        show.value = true;\n        shouldReshow = false;\n      }\n    });\n    onDeactivated(() => {\n      if (show.value && props.teleport) {\n        show.value = false;\n        shouldReshow = true;\n      }\n    });\n    watch(() => props.target, updateTarget);\n    return () => {\n      const Content = _createVNode(\"div\", _mergeProps({\n        \"ref\": !props.teleport ? root : void 0,\n        \"class\": bem({\n          active: show.value\n        }),\n        \"style\": style.value,\n        \"onClick\": onClick\n      }, attrs), [slots.default ? slots.default() : _createVNode(Icon, {\n        \"name\": \"back-top\",\n        \"class\": bem(\"icon\")\n      }, null)]);\n      if (props.teleport) {\n        return [_createVNode(\"div\", {\n          \"ref\": root,\n          \"class\": bem(\"placeholder\")\n        }, null), _createVNode(Teleport, {\n          \"to\": props.teleport\n        }, {\n          default: () => [Content]\n        })];\n      }\n      return Content;\n    };\n  }\n});\nexport {\n  backTopProps,\n  stdin_default as default\n};\n",
      "start": 1756100533358,
      "end": 1756100533396,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1756100533396,
      "end": 1756100533396,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { ref, watch, computed, Teleport, nextTick, onMounted, defineComponent, onDeactivated, onActivated, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, addUnit, inBrowser, numericProp, getScrollTop, getZIndexStyle, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { throttle } from \"../lazyload/vue-lazyload/util.mjs\";\nimport { useEventListener, getScrollParent } from \"@vant/use\";\nimport { Icon } from \"../icon/index.mjs\";\nconst [name, bem] = createNamespace(\"back-top\");\nconst backTopProps = {\n  right: numericProp,\n  bottom: numericProp,\n  zIndex: numericProp,\n  target: [String, Object],\n  offset: makeNumericProp(200),\n  immediate: Boolean,\n  teleport: {\n    type: [String, Object],\n    default: \"body\"\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  inheritAttrs: false,\n  props: backTopProps,\n  emits: [\"click\"],\n  setup(props, {\n    emit,\n    slots,\n    attrs\n  }) {\n    let shouldReshow = false;\n    const show = ref(false);\n    const root = ref();\n    const scrollParent = ref();\n    const style = computed(() => extend(getZIndexStyle(props.zIndex), {\n      right: addUnit(props.right),\n      bottom: addUnit(props.bottom)\n    }));\n    const onClick = (event) => {\n      var _a;\n      emit(\"click\", event);\n      (_a = scrollParent.value) == null ? void 0 : _a.scrollTo({\n        top: 0,\n        behavior: props.immediate ? \"auto\" : \"smooth\"\n      });\n    };\n    const scroll = () => {\n      show.value = scrollParent.value ? getScrollTop(scrollParent.value) >= +props.offset : false;\n    };\n    const getTarget = () => {\n      const {\n        target\n      } = props;\n      if (typeof target === \"string\") {\n        const el = document.querySelector(target);\n        if (el) {\n          return el;\n        }\n        if (false) {\n          console.error(`[Vant] BackTop: target element \"${target}\" was not found, the BackTop component will not be rendered.`);\n        }\n      } else {\n        return target;\n      }\n    };\n    const updateTarget = () => {\n      if (inBrowser) {\n        nextTick(() => {\n          scrollParent.value = props.target ? getTarget() : getScrollParent(root.value);\n          scroll();\n        });\n      }\n    };\n    useEventListener(\"scroll\", throttle(scroll, 100), {\n      target: scrollParent\n    });\n    onMounted(updateTarget);\n    onActivated(() => {\n      if (shouldReshow) {\n        show.value = true;\n        shouldReshow = false;\n      }\n    });\n    onDeactivated(() => {\n      if (show.value && props.teleport) {\n        show.value = false;\n        shouldReshow = true;\n      }\n    });\n    watch(() => props.target, updateTarget);\n    return () => {\n      const Content = _createVNode(\"div\", _mergeProps({\n        \"ref\": !props.teleport ? root : void 0,\n        \"class\": bem({\n          active: show.value\n        }),\n        \"style\": style.value,\n        \"onClick\": onClick\n      }, attrs), [slots.default ? slots.default() : _createVNode(Icon, {\n        \"name\": \"back-top\",\n        \"class\": bem(\"icon\")\n      }, null)]);\n      if (props.teleport) {\n        return [_createVNode(\"div\", {\n          \"ref\": root,\n          \"class\": bem(\"placeholder\")\n        }, null), _createVNode(Teleport, {\n          \"to\": props.teleport\n        }, {\n          default: () => [Content]\n        })];\n      }\n      return Content;\n    };\n  }\n});\nexport {\n  backTopProps,\n  stdin_default as default\n};\n",
      "start": 1756100533396,
      "end": 1756100533882,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1756100533882,
      "end": 1756100533882,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1756100533882,
      "end": 1756100533882,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1756100533882,
      "end": 1756100533882,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1756100533882,
      "end": 1756100533882,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1756100533884,
      "end": 1756100533884,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1756100533884,
      "end": 1756100533884,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1756100533884,
      "end": 1756100533884,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1756100533884,
      "end": 1756100533884,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1756100533884,
      "end": 1756100533884,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "vant:transform",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1756100533885,
      "end": 1756100533885,
      "order": "normal"
    }
  ]
}
